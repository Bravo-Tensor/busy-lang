{
  "id": "2025-07-23T21-16-42",
  "started": "2025-07-23T21:16:42.867Z",
  "status": "completed",
  "sourceBranch": "design/orgata-framework-architecture",
  "reconciliationBranch": "design/orgata-framework-architecture",
  "changes": [
    {
      "filepath": ".gitignore",
      "oldHash": "7ab80e5bf6ca767db315843622c1b0ac33c52a2a",
      "newHash": "7b01036f4165c9f3305d892e93400b31a4699b3d",
      "timestamp": "2025-07-23T21:16:40.924Z",
      "changeType": "content",
      "gitDiff": "diff --git a/.gitignore b/.gitignore\nindex 7ab80e5..7b01036 100644\n--- a/.gitignore\n+++ b/.gitignore\n@@ -1,10 +1,10 @@\n-*/node_modules\n-*/dist\n-*/build\n+**/node_modules\n+**/dist\n+**/build\n */.env\n */.env.local\n */.env.development.local\n */.env.test.local\n */.env.production.local\n */.next\n-*/.DS_Store\n\\ No newline at end of file\n+**/.DS_Store\n\\ No newline at end of file\n"
    },
    {
      "filepath": ".knit/dependencies.json",
      "oldHash": "e9ee62390582ef201f9815b590ef7431e4c7102e",
      "newHash": "d9e838ec873d4d5b4ea5dc1859a9c86881ad0233",
      "timestamp": "2025-07-23T21:16:40.960Z",
      "changeType": "content",
      "gitDiff": "diff --git a/.knit/dependencies.json b/.knit/dependencies.json\nindex e9ee623..d9e838e 100644\n--- a/.knit/dependencies.json\n+++ b/.knit/dependencies.json\n@@ -1609,8 +1609,119 @@\n           \"required\"\n         ]\n       }\n+    },\n+    \"design-docs/008-orgata-framework/FRAMEWORK_API_SPECIFICATION.md\": {\n+      \"watches\": [\n+        \"packages/orgata-framework/package.json\",\n+        \"packages/orgata-framework/src/types/index.ts\",\n+        \"packages/orgata-framework/src/core/Step.ts\",\n+        \"packages/orgata-framework/src/index.ts\"\n+      ],\n+      \"watchedBy\": [],\n+      \"reconciliationRules\": {\n+        \"requireReview\": [\n+          \"required\"\n+        ]\n+      }\n+    },\n+    \"packages/orgata-framework/package.json\": {\n+      \"watches\": [],\n+      \"watchedBy\": [\n+        \"design-docs/008-orgata-framework/FRAMEWORK_API_SPECIFICATION.md\"\n+      ],\n+      \"reconciliationRules\": {\n+        \"autoApplyThreshold\": 0.8,\n+        \"requireReview\": [\n+          \"required\"\n+        ]\n+      }\n+    },\n+    \"packages/orgata-framework/src/types/index.ts\": {\n+      \"watches\": [],\n+      \"watchedBy\": [\n+        \"design-docs/008-orgata-framework/FRAMEWORK_API_SPECIFICATION.md\"\n+      ],\n+      \"reconciliationRules\": {\n+        \"autoApplyThreshold\": 0.8,\n+        \"requireReview\": [\n+          \"required\"\n+        ]\n+      }\n+    },\n+    \"design-docs/008-orgata-framework/ORGATA_FRAMEWORK_ARCHITECTURE.md\": {\n+      \"watches\": [\n+        \"packages/orgata-framework/src/core/Process.ts\",\n+        \"packages/orgata-framework/src/state/ProcessState.ts\",\n+        \"packages/orgata-framework/README.md\"\n+      ],\n+      \"watchedBy\": [],\n+      \"reconciliationRules\": {\n+        \"requireReview\": [\n+          \"required\"\n+        ]\n+      }\n+    },\n+    \"packages/orgata-framework/src/core/Process.ts\": {\n+      \"watches\": [],\n+      \"watchedBy\": [\n+        \"design-docs/008-orgata-framework/ORGATA_FRAMEWORK_ARCHITECTURE.md\"\n+      ],\n+      \"reconciliationRules\": {\n+        \"autoApplyThreshold\": 0.8,\n+        \"requireReview\": [\n+          \"required\"\n+        ]\n+      }\n+    },\n+    \"packages/orgata-framework/src/core/Step.ts\": {\n+      \"watches\": [],\n+      \"watchedBy\": [\n+        \"design-docs/008-orgata-framework/FRAMEWORK_API_SPECIFICATION.md\"\n+      ],\n+      \"reconciliationRules\": {\n+        \"autoApplyThreshold\": 0.8,\n+        \"requireReview\": [\n+          \"required\"\n+        ]\n+      }\n+    },\n+    \"packages/orgata-framework/src/state/ProcessState.ts\": {\n+      \"watches\": [],\n+      \"watchedBy\": [\n+        \"design-docs/008-orgata-framework/ORGATA_FRAMEWORK_ARCHITECTURE.md\"\n+      ],\n+      \"reconciliationRules\": {\n+        \"autoApplyThreshold\": 0.8,\n+        \"requireReview\": [\n+          \"required\"\n+        ]\n+      }\n+    },\n+    \"packages/orgata-framework/src/index.ts\": {\n+      \"watches\": [],\n+      \"watchedBy\": [\n+        \"design-docs/008-orgata-framework/FRAMEWORK_API_SPECIFICATION.md\"\n+      ],\n+      \"reconciliationRules\": {\n+        \"autoApplyThreshold\": 0.8,\n+        \"requireReview\": [\n+          \"required\"\n+        ]\n+      }\n+    },\n+    \"packages/orgata-framework/README.md\": {\n+      \"watches\": [],\n+      \"watchedBy\": [\n+        \"design-docs/008-orgata-framework/ORGATA_FRAMEWORK_ARCHITECTURE.md\"\n+      ],\n+      \"reconciliationRules\": {\n+        \"autoApplyThreshold\": 0.8,\n+        \"requireReview\": [\n+          \"required\"\n+        ]\n+      }\n     }\n   },\n   \"version\": \"1.0.0\",\n-  \"lastUpdated\": \"2025-07-21T19:46:13.306Z\"\n+  \"lastUpdated\": \"2025-07-21T23:49:47.272Z\"\n }\n\\ No newline at end of file\n"
    },
    {
      "filepath": ".knit/reconciliation/2025-07-23T21-15-35.json",
      "oldHash": "",
      "newHash": "1ed8d822f5c1b9a86ca2f0b05ee3fba9092185e0",
      "timestamp": "2025-07-23T21:16:41.001Z",
      "changeType": "content",
      "gitDiff": "diff --git a/.knit/reconciliation/2025-07-23T21-15-35.json b/.knit/reconciliation/2025-07-23T21-15-35.json\nnew file mode 100644\nindex 0000000..1ed8d82\n--- /dev/null\n+++ b/.knit/reconciliation/2025-07-23T21-15-35.json\n@@ -0,0 +1,295 @@\n+{\n+  \"id\": \"2025-07-23T21-15-35\",\n+  \"started\": \"2025-07-23T21:15:35.289Z\",\n+  \"status\": \"completed\",\n+  \"sourceBranch\": \"design/orgata-framework-architecture\",\n+  \"reconciliationBranch\": \"design/orgata-framework-architecture\",\n+  \"changes\": [\n+    {\n+      \"filepath\": \".gitignore\",\n+      \"oldHash\": \"7ab80e5bf6ca767db315843622c1b0ac33c52a2a\",\n+      \"newHash\": \"7b01036f4165c9f3305d892e93400b31a4699b3d\",\n+      \"timestamp\": \"2025-07-23T21:15:34.590Z\",\n+      \"changeType\": \"content\",\n+      \"gitDiff\": \"diff --git a/.gitignore b/.gitignore\\nindex 7ab80e5..7b01036 100644\\n--- a/.gitignore\\n+++ b/.gitignore\\n@@ -1,10 +1,10 @@\\n-*/node_modules\\n-*/dist\\n-*/build\\n+**/node_modules\\n+**/dist\\n+**/build\\n */.env\\n */.env.local\\n */.env.development.local\\n */.env.test.local\\n */.env.production.local\\n */.next\\n-*/.DS_Store\\n\\\\ No newline at end of file\\n+**/.DS_Store\\n\\\\ No newline at end of file\\n\"\n+    },\n+    {\n+      \"filepath\": \".knit/dependencies.json\",\n+      \"oldHash\": \"e9ee62390582ef201f9815b590ef7431e4c7102e\",\n+      \"newHash\": \"d9e838ec873d4d5b4ea5dc1859a9c86881ad0233\",\n+      \"timestamp\": \"2025-07-23T21:15:34.630Z\",\n+      \"changeType\": \"content\",\n+      \"gitDiff\": \"diff --git a/.knit/dependencies.json b/.knit/dependencies.json\\nindex e9ee623..d9e838e 100644\\n--- a/.knit/dependencies.json\\n+++ b/.knit/dependencies.json\\n@@ -1609,8 +1609,119 @@\\n           \\\"required\\\"\\n         ]\\n       }\\n+    },\\n+    \\\"design-docs/008-orgata-framework/FRAMEWORK_API_SPECIFICATION.md\\\": {\\n+      \\\"watches\\\": [\\n+        \\\"packages/orgata-framework/package.json\\\",\\n+        \\\"packages/orgata-framework/src/types/index.ts\\\",\\n+        \\\"packages/orgata-framework/src/core/Step.ts\\\",\\n+        \\\"packages/orgata-framework/src/index.ts\\\"\\n+      ],\\n+      \\\"watchedBy\\\": [],\\n+      \\\"reconciliationRules\\\": {\\n+        \\\"requireReview\\\": [\\n+          \\\"required\\\"\\n+        ]\\n+      }\\n+    },\\n+    \\\"packages/orgata-framework/package.json\\\": {\\n+      \\\"watches\\\": [],\\n+      \\\"watchedBy\\\": [\\n+        \\\"design-docs/008-orgata-framework/FRAMEWORK_API_SPECIFICATION.md\\\"\\n+      ],\\n+      \\\"reconciliationRules\\\": {\\n+        \\\"autoApplyThreshold\\\": 0.8,\\n+        \\\"requireReview\\\": [\\n+          \\\"required\\\"\\n+        ]\\n+      }\\n+    },\\n+    \\\"packages/orgata-framework/src/types/index.ts\\\": {\\n+      \\\"watches\\\": [],\\n+      \\\"watchedBy\\\": [\\n+        \\\"design-docs/008-orgata-framework/FRAMEWORK_API_SPECIFICATION.md\\\"\\n+      ],\\n+      \\\"reconciliationRules\\\": {\\n+        \\\"autoApplyThreshold\\\": 0.8,\\n+        \\\"requireReview\\\": [\\n+          \\\"required\\\"\\n+        ]\\n+      }\\n+    },\\n+    \\\"design-docs/008-orgata-framework/ORGATA_FRAMEWORK_ARCHITECTURE.md\\\": {\\n+      \\\"watches\\\": [\\n+        \\\"packages/orgata-framework/src/core/Process.ts\\\",\\n+        \\\"packages/orgata-framework/src/state/ProcessState.ts\\\",\\n+        \\\"packages/orgata-framework/README.md\\\"\\n+      ],\\n+      \\\"watchedBy\\\": [],\\n+      \\\"reconciliationRules\\\": {\\n+        \\\"requireReview\\\": [\\n+          \\\"required\\\"\\n+        ]\\n+      }\\n+    },\\n+    \\\"packages/orgata-framework/src/core/Process.ts\\\": {\\n+      \\\"watches\\\": [],\\n+      \\\"watchedBy\\\": [\\n+        \\\"design-docs/008-orgata-framework/ORGATA_FRAMEWORK_ARCHITECTURE.md\\\"\\n+      ],\\n+      \\\"reconciliationRules\\\": {\\n+        \\\"autoApplyThreshold\\\": 0.8,\\n+        \\\"requireReview\\\": [\\n+          \\\"required\\\"\\n+        ]\\n+      }\\n+    },\\n+    \\\"packages/orgata-framework/src/core/Step.ts\\\": {\\n+      \\\"watches\\\": [],\\n+      \\\"watchedBy\\\": [\\n+        \\\"design-docs/008-orgata-framework/FRAMEWORK_API_SPECIFICATION.md\\\"\\n+      ],\\n+      \\\"reconciliationRules\\\": {\\n+        \\\"autoApplyThreshold\\\": 0.8,\\n+        \\\"requireReview\\\": [\\n+          \\\"required\\\"\\n+        ]\\n+      }\\n+    },\\n+    \\\"packages/orgata-framework/src/state/ProcessState.ts\\\": {\\n+      \\\"watches\\\": [],\\n+      \\\"watchedBy\\\": [\\n+        \\\"design-docs/008-orgata-framework/ORGATA_FRAMEWORK_ARCHITECTURE.md\\\"\\n+      ],\\n+      \\\"reconciliationRules\\\": {\\n+        \\\"autoApplyThreshold\\\": 0.8,\\n+        \\\"requireReview\\\": [\\n+          \\\"required\\\"\\n+        ]\\n+      }\\n+    },\\n+    \\\"packages/orgata-framework/src/index.ts\\\": {\\n+      \\\"watches\\\": [],\\n+      \\\"watchedBy\\\": [\\n+        \\\"design-docs/008-orgata-framework/FRAMEWORK_API_SPECIFICATION.md\\\"\\n+      ],\\n+      \\\"reconciliationRules\\\": {\\n+        \\\"autoApplyThreshold\\\": 0.8,\\n+        \\\"requireReview\\\": [\\n+          \\\"required\\\"\\n+        ]\\n+      }\\n+    },\\n+    \\\"packages/orgata-framework/README.md\\\": {\\n+      \\\"watches\\\": [],\\n+      \\\"watchedBy\\\": [\\n+        \\\"design-docs/008-orgata-framework/ORGATA_FRAMEWORK_ARCHITECTURE.md\\\"\\n+      ],\\n+      \\\"reconciliationRules\\\": {\\n+        \\\"autoApplyThreshold\\\": 0.8,\\n+        \\\"requireReview\\\": [\\n+          \\\"required\\\"\\n+        ]\\n+      }\\n     }\\n   },\\n   \\\"version\\\": \\\"1.0.0\\\",\\n-  \\\"lastUpdated\\\": \\\"2025-07-21T19:46:13.306Z\\\"\\n+  \\\"lastUpdated\\\": \\\"2025-07-21T23:49:47.272Z\\\"\\n }\\n\\\\ No newline at end of file\\n\"\n+    },\n+    {\n+      \"filepath\": \"design-docs/008-orgata-framework/CODE_GENERATION_PATTERNS.md\",\n+      \"oldHash\": \"\",\n+      \"newHash\": \"8e0486b0cbf18cf3d0e8b3bc6481dad503dfa288\",\n+      \"timestamp\": \"2025-07-23T21:15:34.674Z\",\n+      \"changeType\": \"content\",\n+      \"gitDiff\": \"diff --git a/design-docs/008-orgata-framework/CODE_GENERATION_PATTERNS.md b/design-docs/008-orgata-framework/CODE_GENERATION_PATTERNS.md\\nnew file mode 100644\\nindex 0000000..8e0486b\\n--- /dev/null\\n+++ b/design-docs/008-orgata-framework/CODE_GENERATION_PATTERNS.md\\n@@ -0,0 +1,665 @@\\n+# Code Generation Patterns for Orgata Framework\\n+\\n+**Created**: July 2025  \\n+**Status**: Implementation Specification  \\n+**Scope**: Templates and patterns for generating TypeScript framework code from BUSY files\\n+\\n+## Overview\\n+\\n+This document defines the specific patterns and templates used to transform BUSY file definitions into clean, readable TypeScript code that leverages the Orgata Framework APIs.\\n+\\n+## Generation Pipeline\\n+\\n+```\\n+BUSY AST → Content Analysis → Template Selection → Code Generation → Post-Processing\\n+```\\n+\\n+### Content Analysis Phase\\n+\\n+The compiler analyzes BUSY descriptions to extract semantic information for code generation:\\n+\\n+```typescript\\n+interface ContentAnalysis {\\n+  stepType: 'human' | 'agent' | 'algorithm';\\n+  dataRequirements: DataRequirement[];\\n+  uiComponents: UIComponentHint[];\\n+  businessLogic: BusinessLogicHint[];\\n+  validationRules: ValidationRule[];\\n+  complexity: 'simple' | 'moderate' | 'complex';\\n+}\\n+\\n+class ContentAnalyzer {\\n+  analyzeStepDescription(description: string): ContentAnalysis {\\n+    // Use LLM or rule-based system to extract:\\n+    // - Required input fields from description\\n+    // - Suggested UI components\\n+    // - Business rules and validation\\n+    // - Complexity indicators\\n+  }\\n+}\\n+```\\n+\\n+## Process Generation Templates\\n+\\n+### Main Process Class Template\\n+\\n+```handlebars\\n+{{>file-header}}\\n+import { Process, ProcessConfig, ProcessContext, ProcessResult } from '@orgata/framework';\\n+{{#each stepImports}}\\n+import { {{className}} } from './steps/{{fileName}}';\\n+{{/each}}\\n+\\n+/**\\n+ * {{description}}\\n+ * \\n+ * Generated from: {{busyFilePath}}\\n+ * Layer: {{layer}}\\n+ * Estimated Duration: {{estimatedDuration}}\\n+ */\\n+export class {{className}}Process extends Process {\\n+  constructor() {\\n+    super({\\n+      name: \\\"{{name}}\\\",\\n+      layer: \\\"{{layer}}\\\",\\n+      estimatedDuration: \\\"{{estimatedDuration}}\\\",\\n+      description: \\\"{{description}}\\\",\\n+      metadata: {\\n+        generatedFrom: \\\"{{busyFilePath}}\\\",\\n+        generatedAt: \\\"{{generatedAt}}\\\",\\n+        busyVersion: \\\"{{busyVersion}}\\\"\\n+      }\\n+    });\\n+    \\n+    // Steps defined in BUSY file\\n+    {{#each steps}}\\n+    this.addStep(new {{className}}());\\n+    {{/each}}\\n+  }\\n+  \\n+  async execute(context: ProcessContext): Promise<ProcessResult> {\\n+    // Framework handles step-by-step execution\\n+    return await this.executeSteps(context);\\n+  }\\n+  \\n+  {{#if hasCustomLogic}}\\n+  // Custom business logic methods (modify as needed)\\n+  {{#each customMethods}}\\n+  {{>custom-method}}\\n+  {{/each}}\\n+  {{/if}}\\n+}\\n+```\\n+\\n+## Step Generation Templates\\n+\\n+### HumanStep Template\\n+\\n+```handlebars\\n+{{>file-header}}\\n+import { HumanStep, HumanStepConfig, StepContext, StepResult, FieldType } from '@orgata/framework';\\n+\\n+/**\\n+ * {{description}}\\n+ * \\n+ * {{#if generatedFields}}\\n+ * Generated fields based on description analysis:\\n+ * {{#each generatedFields}}\\n+ * - {{name}}: {{description}}\\n+ * {{/each}}\\n+ * {{/if}}\\n+ */\\n+export class {{className}}Step extends HumanStep {\\n+  constructor() {\\n+    super({\\n+      id: '{{id}}',\\n+      name: '{{name}}',\\n+      description: '{{description}}',\\n+      model: {\\n+        fields: [\\n+          {{#each fields}}\\n+          {\\n+            id: '{{id}}',\\n+            name: '{{name}}',\\n+            type: FieldType.{{type}},\\n+            label: '{{label}}',\\n+            placeholder: '{{placeholder}}',\\n+            helpText: '{{helpText}}',\\n+            required: {{required}},\\n+            {{#if validation}}\\n+            validation: [\\n+              {{#each validation}}\\n+              { type: '{{type}}', {{#if value}}value: {{value}}, {{/if}}message: '{{message}}' }{{#unless @last}},{{/unless}}\\n+              {{/each}}\\n+            ],\\n+            {{/if}}\\n+            {{#if options}}\\n+            options: [\\n+              {{#each options}}\\n+              { value: '{{value}}', label: '{{label}}' }{{#unless @last}},{{/unless}}\\n+              {{/each}}\\n+            ],\\n+            {{/if}}\\n+            {{#if defaultValue}}\\n+            defaultValue: {{jsonValue defaultValue}},\\n+            {{/if}}\\n+            {{#if conditionalLogic}}\\n+            conditionalLogic: {{jsonValue conditionalLogic}},\\n+            {{/if}}\\n+          }{{#unless @last}},{{/unless}}\\n+          {{/each}}\\n+        ],\\n+        layout: {\\n+          type: '{{layout.type}}',\\n+          columns: {{layout.columns}},\\n+          sections: {{jsonValue layout.sections}}\\n+        },\\n+        validation: {\\n+          strategy: '{{validation.strategy}}',\\n+          showErrorsOn: '{{validation.showErrorsOn}}'\\n+        }\\n+      },\\n+      view: {\\n+        component: '{{view.component}}',\\n+        styling: {{jsonValue view.styling}},\\n+        behavior: {{jsonValue view.behavior}}\\n+      }\\n+    });\\n+  }\\n+  \\n+  async execute(context: StepContext): Promise<StepResult> {\\n+    // Framework handles UI rendering and data collection\\n+    const userInput = await this.collectUserInput(context);\\n+    \\n+    {{#if hasValidation}}\\n+    // Custom validation (modify as needed)\\n+    const validationResult = this.validateInput(userInput);\\n+    if (!validationResult.valid) {\\n+      return {\\n+        success: false,\\n+        errors: validationResult.errors,\\n+        data: userInput\\n+      };\\n+    }\\n+    {{/if}}\\n+    \\n+    {{#if hasBusinessLogic}}\\n+    // Custom business logic (implement as needed)\\n+    const processedData = await this.processBusinessLogic(userInput, context);\\n+    {{else}}\\n+    const processedData = userInput;\\n+    {{/if}}\\n+    \\n+    return {\\n+      success: true,\\n+      data: processedData,\\n+      metadata: {\\n+        completedAt: new Date(),\\n+        userAgent: context.userAgent,\\n+        duration: this.calculateDuration(context.startTime)\\n+      }{{#if hasNextStep}},\\n+      nextStepId: this.determineNextStep(processedData){{/if}}\\n+    };\\n+  }\\n+  \\n+  {{#if hasValidation}}\\n+  private validateInput(input: any): ValidationResult {\\n+    // TODO: Implement custom validation logic\\n+    return { valid: true, errors: [] };\\n+  }\\n+  {{/if}}\\n+  \\n+  {{#if hasBusinessLogic}}\\n+  private async processBusinessLogic(input: any, context: StepContext): Promise<any> {\\n+    // TODO: Implement business logic based on BUSY description:\\n+    // {{description}}\\n+    return input;\\n+  }\\n+  {{/if}}\\n+  \\n+  {{#if hasNextStep}}\\n+  private determineNextStep(data: any): string | undefined {\\n+    // TODO: Implement conditional flow logic\\n+    return undefined;\\n+  }\\n+  {{/if}}\\n+}\\n+```\\n+\\n+### AgentStep Template\\n+\\n+```handlebars\\n+{{>file-header}}\\n+import { AgentStep, AgentStepConfig, StepContext, StepResult } from '@orgata/framework';\\n+\\n+/**\\n+ * {{description}}\\n+ * \\n+ * AI Agent Task: {{agentTask}}\\n+ * Expected Output: {{expectedOutput}}\\n+ */\\n+export class {{className}}Step extends AgentStep {\\n+  constructor() {\\n+    super({\\n+      id: '{{id}}',\\n+      name: '{{name}}',\\n+      description: '{{description}}',\\n+      prompt: {\\n+        systemPrompt: `{{systemPrompt}}`,\\n+        userPrompt: `{{userPrompt}}`,\\n+        context: {\\n+          businessDomain: '{{businessDomain}}',\\n+          expectedFormat: '{{expectedFormat}}',\\n+          qualityCriteria: {{jsonValue qualityCriteria}}\\n+        },\\n+        constraints: {\\n+          maxTokens: {{maxTokens}},\\n+          temperature: {{temperature}},\\n+          requireStructuredOutput: {{requireStructuredOutput}}\\n+        }\\n+      },\\n+      context: {\\n+        availableData: {{jsonValue availableData}},\\n+        requiredOutputs: {{jsonValue requiredOutputs}},\\n+        businessRules: {{jsonValue businessRules}}\\n+      }\\n+    });\\n+  }\\n+  \\n+  async execute(context: StepContext): Promise<StepResult> {\\n+    // Build prompt with current context\\n+    const enrichedPrompt = await this.buildContextualPrompt(context);\\n+    \\n+    // Execute AI agent\\n+    const agentResponse = await this.executeAgent(enrichedPrompt, this.context);\\n+    \\n+    // Validate and process response\\n+    const validationResult = this.validateAgentOutput(agentResponse);\\n+    if (!validationResult.valid) {\\n+      return {\\n+        success: false,\\n+        errors: validationResult.errors,\\n+        data: agentResponse,\\n+        metadata: {\\n+          requiresHumanReview: true,\\n+          confidence: agentResponse.confidence\\n+        }\\n+      };\\n+    }\\n+    \\n+    {{#if hasPostProcessing}}\\n+    // Post-process agent output (modify as needed)\\n+    const processedData = await this.postProcessOutput(agentResponse, context);\\n+    {{else}}\\n+    const processedData = agentResponse.structuredData || agentResponse.content;\\n+    {{/if}}\\n+    \\n+    return {\\n+      success: true,\\n+      data: processedData,\\n+      metadata: {\\n+        agentConfidence: agentResponse.confidence,\\n+        reasoning: agentResponse.reasoning,\\n+        completedAt: new Date(),\\n+        requiresReview: agentResponse.confidence < 0.8\\n+      }\\n+    };\\n+  }\\n+  \\n+  private async buildContextualPrompt(context: StepContext): string {\\n+    // Build prompt with available context data\\n+    const contextData = this.extractRelevantContext(context);\\n+    \\n+    return this.prompt.userPrompt\\n+      .replace(/\\\\{\\\\{([^}]+)\\\\}\\\\}/g, (match, key) => {\\n+        return contextData[key] || match;\\n+      });\\n+  }\\n+  \\n+  private extractRelevantContext(context: StepContext): Record<string, any> {\\n+    // TODO: Extract relevant data from previous steps\\n+    // Based on BUSY description: {{description}}\\n+    \\n+    return {\\n+      {{#each contextMappings}}\\n+      {{key}}: context.previousStepResults.get('{{sourceStep}}')?.data?.{{sourceField}} || 'Not available',\\n+      {{/each}}\\n+      processContext: context.businessContext\\n+    };\\n+  }\\n+  \\n+  {{#if hasPostProcessing}}\\n+  private async postProcessOutput(response: AgentResponse, context: StepContext): Promise<any> {\\n+    // TODO: Implement post-processing logic\\n+    return response.structuredData;\\n+  }\\n+  {{/if}}\\n+}\\n+```\\n+\\n+### AlgorithmStep Template\\n+\\n+```handlebars\\n+{{>file-header}}\\n+import { AlgorithmStep, AlgorithmStepConfig, StepContext, StepResult } from '@orgata/framework';\\n+\\n+/**\\n+ * {{description}}\\n+ * \\n+ * Algorithm: {{algorithmType}}\\n+ * Inputs: {{inputs}}\\n+ * Outputs: {{outputs}}\\n+ */\\n+export class {{className}}Step extends AlgorithmStep {\\n+  constructor() {\\n+    super({\\n+      id: '{{id}}',\\n+      name: '{{name}}',\\n+      description: '{{description}}',\\n+      parameters: {\\n+        {{#each parameters}}\\n+        {{name}}: {{jsonValue value}},\\n+        {{/each}}\\n+      },\\n+      implementation: {\\n+        type: '{{implementationType}}',\\n+        config: {{jsonValue implementationConfig}}\\n+      }\\n+    });\\n+  }\\n+  \\n+  async execute(context: StepContext): Promise<StepResult> {\\n+    try {\\n+      // Extract required inputs\\n+      const algorithmInput = this.extractInputs(context);\\n+      \\n+      // Validate inputs\\n+      const inputValidation = this.validateInputs(algorithmInput);\\n+      if (!inputValidation.valid) {\\n+        return {\\n+          success: false,\\n+          errors: inputValidation.errors,\\n+          data: algorithmInput\\n+        };\\n+      }\\n+      \\n+      // Execute algorithm\\n+      const result = await this.executeAlgorithm(algorithmInput);\\n+      \\n+      // Validate outputs\\n+      const outputValidation = this.validateOutputs(result);\\n+      if (!outputValidation.valid) {\\n+        return {\\n+          success: false,\\n+          errors: outputValidation.errors,\\n+          data: result,\\n+          metadata: { requiresManualReview: true }\\n+        };\\n+      }\\n+      \\n+      return {\\n+        success: true,\\n+        data: result,\\n+        metadata: {\\n+          algorithmVersion: '{{algorithmVersion}}',\\n+          executionTime: this.getExecutionTime(),\\n+          completedAt: new Date()\\n+        }\\n+      };\\n+      \\n+    } catch (error) {\\n+      return {\\n+        success: false,\\n+        errors: [{ message: error.message, code: 'ALGORITHM_ERROR' }],\\n+        data: null,\\n+        metadata: { \\n+          requiresManualIntervention: true,\\n+          error: error.toString()\\n+        }\\n+      };\\n+    }\\n+  }\\n+  \\n+  private extractInputs(context: StepContext): AlgorithmInput {\\n+    // TODO: Extract algorithm inputs from context\\n+    // Based on BUSY description: {{description}}\\n+    \\n+    return {\\n+      {{#each inputMappings}}\\n+      {{name}}: context.previousStepResults.get('{{sourceStep}}')?.data?.{{sourceField}},\\n+      {{/each}}\\n+      {{#each staticInputs}}\\n+      {{name}}: {{jsonValue value}},\\n+      {{/each}}\\n+    };\\n+  }\\n+  \\n+  private async executeAlgorithm(input: AlgorithmInput): Promise<AlgorithmOutput> {\\n+    // TODO: Implement algorithm based on BUSY description:\\n+    // {{description}}\\n+    \\n+    {{#if algorithmHints}}\\n+    // Algorithm hints from description analysis:\\n+    {{#each algorithmHints}}\\n+    // - {{.}}\\n+    {{/each}}\\n+    {{/if}}\\n+    \\n+    throw new Error('Algorithm implementation required');\\n+  }\\n+  \\n+  private validateInputs(input: AlgorithmInput): ValidationResult {\\n+    const errors: ValidationError[] = [];\\n+    \\n+    {{#each requiredInputs}}\\n+    if (!input.{{name}}) {\\n+      errors.push({ field: '{{name}}', message: '{{name}} is required for {{../../name}}' });\\n+    }\\n+    {{/each}}\\n+    \\n+    {{#each inputValidations}}\\n+    if (input.{{field}} && {{condition}}) {\\n+      errors.push({ field: '{{field}}', message: '{{message}}' });\\n+    }\\n+    {{/each}}\\n+    \\n+    return { valid: errors.length === 0, errors };\\n+  }\\n+  \\n+  private validateOutputs(output: AlgorithmOutput): ValidationResult {\\n+    // TODO: Validate algorithm outputs\\n+    return { valid: true, errors: [] };\\n+  }\\n+}\\n+```\\n+\\n+## Supporting File Templates\\n+\\n+### Index File Template\\n+\\n+```handlebars\\n+{{>file-header}}\\n+// Generated process exports\\n+export { {{className}}Process } from './{{fileName}}Process';\\n+\\n+// Generated step exports\\n+{{#each steps}}\\n+export { {{className}} } from './steps/{{fileName}}';\\n+{{/each}}\\n+\\n+// Generated types\\n+export * from './types';\\n+\\n+// Process metadata\\n+export const PROCESS_METADATA = {\\n+  name: '{{processName}}',\\n+  version: '{{version}}',\\n+  generatedAt: '{{generatedAt}}',\\n+  busySource: '{{busyFilePath}}'\\n+};\\n+```\\n+\\n+### Types File Template\\n+\\n+```handlebars\\n+{{>file-header}}\\n+// Generated types for {{processName}}\\n+\\n+{{#each customTypes}}\\n+export interface {{name}} {\\n+  {{#each properties}}\\n+  {{name}}{{#unless required}}?{{/unless}}: {{type}};\\n+  {{/each}}\\n+}\\n+\\n+{{/each}}\\n+\\n+{{#each enums}}\\n+export enum {{name}} {\\n+  {{#each values}}\\n+  {{key}} = '{{value}}'{{#unless @last}},{{/unless}}\\n+  {{/each}}\\n+}\\n+\\n+{{/each}}\\n+\\n+// Step data interfaces\\n+{{#each steps}}\\n+export interface {{className}}Data {\\n+  {{#each dataFields}}\\n+  {{name}}{{#unless required}}?{{/unless}}: {{type}};\\n+  {{/each}}\\n+}\\n+\\n+{{/each}}\\n+```\\n+\\n+## Content Analysis Rules\\n+\\n+### Field Extraction Rules\\n+\\n+```typescript\\n+const FIELD_EXTRACTION_RULES = [\\n+  {\\n+    pattern: /collect|gather|obtain.*?(email|contact)/i,\\n+    generates: { type: 'email', name: 'contactEmail', required: true }\\n+  },\\n+  {\\n+    pattern: /budget|cost|price|amount/i,\\n+    generates: { type: 'currency', name: 'budget', required: true }\\n+  },\\n+  {\\n+    pattern: /deadline|due date|timeline|completion date/i,\\n+    generates: { type: 'date', name: 'deadline', required: false }\\n+  },\\n+  {\\n+    pattern: /description|notes|comments|details/i,\\n+    generates: { type: 'textarea', name: 'description', required: false }\\n+  },\\n+  {\\n+    pattern: /phone|telephone|mobile/i,\\n+    generates: { type: 'phone', name: 'phoneNumber', required: false }\\n+  },\\n+  {\\n+    pattern: /website|url|link/i,\\n+    generates: { type: 'url', name: 'website', required: false }\\n+  }\\n+];\\n+```\\n+\\n+### UI Component Hints\\n+\\n+```typescript\\n+const UI_COMPONENT_RULES = [\\n+  {\\n+    condition: 'fieldCount <= 3',\\n+    suggests: 'single-column-form'\\n+  },\\n+  {\\n+    condition: 'fieldCount > 6',\\n+    suggests: 'multi-step-wizard'\\n+  },\\n+  {\\n+    condition: 'hasFileUpload',\\n+    suggests: 'drag-drop-form'\\n+  },\\n+  {\\n+    condition: 'hasComplexData',\\n+    suggests: 'tabbed-form'\\n+  }\\n+];\\n+```\\n+\\n+### Business Logic Extraction\\n+\\n+```typescript\\n+const BUSINESS_LOGIC_PATTERNS = [\\n+  {\\n+    pattern: /calculate|compute|determine/i,\\n+    type: 'calculation',\\n+    generates: 'algorithm_step'\\n+  },\\n+  {\\n+    pattern: /analyze|evaluate|assess/i,\\n+    type: 'analysis',\\n+    generates: 'agent_step'\\n+  },\\n+  {\\n+    pattern: /review|approve|validate/i,\\n+    type: 'approval',\\n+    generates: 'human_step'\\n+  },\\n+  {\\n+    pattern: /generate|create|produce/i,\\n+    type: 'generation',\\n+    generates: 'agent_step'\\n+  }\\n+];\\n+```\\n+\\n+## Post-Processing\\n+\\n+### Code Formatting\\n+\\n+```typescript\\n+class CodeFormatter {\\n+  formatGeneratedCode(code: string): string {\\n+    // Apply Prettier formatting\\n+    // Add consistent imports\\n+    // Organize code structure\\n+    // Add helpful comments\\n+  }\\n+  \\n+  addImports(code: string, dependencies: string[]): string {\\n+    // Add necessary framework imports\\n+    // Sort imports alphabetically\\n+    // Remove unused imports\\n+  }\\n+  \\n+  addDocumentation(code: string, metadata: GenerationMetadata): string {\\n+    // Add JSDoc comments\\n+    // Include generation metadata\\n+    // Add TODO comments for implementation\\n+  }\\n+}\\n+```\\n+\\n+### Quality Validation\\n+\\n+```typescript\\n+class GeneratedCodeValidator {\\n+  validateTypeScript(code: string): ValidationResult {\\n+    // Check TypeScript compilation\\n+    // Validate framework API usage\\n+    // Ensure type safety\\n+  }\\n+  \\n+  validateFrameworkUsage(code: string): ValidationResult {\\n+    // Verify correct framework patterns\\n+    // Check required method implementations\\n+    // Validate configuration objects\\n+  }\\n+}\\n+```\\n+\\n+This comprehensive set of patterns and templates provides the foundation for generating clean, maintainable TypeScript code from BUSY file definitions while preserving the flexibility and intelligent override capabilities of the Orgata Framework.\\n\\\\ No newline at end of file\\n\"\n+    },\n+    {\n+      \"filepath\": \"design-docs/008-orgata-framework/COMPILER_MODIFICATIONS.md\",\n+      \"oldHash\": \"\",\n+      \"newHash\": \"34abbb99968053883754053580ea58a11ab585ed\",\n+      \"timestamp\": \"2025-07-23T21:15:34.713Z\",\n+      \"changeType\": \"content\",\n+      \"gitDiff\": \"diff --git a/design-docs/008-orgata-framework/COMPILER_MODIFICATIONS.md b/design-docs/008-orgata-framework/COMPILER_MODIFICATIONS.md\\nnew file mode 100644\\nindex 0000000..34abbb9\\n--- /dev/null\\n+++ b/design-docs/008-orgata-framework/COMPILER_MODIFICATIONS.md\\n@@ -0,0 +1,659 @@\\n+# BUSY Compiler Modifications for Framework Output\\n+\\n+**Created**: July 2025  \\n+**Status**: Implementation Specification  \\n+**Scope**: Detailed modifications needed to transform BUSY compiler from YAML generation to TypeScript framework code generation\\n+\\n+## Overview\\n+\\n+This document outlines the specific changes needed to modify the existing BUSY compiler to generate TypeScript framework code instead of YAML configuration files.\\n+\\n+## Current Compiler Architecture Analysis\\n+\\n+### Existing Pipeline\\n+\\n+Looking at the current compiler structure:\\n+\\n+```\\n+compiler/src/\\n+├── core/\\n+│   ├── scanner.ts      # File discovery and tokenization\\n+│   ├── parser.ts       # YAML parsing and validation\\n+│   └── builder.ts      # AST construction\\n+├── ast/\\n+│   └── builder.ts      # AST node creation\\n+├── symbols/\\n+│   └── table.ts        # Symbol table management\\n+├── cli/\\n+│   └── types.ts        # CLI interface types\\n+└── index.ts           # Public API\\n+```\\n+\\n+**Current Flow**: BUSY Files → Scanner → Parser → AST → Symbol Table → CLI Output\\n+\\n+**Target Flow**: BUSY Files → Scanner → Parser → AST → Content Analyzer → Code Generator → TypeScript Output\\n+\\n+## Required Modifications\\n+\\n+### 1. New Code Generation Pipeline\\n+\\n+#### Add Content Analysis Phase\\n+\\n+```typescript\\n+// compiler/src/analysis/content-analyzer.ts\\n+export class ContentAnalyzer {\\n+  async analyzeProcess(ast: BusyAST): Promise<ProcessAnalysis> {\\n+    return {\\n+      processMetadata: this.extractProcessMetadata(ast),\\n+      steps: await this.analyzeSteps(ast.steps),\\n+      dependencies: this.analyzeDependencies(ast),\\n+      businessRules: this.extractBusinessRules(ast)\\n+    };\\n+  }\\n+  \\n+  private async analyzeSteps(steps: StepNode[]): Promise<StepAnalysis[]> {\\n+    return Promise.all(steps.map(step => this.analyzeStep(step)));\\n+  }\\n+  \\n+  private async analyzeStep(step: StepNode): Promise<StepAnalysis> {\\n+    // Use LLM or rule-based system to analyze step descriptions\\n+    const analysis = await this.extractStepMetadata(step);\\n+    \\n+    return {\\n+      stepType: this.determineStepType(step, analysis),\\n+      dataRequirements: this.extractDataRequirements(step.description),\\n+      uiHints: this.generateUIHints(step.description),\\n+      businessLogic: this.extractBusinessLogic(step.description),\\n+      validationRules: this.extractValidationRules(step),\\n+      complexity: this.assessComplexity(step)\\n+    };\\n+  }\\n+  \\n+  private determineStepType(step: StepNode, analysis: any): StepType {\\n+    // Determine if step should be Human, Agent, or Algorithm\\n+    if (step.type) return step.type; // Explicit in BUSY file\\n+    \\n+    // Infer from description analysis\\n+    if (analysis.requiresUserInput) return 'human';\\n+    if (analysis.requiresAIAnalysis) return 'agent';\\n+    if (analysis.requiresCalculation) return 'algorithm';\\n+    \\n+    return 'human'; // Default fallback\\n+  }\\n+}\\n+```\\n+\\n+#### Add Code Generation Phase\\n+\\n+```typescript\\n+// compiler/src/generation/code-generator.ts\\n+export class FrameworkCodeGenerator {\\n+  constructor(\\n+    private templateEngine: TemplateEngine,\\n+    private contentAnalyzer: ContentAnalyzer\\n+  ) {}\\n+  \\n+  async generateProcess(analysis: ProcessAnalysis): Promise<GeneratedFiles> {\\n+    const files = new Map<string, string>();\\n+    \\n+    // Generate main process class\\n+    const processCode = await this.generateProcessClass(analysis);\\n+    files.set(`${analysis.processMetadata.fileName}Process.ts`, processCode);\\n+    \\n+    // Generate step classes\\n+    for (const stepAnalysis of analysis.steps) {\\n+      const stepCode = await this.generateStepClass(stepAnalysis);\\n+      files.set(`steps/${stepAnalysis.fileName}.ts`, stepCode);\\n+    }\\n+    \\n+    // Generate supporting files\\n+    files.set('index.ts', await this.generateIndexFile(analysis));\\n+    files.set('types.ts', await this.generateTypesFile(analysis));\\n+    \\n+    return { files, metadata: this.generateMetadata(analysis) };\\n+  }\\n+  \\n+  private async generateProcessClass(analysis: ProcessAnalysis): Promise<string> {\\n+    const template = await this.templateEngine.loadTemplate('process.hbs');\\n+    \\n+    return this.templateEngine.render(template, {\\n+      className: analysis.processMetadata.className,\\n+      name: analysis.processMetadata.name,\\n+      description: analysis.processMetadata.description,\\n+      layer: analysis.processMetadata.layer,\\n+      estimatedDuration: analysis.processMetadata.estimatedDuration,\\n+      steps: analysis.steps.map(step => ({\\n+        className: step.className,\\n+        fileName: step.fileName\\n+      })),\\n+      busyFilePath: analysis.processMetadata.sourceFile,\\n+      generatedAt: new Date().toISOString()\\n+    });\\n+  }\\n+  \\n+  private async generateStepClass(stepAnalysis: StepAnalysis): Promise<string> {\\n+    const templateName = `${stepAnalysis.stepType}-step.hbs`;\\n+    const template = await this.templateEngine.loadTemplate(templateName);\\n+    \\n+    return this.templateEngine.render(template, {\\n+      className: stepAnalysis.className,\\n+      id: stepAnalysis.id,\\n+      name: stepAnalysis.name,\\n+      description: stepAnalysis.description,\\n+      ...this.generateStepSpecificData(stepAnalysis)\\n+    });\\n+  }\\n+  \\n+  private generateStepSpecificData(stepAnalysis: StepAnalysis): any {\\n+    switch (stepAnalysis.stepType) {\\n+      case 'human':\\n+        return this.generateHumanStepData(stepAnalysis);\\n+      case 'agent':\\n+        return this.generateAgentStepData(stepAnalysis);\\n+      case 'algorithm':\\n+        return this.generateAlgorithmStepData(stepAnalysis);\\n+      default:\\n+        throw new Error(`Unknown step type: ${stepAnalysis.stepType}`);\\n+    }\\n+  }\\n+}\\n+```\\n+\\n+### 2. Enhanced AST Node Types\\n+\\n+#### Extend Existing AST Types\\n+\\n+```typescript\\n+// compiler/src/ast/nodes.ts (additions to existing file)\\n+\\n+// Extend existing ProcessNode\\n+export interface ProcessNode extends BaseNode {\\n+  // ... existing properties\\n+  \\n+  // New properties for framework generation\\n+  framework?: FrameworkConfig;\\n+  customMethods?: CustomMethodNode[];\\n+  businessRules?: BusinessRuleNode[];\\n+}\\n+\\n+// Extend existing StepNode  \\n+export interface StepNode extends BaseNode {\\n+  // ... existing properties\\n+  \\n+  // Enhanced properties for code generation\\n+  stepType?: 'human' | 'agent' | 'algorithm';\\n+  contentAnalysis?: StepContentAnalysis;\\n+  generatedFields?: GeneratedField[];\\n+  uiHints?: UIHint[];\\n+  businessLogic?: BusinessLogicHint[];\\n+}\\n+\\n+// New node types for framework generation\\n+export interface FrameworkConfig {\\n+  customValidation?: ValidationRule[];\\n+  permissions?: PermissionRule[];\\n+  auditLevel?: 'basic' | 'detailed' | 'comprehensive';\\n+}\\n+\\n+export interface CustomMethodNode extends BaseNode {\\n+  name: string;\\n+  parameters: ParameterNode[];\\n+  returnType: string;\\n+  implementation?: string;\\n+}\\n+\\n+export interface BusinessRuleNode extends BaseNode {\\n+  condition: string;\\n+  action: string;\\n+  priority: number;\\n+}\\n+\\n+export interface GeneratedField {\\n+  name: string;\\n+  type: FieldType;\\n+  label: string;\\n+  required: boolean;\\n+  validation?: ValidationRule[];\\n+  derivedFrom: string; // Which part of description generated this\\n+}\\n+\\n+export interface UIHint {\\n+  component: string;\\n+  layout: string;\\n+  styling?: Record<string, any>;\\n+  behavior?: Record<string, any>;\\n+}\\n+\\n+export interface BusinessLogicHint {\\n+  type: 'calculation' | 'validation' | 'transformation' | 'analysis';\\n+  description: string;\\n+  suggestedImplementation?: string;\\n+  complexity: 'simple' | 'moderate' | 'complex';\\n+}\\n+```\\n+\\n+### 3. Modified Compiler Entry Point\\n+\\n+#### Update Main Compiler Class\\n+\\n+```typescript\\n+// compiler/src/index.ts (modifications to existing)\\n+\\n+export class BusyCompiler {\\n+  private config: CompilerConfig;\\n+  private contentAnalyzer: ContentAnalyzer;\\n+  private codeGenerator: FrameworkCodeGenerator;\\n+  \\n+  constructor(config?: Partial<CompilerConfig>) {\\n+    this.config = { ...DEFAULT_CONFIG, ...config };\\n+    this.contentAnalyzer = new ContentAnalyzer(this.config);\\n+    this.codeGenerator = new FrameworkCodeGenerator(\\n+      new TemplateEngine(),\\n+      this.contentAnalyzer\\n+    );\\n+  }\\n+  \\n+  /**\\n+   * Compile BUSY repository to framework code\\n+   */\\n+  async compileToFramework(sourcePath: string, outputPath: string): Promise<FrameworkCompilationResult> {\\n+    // Phase 1: Scan and Parse (existing)\\n+    const scanner = new Scanner(this.config);\\n+    const scanResult = await scanner.scan(sourcePath);\\n+    \\n+    const parser = new Parser(this.config);\\n+    const parseResult = await parser.parse(scanResult);\\n+    \\n+    // Phase 2: Build AST (existing)\\n+    const astBuilder = new ASTBuilder();\\n+    const buildResult = await astBuilder.build(parseResult);\\n+    \\n+    // Phase 3: Content Analysis (new)\\n+    const analysisResults: ProcessAnalysis[] = [];\\n+    for (const busyFile of buildResult.busyFiles) {\\n+      const analysis = await this.contentAnalyzer.analyzeProcess(busyFile.ast);\\n+      analysisResults.push(analysis);\\n+    }\\n+    \\n+    // Phase 4: Code Generation (new)\\n+    const generationResults: GeneratedFiles[] = [];\\n+    for (const analysis of analysisResults) {\\n+      const generated = await this.codeGenerator.generateProcess(analysis);\\n+      generationResults.push(generated);\\n+      \\n+      // Write generated files to output directory\\n+      await this.writeGeneratedFiles(generated, outputPath);\\n+    }\\n+    \\n+    return {\\n+      scanResult,\\n+      parseResult, \\n+      buildResult,\\n+      analysisResults,\\n+      generationResults,\\n+      summary: this.createFrameworkSummary(generationResults)\\n+    };\\n+  }\\n+  \\n+  private async writeGeneratedFiles(generated: GeneratedFiles, outputPath: string): Promise<void> {\\n+    for (const [filePath, content] of generated.files) {\\n+      const fullPath = path.join(outputPath, filePath);\\n+      await fs.ensureDir(path.dirname(fullPath));\\n+      await fs.writeFile(fullPath, content, 'utf-8');\\n+    }\\n+  }\\n+}\\n+```\\n+\\n+### 4. Template Engine Integration\\n+\\n+#### Handlebars Template System\\n+\\n+```typescript\\n+// compiler/src/generation/template-engine.ts\\n+export class TemplateEngine {\\n+  private handlebars: typeof Handlebars;\\n+  private templateCache: Map<string, HandlebarsTemplateDelegate>;\\n+  \\n+  constructor() {\\n+    this.handlebars = Handlebars.create();\\n+    this.templateCache = new Map();\\n+    this.registerHelpers();\\n+  }\\n+  \\n+  private registerHelpers(): void {\\n+    // Custom helpers for code generation\\n+    this.handlebars.registerHelper('camelCase', (str: string) => {\\n+      return str.replace(/-([a-z])/g, (g) => g[1].toUpperCase());\\n+    });\\n+    \\n+    this.handlebars.registerHelper('pascalCase', (str: string) => {\\n+      return str.replace(/(^|-)([a-z])/g, (g) => g.slice(-1).toUpperCase());\\n+    });\\n+    \\n+    this.handlebars.registerHelper('jsonValue', (value: any) => {\\n+      return JSON.stringify(value, null, 2);\\n+    });\\n+    \\n+    this.handlebars.registerHelper('formatDate', (date: Date) => {\\n+      return date.toISOString();\\n+    });\\n+    \\n+    // Framework-specific helpers\\n+    this.handlebars.registerHelper('fieldType', (type: string) => {\\n+      const typeMap: Record<string, string> = {\\n+        'text': 'FieldType.TEXT',\\n+        'email': 'FieldType.EMAIL',\\n+        'number': 'FieldType.NUMBER',\\n+        'date': 'FieldType.DATE',\\n+        'textarea': 'FieldType.TEXTAREA',\\n+        'select': 'FieldType.SELECT',\\n+        'currency': 'FieldType.CURRENCY'\\n+      };\\n+      return typeMap[type] || 'FieldType.TEXT';\\n+    });\\n+  }\\n+  \\n+  async loadTemplate(name: string): Promise<HandlebarsTemplateDelegate> {\\n+    if (this.templateCache.has(name)) {\\n+      return this.templateCache.get(name)!;\\n+    }\\n+    \\n+    const templatePath = path.join(__dirname, '../templates', name);\\n+    const templateSource = await fs.readFile(templatePath, 'utf-8');\\n+    const template = this.handlebars.compile(templateSource);\\n+    \\n+    this.templateCache.set(name, template);\\n+    return template;\\n+  }\\n+  \\n+  render(template: HandlebarsTemplateDelegate, context: any): string {\\n+    return template(context);\\n+  }\\n+}\\n+```\\n+\\n+### 5. CLI Interface Updates\\n+\\n+#### Enhanced CLI Commands\\n+\\n+```typescript\\n+// compiler/src/cli/commands.ts (new file)\\n+export class FrameworkCliCommands {\\n+  async generateCommand(args: GenerateCommandArgs): Promise<void> {\\n+    const compiler = new BusyCompiler(args.config);\\n+    \\n+    console.log(`🔄 Compiling BUSY files to Orgata Framework...`);\\n+    console.log(`Source: ${args.sourcePath}`);\\n+    console.log(`Output: ${args.outputPath}`);\\n+    \\n+    const result = await compiler.compileToFramework(args.sourcePath, args.outputPath);\\n+    \\n+    if (result.summary.success) {\\n+      console.log(`✅ Generated ${result.summary.processCount} processes`);\\n+      console.log(`📁 ${result.summary.fileCount} files created`);\\n+      console.log(`⏱️  Compilation completed in ${result.summary.duration}ms`);\\n+      \\n+      if (args.verbose) {\\n+        this.printDetailedResults(result);\\n+      }\\n+    } else {\\n+      console.error(`❌ Compilation failed`);\\n+      result.summary.errors.forEach(error => {\\n+        console.error(`   ${error}`);\\n+      });\\n+      process.exit(1);\\n+    }\\n+  }\\n+  \\n+  async watchCommand(args: WatchCommandArgs): Promise<void> {\\n+    const compiler = new BusyCompiler(args.config);\\n+    const watcher = new FileWatcher(args.sourcePath);\\n+    \\n+    console.log(`👁️  Watching for changes in ${args.sourcePath}...`);\\n+    \\n+    watcher.on('change', async (changedFiles: string[]) => {\\n+      console.log(`🔄 Detected changes, recompiling...`);\\n+      \\n+      try {\\n+        await compiler.compileToFramework(args.sourcePath, args.outputPath);\\n+        console.log(`✅ Recompilation complete`);\\n+      } catch (error) {\\n+        console.error(`❌ Recompilation failed:`, error);\\n+      }\\n+    });\\n+  }\\n+}\\n+```\\n+\\n+#### Update Package Scripts\\n+\\n+```json\\n+// compiler/package.json additions\\n+{\\n+  \\\"scripts\\\": {\\n+    \\\"build\\\": \\\"tsup\\\",\\n+    \\\"dev\\\": \\\"tsup --watch\\\",\\n+    \\\"generate\\\": \\\"node dist/cli.js generate\\\",\\n+    \\\"watch\\\": \\\"node dist/cli.js watch\\\"\\n+  },\\n+  \\\"bin\\\": {\\n+    \\\"busy-compile\\\": \\\"./dist/cli.js\\\"\\n+  }\\n+}\\n+```\\n+\\n+### 6. Configuration Extensions\\n+\\n+#### Enhanced Compiler Config\\n+\\n+```typescript\\n+// compiler/src/config/types.ts (additions to existing)\\n+export interface CompilerConfig {\\n+  // ... existing properties\\n+  \\n+  // New framework generation options\\n+  framework: FrameworkGenerationConfig;\\n+  templates: TemplateConfig;\\n+  output: OutputConfig;\\n+}\\n+\\n+export interface FrameworkGenerationConfig {\\n+  packageName: string;\\n+  outputFormat: 'typescript' | 'javascript';\\n+  includeTests: boolean;\\n+  includeDocs: boolean;\\n+  customTemplatesPath?: string;\\n+  contentAnalysis: ContentAnalysisConfig;\\n+}\\n+\\n+export interface ContentAnalysisConfig {\\n+  enabled: boolean;\\n+  provider: 'rule-based' | 'llm' | 'hybrid';\\n+  llmConfig?: {\\n+    model: string;\\n+    apiKey?: string;\\n+    maxTokens: number;\\n+  };\\n+  rules: AnalysisRule[];\\n+}\\n+\\n+export interface TemplateConfig {\\n+  customTemplatesPath?: string;\\n+  templateVariables?: Record<string, any>;\\n+  helpers?: Record<string, Function>;\\n+}\\n+\\n+export interface OutputConfig {\\n+  baseDirectory: string;\\n+  fileNaming: 'kebab-case' | 'camelCase' | 'PascalCase';\\n+  includeSourceMaps: boolean;\\n+  formatting: FormattingConfig;\\n+}\\n+\\n+export interface FormattingConfig {\\n+  prettier: boolean;\\n+  eslint: boolean;\\n+  customPrettierConfig?: Record<string, any>;\\n+}\\n+```\\n+\\n+### 7. Error Handling and Validation\\n+\\n+#### Framework-Specific Validation\\n+\\n+```typescript\\n+// compiler/src/validation/framework-validator.ts\\n+export class FrameworkValidator {\\n+  validateGeneratedCode(generatedFiles: GeneratedFiles): ValidationResult {\\n+    const errors: ValidationError[] = [];\\n+    const warnings: ValidationWarning[] = [];\\n+    \\n+    for (const [filePath, content] of generatedFiles.files) {\\n+      // TypeScript compilation check\\n+      const tsErrors = this.validateTypeScript(content, filePath);\\n+      errors.push(...tsErrors);\\n+      \\n+      // Framework API usage validation\\n+      const frameworkErrors = this.validateFrameworkUsage(content, filePath);\\n+      errors.push(...frameworkErrors);\\n+      \\n+      // Code quality checks\\n+      const qualityWarnings = this.checkCodeQuality(content, filePath);\\n+      warnings.push(...qualityWarnings);\\n+    }\\n+    \\n+    return {\\n+      valid: errors.length === 0,\\n+      errors,\\n+      warnings\\n+    };\\n+  }\\n+  \\n+  private validateTypeScript(code: string, filePath: string): ValidationError[] {\\n+    // Use TypeScript compiler API to validate generated code\\n+    // Return compilation errors if any\\n+  }\\n+  \\n+  private validateFrameworkUsage(code: string, filePath: string): ValidationError[] {\\n+    // Check for correct framework API usage\\n+    // Validate required method implementations\\n+    // Check configuration object structures\\n+  }\\n+}\\n+```\\n+\\n+## Testing Strategy\\n+\\n+### Unit Tests for New Components\\n+\\n+```typescript\\n+// compiler/src/__tests__/content-analyzer.test.ts\\n+describe('ContentAnalyzer', () => {\\n+  let analyzer: ContentAnalyzer;\\n+  \\n+  beforeEach(() => {\\n+    analyzer = new ContentAnalyzer(DEFAULT_CONFIG);\\n+  });\\n+  \\n+  test('should determine step type from description', async () => {\\n+    const step: StepNode = {\\n+      id: 'test-step',\\n+      name: 'Test Step',\\n+      description: 'Collect client email address and phone number',\\n+      type: BaseNodeType.STEP\\n+    };\\n+    \\n+    const analysis = await analyzer.analyzeStep(step);\\n+    \\n+    expect(analysis.stepType).toBe('human');\\n+    expect(analysis.dataRequirements).toContainEqual(\\n+      expect.objectContaining({\\n+        name: 'contactEmail',\\n+        type: 'email',\\n+        required: true\\n+      })\\n+    );\\n+  });\\n+});\\n+\\n+// compiler/src/__tests__/code-generator.test.ts\\n+describe('FrameworkCodeGenerator', () => {\\n+  let generator: FrameworkCodeGenerator;\\n+  \\n+  test('should generate valid process class', async () => {\\n+    const analysis: ProcessAnalysis = {\\n+      processMetadata: {\\n+        name: 'Test Process',\\n+        className: 'TestProcess',\\n+        fileName: 'test-process'\\n+      },\\n+      steps: []\\n+    };\\n+    \\n+    const result = await generator.generateProcess(analysis);\\n+    \\n+    expect(result.files.has('TestProcess.ts')).toBe(true);\\n+    \\n+    const processCode = result.files.get('TestProcess.ts')!;\\n+    expect(processCode).toContain('export class TestProcess extends Process');\\n+    expect(processCode).toContain('constructor()');\\n+  });\\n+});\\n+```\\n+\\n+### Integration Tests\\n+\\n+```typescript\\n+// compiler/src/__tests__/integration/full-compilation.test.ts\\n+describe('Full Compilation Integration', () => {\\n+  test('should compile complete BUSY project to framework code', async () => {\\n+    const compiler = new BusyCompiler();\\n+    const tempDir = await createTempDirectory();\\n+    \\n+    // Copy test BUSY files\\n+    await copyTestFiles(tempDir);\\n+    \\n+    // Compile to framework\\n+    const result = await compiler.compileToFramework(\\n+      path.join(tempDir, 'src'),\\n+      path.join(tempDir, 'generated')\\n+    );\\n+    \\n+    expect(result.summary.success).toBe(true);\\n+    expect(result.summary.processCount).toBe(2);\\n+    \\n+    // Validate generated files exist and compile\\n+    const generatedFiles = await glob(path.join(tempDir, 'generated', '**/*.ts'));\\n+    expect(generatedFiles.length).toBeGreaterThan(0);\\n+    \\n+    // Validate TypeScript compilation\\n+    const tsResult = await compileTypeScript(path.join(tempDir, 'generated'));\\n+    expect(tsResult.success).toBe(true);\\n+  });\\n+});\\n+```\\n+\\n+## Migration Strategy\\n+\\n+### Phase 1: Parallel Implementation\\n+- Keep existing YAML generation working\\n+- Add new framework generation as separate command\\n+- Both systems share same parser and AST\\n+\\n+### Phase 2: Feature Parity\\n+- Ensure framework generation covers all BUSY features\\n+- Add comprehensive testing\\n+- Performance optimization\\n+\\n+### Phase 3: Replacement\\n+- Make framework generation the default\\n+- Add migration tools for existing projects\\n+- Deprecate YAML generation\\n+\\n+### Phase 4: Cleanup\\n+- Remove old generation code\\n+- Simplify CLI interface\\n+- Update documentation\\n+\\n+This comprehensive modification plan transforms the BUSY compiler from a YAML generator into a sophisticated framework code generator while maintaining the existing parsing and AST infrastructure.\\n\\\\ No newline at end of file\\n\"\n+    },\n+    {\n+      \"filepath\": \"design-docs/008-orgata-framework/FRAMEWORK_API_SPECIFICATION.md\",\n+      \"oldHash\": \"\",\n+      \"newHash\": \"1769a305edb3052f7a05ae58466afd675b4275d3\",\n+      \"timestamp\": \"2025-07-23T21:15:34.755Z\",\n+      \"changeType\": \"content\",\n+      \"gitDiff\": \"diff --git a/design-docs/008-orgata-framework/FRAMEWORK_API_SPECIFICATION.md b/design-docs/008-orgata-framework/FRAMEWORK_API_SPECIFICATION.md\\nnew file mode 100644\\nindex 0000000..1769a30\\n--- /dev/null\\n+++ b/design-docs/008-orgata-framework/FRAMEWORK_API_SPECIFICATION.md\\n@@ -0,0 +1,601 @@\\n+# Orgata Framework API Specification\\n+\\n+**Created**: July 2025  \\n+**Status**: Design Phase  \\n+**Scope**: Complete API specification for @orgata/framework package\\n+\\n+## Overview\\n+\\n+Comprehensive API specification for the Orgata Framework, designed to provide a React-like experience for business process development with complete flexibility and intelligent override capabilities.\\n+\\n+## Core API Structure\\n+\\n+### Base Classes\\n+\\n+#### Process Class\\n+\\n+```typescript\\n+abstract class Process extends EventEmitter {\\n+  readonly id: string;\\n+  readonly name: string;\\n+  readonly config: ProcessConfig;\\n+  protected steps: Map<string, Step>;\\n+  protected state: ProcessState;\\n+  \\n+  constructor(config: ProcessConfig);\\n+  \\n+  // Core lifecycle methods\\n+  abstract execute(context: ProcessContext): Promise<ProcessResult>;\\n+  \\n+  // Step management\\n+  addStep(step: Step): void;\\n+  removeStep(stepId: string): void;\\n+  getStep(stepId: string): Step | undefined;\\n+  getSteps(): Step[];\\n+  \\n+  // Navigation and control\\n+  start(initialContext?: ProcessContext): Promise<void>;\\n+  pause(reason?: string): void;\\n+  resume(): Promise<void>;\\n+  stop(reason?: string): void;\\n+  \\n+  // Flexible navigation\\n+  goToStep(stepId: string, reason?: string): Promise<void>;\\n+  skipStep(stepId: string, reason: string, manualData?: any): Promise<void>;\\n+  goBack(steps?: number): Promise<void>;\\n+  \\n+  // State management\\n+  getCurrentStep(): Step | null;\\n+  getState(): ProcessState;\\n+  getAuditTrail(): AuditEntry[];\\n+  \\n+  // Override and flexibility\\n+  requestOverride(request: OverrideRequest): Promise<OverrideResult>;\\n+  validateManualData(stepId: string, data: any): ValidationResult;\\n+  \\n+  // Events (extends EventEmitter)\\n+  // emit('step:start', step, context)\\n+  // emit('step:complete', step, result)\\n+  // emit('step:skip', step, reason, manualData)\\n+  // emit('process:pause', reason)\\n+  // emit('exception', exception)\\n+}\\n+\\n+interface ProcessConfig {\\n+  name: string;\\n+  description?: string;\\n+  layer: 'L0' | 'L1' | 'L2';\\n+  estimatedDuration?: string;\\n+  metadata?: Record<string, any>;\\n+  validation?: ProcessValidation;\\n+  permissions?: ProcessPermissions;\\n+}\\n+```\\n+\\n+#### Step Class Hierarchy\\n+\\n+```typescript\\n+abstract class Step {\\n+  readonly id: string;\\n+  readonly name: string;\\n+  readonly type: StepType;\\n+  readonly config: StepConfig;\\n+  \\n+  constructor(config: StepConfig);\\n+  \\n+  // Core execution\\n+  abstract execute(context: StepContext): Promise<StepResult>;\\n+  \\n+  // Validation and preparation\\n+  validate(input: any): ValidationResult;\\n+  prepareContext(processContext: ProcessContext): StepContext;\\n+  \\n+  // Flexibility and overrides\\n+  canSkip(reason: string): boolean;\\n+  getRequiredInputs(): InputRequirement[];\\n+  acceptManualData(data: any): boolean;\\n+  \\n+  // Audit and tracking\\n+  createAuditEntry(action: string, data: any): AuditEntry;\\n+}\\n+\\n+// Specialized step types\\n+class HumanStep extends Step {\\n+  readonly model: FormModel;\\n+  readonly view: ComponentDefinition;\\n+  readonly validation: ValidationRules;\\n+  \\n+  constructor(config: HumanStepConfig);\\n+  \\n+  // UI-specific methods\\n+  renderUI(context: StepContext): Promise<UIComponent>;\\n+  handleUserInput(input: UserInput): Promise<StepResult>;\\n+  generateAlternativeUI(constraints?: UIConstraints): ComponentDefinition;\\n+}\\n+\\n+class AgentStep extends Step {\\n+  readonly prompt: AgentPrompt;\\n+  readonly context: AgentContext;\\n+  readonly constraints: AgentConstraints;\\n+  \\n+  constructor(config: AgentStepConfig);\\n+  \\n+  // AI-specific methods\\n+  buildPrompt(context: StepContext): string;\\n+  executeAgent(prompt: string, context: AgentContext): Promise<AgentResponse>;\\n+  validateAgentOutput(output: AgentResponse): ValidationResult;\\n+}\\n+\\n+class AlgorithmStep extends Step {\\n+  readonly implementation: AlgorithmImplementation;\\n+  readonly parameters: AlgorithmParameters;\\n+  \\n+  constructor(config: AlgorithmStepConfig);\\n+  \\n+  // Algorithm-specific methods\\n+  executeAlgorithm(input: AlgorithmInput): Promise<AlgorithmOutput>;\\n+  validateAlgorithmResult(result: AlgorithmOutput): ValidationResult;\\n+}\\n+```\\n+\\n+### State Management\\n+\\n+#### ProcessState\\n+\\n+```typescript\\n+class ProcessState {\\n+  readonly processId: string;\\n+  readonly currentStepId: string | null;\\n+  readonly status: ProcessStatus;\\n+  readonly stepData: ReadonlyMap<string, StepData>;\\n+  readonly history: readonly ProcessEvent[];\\n+  readonly exceptions: readonly ProcessException[];\\n+  readonly startedAt: Date;\\n+  readonly lastUpdatedAt: Date;\\n+  \\n+  // State queries\\n+  getStepData(stepId: string): StepData | undefined;\\n+  getStepHistory(stepId: string): ProcessEvent[];\\n+  isStepCompleted(stepId: string): boolean;\\n+  isStepSkipped(stepId: string): boolean;\\n+  \\n+  // State transitions (return new immutable state)\\n+  withStepData(stepId: string, data: StepData): ProcessState;\\n+  withCurrentStep(stepId: string): ProcessState;\\n+  withException(exception: ProcessException): ProcessState;\\n+  withStatus(status: ProcessStatus): ProcessState;\\n+  \\n+  // Navigation helpers\\n+  canGoToStep(stepId: string): boolean;\\n+  canSkipStep(stepId: string): boolean;\\n+  getNextStep(): string | null;\\n+  getPreviousStep(): string | null;\\n+  \\n+  // Validation\\n+  validateStepData(stepId: string, data: any): ValidationResult;\\n+  checkDataRequirements(stepId: string): DataRequirement[];\\n+}\\n+\\n+enum ProcessStatus {\\n+  NOT_STARTED = 'not_started',\\n+  RUNNING = 'running',\\n+  PAUSED = 'paused',\\n+  COMPLETED = 'completed',\\n+  FAILED = 'failed',\\n+  CANCELLED = 'cancelled'\\n+}\\n+```\\n+\\n+#### Event Sourcing\\n+\\n+```typescript\\n+abstract class ProcessEvent {\\n+  readonly id: string;\\n+  readonly processId: string;\\n+  readonly timestamp: Date;\\n+  readonly userId?: string;\\n+  readonly type: string;\\n+  \\n+  abstract apply(state: ProcessState): ProcessState;\\n+}\\n+\\n+class StepStartedEvent extends ProcessEvent {\\n+  readonly stepId: string;\\n+  readonly context: StepContext;\\n+}\\n+\\n+class StepCompletedEvent extends ProcessEvent {\\n+  readonly stepId: string;\\n+  readonly result: StepResult;\\n+  readonly duration: number;\\n+}\\n+\\n+class StepSkippedEvent extends ProcessEvent {\\n+  readonly stepId: string;\\n+  readonly reason: string;\\n+  readonly manualData?: any;\\n+}\\n+\\n+class DataUpdatedEvent extends ProcessEvent {\\n+  readonly stepId: string;\\n+  readonly field: string;\\n+  readonly oldValue: any;\\n+  readonly newValue: any;\\n+  readonly reason: string;\\n+}\\n+\\n+class ExceptionEvent extends ProcessEvent {\\n+  readonly exception: ProcessException;\\n+  readonly context: ExceptionContext;\\n+}\\n+```\\n+\\n+### Flexibility and Override System\\n+\\n+#### FlexibilityAgent\\n+\\n+```typescript\\n+class FlexibilityAgent {\\n+  // Main override request handler\\n+  async handleOverrideRequest(\\n+    request: OverrideRequest,\\n+    process: Process,\\n+    context: ProcessContext\\n+  ): Promise<OverrideResult>;\\n+  \\n+  // Specific override capabilities\\n+  async generateAlternativeUI(\\n+    step: HumanStep,\\n+    constraints: UIConstraints,\\n+    userRequirements: string\\n+  ): Promise<ComponentDefinition>;\\n+  \\n+  async analyzeSkipConsequences(\\n+    stepId: string,\\n+    process: Process,\\n+    manualData?: any\\n+  ): Promise<ConsequenceAnalysis>;\\n+  \\n+  async suggestDataAlternatives(\\n+    requiredData: DataRequirement[],\\n+    availableData: any\\n+  ): Promise<DataSuggestion[]>;\\n+  \\n+  // Learning and improvement\\n+  async analyzeExceptionPatterns(\\n+    exceptions: ProcessException[]\\n+  ): Promise<ProcessImprovement[]>;\\n+  \\n+  async generateProcessOptimizations(\\n+    process: Process,\\n+    auditTrail: AuditEntry[]\\n+  ): Promise<ProcessOptimization[]>;\\n+}\\n+\\n+interface OverrideRequest {\\n+  type: OverrideType;\\n+  stepId: string;\\n+  userMessage: string;\\n+  currentContext: ProcessContext;\\n+  proposedChange?: any;\\n+}\\n+\\n+enum OverrideType {\\n+  SKIP_STEP = 'skip_step',\\n+  MODIFY_UI = 'modify_ui', \\n+  CHANGE_DATA = 'change_data',\\n+  ALTER_FLOW = 'alter_flow',\\n+  BYPASS_VALIDATION = 'bypass_validation'\\n+}\\n+\\n+interface OverrideResult {\\n+  approved: boolean;\\n+  implementation: OverrideImplementation;\\n+  consequences: ConsequenceAnalysis;\\n+  auditEntry: AuditEntry;\\n+  alternatives?: OverrideAlternative[];\\n+}\\n+```\\n+\\n+### Data Models and Types\\n+\\n+#### Core Interfaces\\n+\\n+```typescript\\n+interface ProcessContext {\\n+  processId: string;\\n+  userId: string;\\n+  sessionId: string;\\n+  environment: 'development' | 'staging' | 'production';\\n+  businessContext: BusinessContext;\\n+  permissions: UserPermissions;\\n+  preferences: UserPreferences;\\n+}\\n+\\n+interface StepContext extends ProcessContext {\\n+  stepId: string;\\n+  stepType: StepType;\\n+  inputData: any;\\n+  previousStepResults: Map<string, StepResult>;\\n+  requiredOutputs: OutputRequirement[];\\n+  validationRules: ValidationRule[];\\n+}\\n+\\n+interface StepResult {\\n+  success: boolean;\\n+  data: any;\\n+  metadata: StepMetadata;\\n+  nextStepId?: string;\\n+  errors?: StepError[];\\n+  warnings?: StepWarning[];\\n+}\\n+\\n+interface ProcessException {\\n+  id: string;\\n+  type: ExceptionType;\\n+  stepId: string;\\n+  timestamp: Date;\\n+  userId: string;\\n+  reason: string;\\n+  impact: ExceptionImpact;\\n+  resolution?: ExceptionResolution;\\n+  auditTrail: AuditEntry[];\\n+}\\n+\\n+enum ExceptionType {\\n+  STEP_SKIPPED = 'step_skipped',\\n+  VALIDATION_OVERRIDDEN = 'validation_overridden',\\n+  MANUAL_DATA_PROVIDED = 'manual_data_provided',\\n+  FLOW_MODIFIED = 'flow_modified',\\n+  UI_BYPASSED = 'ui_bypassed'\\n+}\\n+```\\n+\\n+#### UI and Form Models\\n+\\n+```typescript\\n+interface FormModel {\\n+  fields: FormField[];\\n+  layout: LayoutConfig;\\n+  validation: ValidationConfig;\\n+  metadata: FormMetadata;\\n+}\\n+\\n+interface FormField {\\n+  id: string;\\n+  name: string;\\n+  type: FieldType;\\n+  label: string;\\n+  placeholder?: string;\\n+  helpText?: string;\\n+  required: boolean;\\n+  validation: FieldValidation[];\\n+  defaultValue?: any;\\n+  options?: FieldOption[];\\n+  conditionalLogic?: ConditionalLogic;\\n+}\\n+\\n+enum FieldType {\\n+  TEXT = 'text',\\n+  EMAIL = 'email',\\n+  NUMBER = 'number',\\n+  DATE = 'date',\\n+  TEXTAREA = 'textarea',\\n+  SELECT = 'select',\\n+  MULTISELECT = 'multiselect',\\n+  CHECKBOX = 'checkbox',\\n+  RADIO = 'radio',\\n+  FILE_UPLOAD = 'file_upload',\\n+  CURRENCY = 'currency',\\n+  PHONE = 'phone',\\n+  URL = 'url',\\n+  JSON = 'json',\\n+  CUSTOM = 'custom'\\n+}\\n+\\n+interface ComponentDefinition {\\n+  type: ComponentType;\\n+  props: ComponentProps;\\n+  children?: ComponentDefinition[];\\n+  styling?: ComponentStyling;\\n+  behavior?: ComponentBehavior;\\n+}\\n+```\\n+\\n+#### AI Agent Models\\n+\\n+```typescript\\n+interface AgentPrompt {\\n+  systemPrompt: string;\\n+  userPrompt: string;\\n+  context: PromptContext;\\n+  constraints: PromptConstraints;\\n+  examples?: PromptExample[];\\n+}\\n+\\n+interface AgentContext {\\n+  processContext: ProcessContext;\\n+  stepContext: StepContext;\\n+  businessData: BusinessData;\\n+  previousResults: AgentResult[];\\n+  availableTools: AgentTool[];\\n+}\\n+\\n+interface AgentResponse {\\n+  content: string;\\n+  confidence: number;\\n+  reasoning: string;\\n+  structuredData?: any;\\n+  suggestedActions?: SuggestedAction[];\\n+  requiresHumanReview: boolean;\\n+}\\n+```\\n+\\n+## Usage Examples\\n+\\n+### Basic Process Definition\\n+\\n+```typescript\\n+// Generated from BUSY file\\n+export class ClientOnboardingProcess extends Process {\\n+  constructor() {\\n+    super({\\n+      name: \\\"Client Onboarding\\\",\\n+      layer: \\\"L0\\\",\\n+      estimatedDuration: \\\"3 days\\\",\\n+      description: \\\"Complete client onboarding workflow\\\"\\n+    });\\n+    \\n+    this.addStep(new InitialContactStep());\\n+    this.addStep(new NeedsAssessmentStep());\\n+    this.addStep(new ProposalGenerationStep());\\n+    this.addStep(new ContractFinalizationStep());\\n+  }\\n+  \\n+  async execute(context: ProcessContext): Promise<ProcessResult> {\\n+    // Framework handles step-by-step execution\\n+    return await this.executeSteps(context);\\n+  }\\n+}\\n+```\\n+\\n+### Human Step Implementation\\n+\\n+```typescript\\n+class NeedsAssessmentStep extends HumanStep {\\n+  constructor() {\\n+    super({\\n+      id: 'needs-assessment',\\n+      name: 'Client Needs Assessment',\\n+      model: {\\n+        fields: [\\n+          {\\n+            id: 'business_goals',\\n+            type: FieldType.TEXTAREA,\\n+            label: 'Business Goals',\\n+            required: true,\\n+            helpText: 'What are the client\\\\'s primary business objectives?'\\n+          },\\n+          {\\n+            id: 'budget_range',\\n+            type: FieldType.CURRENCY,\\n+            label: 'Budget Range',\\n+            required: true,\\n+            validation: [{ type: 'min', value: 1000, message: 'Minimum budget is $1,000' }]\\n+          },\\n+          {\\n+            id: 'timeline',\\n+            type: FieldType.DATE,\\n+            label: 'Target Completion Date',\\n+            required: false\\n+          }\\n+        ]\\n+      }\\n+    });\\n+  }\\n+  \\n+  async execute(context: StepContext): Promise<StepResult> {\\n+    // Framework handles UI rendering and data collection\\n+    const userInput = await this.collectUserInput(context);\\n+    \\n+    // Custom business logic\\n+    const assessmentScore = this.calculateAssessmentScore(userInput);\\n+    \\n+    return {\\n+      success: true,\\n+      data: {\\n+        ...userInput,\\n+        assessmentScore,\\n+        recommendedNextStep: this.determineNextStep(assessmentScore)\\n+      },\\n+      metadata: {\\n+        completedAt: new Date(),\\n+        duration: context.stepDuration\\n+      }\\n+    };\\n+  }\\n+  \\n+  private calculateAssessmentScore(input: any): number {\\n+    // Custom scoring logic\\n+    return 85;\\n+  }\\n+}\\n+```\\n+\\n+### Flexible Override Examples\\n+\\n+```typescript\\n+// User requests to skip a step\\n+const skipResult = await process.skipStep(\\n+  'client-interview', \\n+  'Client provided information via email',\\n+  {\\n+    contactEmail: 'client@example.com',\\n+    businessType: 'consulting',\\n+    urgency: 'high'\\n+  }\\n+);\\n+\\n+// Agent analyzes consequences\\n+const analysis = await flexibilityAgent.analyzeSkipConsequences(\\n+  'client-interview',\\n+  process,\\n+  skipResult.manualData\\n+);\\n+\\n+console.log(`Risk Level: ${analysis.riskLevel}`);\\n+console.log(`Missing Data: ${analysis.missingData.join(', ')}`);\\n+console.log(`Affected Steps: ${analysis.affectedSteps.join(', ')}`);\\n+\\n+// User requests alternative UI\\n+const alternativeUI = await flexibilityAgent.generateAlternativeUI(\\n+  needsAssessmentStep,\\n+  { allowFreeForm: true, skipValidation: false },\\n+  \\\"I need to enter complex requirements that don't fit in predefined fields\\\"\\n+);\\n+```\\n+\\n+## Framework Utilities\\n+\\n+### Validation System\\n+\\n+```typescript\\n+class ValidationEngine {\\n+  validateStep(step: Step, input: any): ValidationResult;\\n+  validateProcess(process: Process, state: ProcessState): ValidationResult;\\n+  createCustomValidator(rule: ValidationRule): Validator;\\n+  overrideValidation(stepId: string, reason: string): ValidationOverride;\\n+}\\n+\\n+interface ValidationRule {\\n+  type: ValidationType;\\n+  field?: string;\\n+  condition: ValidationCondition;\\n+  message: string;\\n+  severity: 'error' | 'warning' | 'info';\\n+}\\n+```\\n+\\n+### Audit and Logging\\n+\\n+```typescript\\n+class AuditLogger {\\n+  logStepExecution(step: Step, context: StepContext, result: StepResult): void;\\n+  logException(exception: ProcessException): void;\\n+  logOverride(override: OverrideRequest, result: OverrideResult): void;\\n+  generateReport(processId: string, timeRange?: TimeRange): AuditReport;\\n+}\\n+\\n+interface AuditEntry {\\n+  id: string;\\n+  timestamp: Date;\\n+  processId: string;\\n+  stepId?: string;\\n+  userId: string;\\n+  action: AuditAction;\\n+  details: AuditDetails;\\n+  impact: AuditImpact;\\n+}\\n+```\\n+\\n+This API specification provides a comprehensive foundation for implementing the Orgata Framework with complete flexibility and intelligent override capabilities while maintaining type safety and developer experience.\\n\\\\ No newline at end of file\\n\"\n+    },\n+    {\n+      \"filepath\": \"design-docs/008-orgata-framework/IMPLEMENTATION_PLAN.md\",\n+      \"oldHash\": \"\",\n+      \"newHash\": \"4e4af45d4898b0c1e33bd50ec9192c1deb8fe37b\",\n+      \"timestamp\": \"2025-07-23T21:15:34.798Z\",\n+      \"changeType\": \"content\",\n+      \"gitDiff\": \"diff --git a/design-docs/008-orgata-framework/IMPLEMENTATION_PLAN.md b/design-docs/008-orgata-framework/IMPLEMENTATION_PLAN.md\\nnew file mode 100644\\nindex 0000000..4e4af45\\n--- /dev/null\\n+++ b/design-docs/008-orgata-framework/IMPLEMENTATION_PLAN.md\\n@@ -0,0 +1,370 @@\\n+# Orgata Framework Implementation Plan\\n+\\n+**Created**: July 2025  \\n+**Status**: Ready for Implementation  \\n+**Timeline**: 6-8 weeks  \\n+**Dependencies**: Can replace existing generated code completely\\n+\\n+## Overview\\n+\\n+Comprehensive plan to transform the Orgata system from YAML generation to a React-like framework architecture. Since we can replace existing code completely, this allows for optimal implementation without migration concerns.\\n+\\n+## Implementation Phases\\n+\\n+### Phase 1: Framework Foundation (2 weeks)\\n+\\n+#### Week 1: Core Framework Package\\n+**Goal**: Create `@orgata/framework` with base classes and process lifecycle management\\n+\\n+**Deliverables**:\\n+1. **Framework Package Structure**\\n+   ```\\n+   packages/orgata-framework/\\n+   ├── src/\\n+   │   ├── core/\\n+   │   │   ├── Process.ts           # Base Process class\\n+   │   │   ├── Step.ts              # Base Step class  \\n+   │   │   ├── HumanStep.ts         # UI-based steps\\n+   │   │   ├── AgentStep.ts         # AI-powered steps\\n+   │   │   └── AlgorithmStep.ts     # Code-based steps\\n+   │   ├── state/\\n+   │   │   ├── ProcessState.ts      # Immutable state management\\n+   │   │   ├── ProcessEvent.ts      # Event sourcing\\n+   │   │   └── AuditTrail.ts        # Complete audit logging\\n+   │   ├── execution/\\n+   │   │   ├── ProcessRunner.ts     # Process execution engine\\n+   │   │   ├── StepExecutor.ts      # Individual step execution\\n+   │   │   └── FlexibilityAgent.ts  # AI-powered overrides\\n+   │   └── types/\\n+   │       └── index.ts             # All TypeScript types\\n+   ├── package.json\\n+   └── README.md\\n+   ```\\n+\\n+2. **Core Classes Implementation**\\n+   ```typescript\\n+   // Base classes with essential functionality\\n+   abstract class Process extends EventEmitter\\n+   abstract class Step\\n+   class HumanStep extends Step  \\n+   class AgentStep extends Step\\n+   class AlgorithmStep extends Step\\n+   ```\\n+\\n+3. **State Management System**\\n+   ```typescript\\n+   // Immutable event-sourced state\\n+   class ProcessState\\n+   class ProcessEvent\\n+   class AuditTrail\\n+   ```\\n+\\n+**Tasks**:\\n+- [ ] Set up monorepo structure with framework package\\n+- [ ] Implement base Process and Step classes\\n+- [ ] Create immutable state management with event sourcing\\n+- [ ] Build process execution engine\\n+- [ ] Add comprehensive TypeScript types\\n+- [ ] Write unit tests for core functionality\\n+\\n+#### Week 2: Process Lifecycle & UI Integration\\n+**Goal**: Complete process execution engine and basic UI rendering\\n+\\n+**Deliverables**:\\n+1. **Process Execution Engine**\\n+   - Step-by-step execution with pause/resume\\n+   - Skip step functionality with manual data provision\\n+   - Go back functionality with history replay\\n+   - Exception handling and audit trail\\n+\\n+2. **Basic UI Framework Integration**\\n+   - HumanStep UI rendering system\\n+   - Form generation from step models\\n+   - Basic validation and data collection\\n+\\n+3. **Testing Infrastructure**\\n+   - Unit tests for all core classes\\n+   - Integration tests for process execution\\n+   - Mock implementations for testing\\n+\\n+**Tasks**:\\n+- [ ] Complete ProcessRunner with step navigation\\n+- [ ] Implement skip/go-back functionality\\n+- [ ] Build HumanStep UI rendering system\\n+- [ ] Create comprehensive test suite\\n+- [ ] Add developer documentation\\n+\\n+### Phase 2: Enhanced Compiler (2 weeks)\\n+\\n+#### Week 3: BUSY Compiler Modifications\\n+**Goal**: Modify BUSY compiler to generate TypeScript framework code instead of YAML\\n+\\n+**Deliverables**:\\n+1. **New Code Generation Pipeline**\\n+   ```\\n+   BUSY AST → Framework Code Templates → TypeScript Output\\n+   ```\\n+\\n+2. **Content Analysis System**\\n+   - Parse verbose BUSY step descriptions\\n+   - Generate appropriate step implementations\\n+   - Create UI models for HumanSteps\\n+   - Generate AI prompts for AgentSteps\\n+   - Create algorithm stubs for AlgorithmSteps\\n+\\n+3. **Code Generation Templates**\\n+   - Process class templates\\n+   - Step class templates for each type\\n+   - UI component generation\\n+   - Type-safe interfaces\\n+\\n+**Tasks**:\\n+- [ ] Modify BUSY compiler output pipeline\\n+- [ ] Create framework code generation templates  \\n+- [ ] Implement content analysis for step descriptions\\n+- [ ] Build type-safe code generation\\n+- [ ] Add source mapping for debugging\\n+\\n+#### Week 4: Code Generation Refinement\\n+**Goal**: Polish code generation and add intelligent content creation\\n+\\n+**Deliverables**:\\n+1. **Intelligent Content Generation**\\n+   - Analyze BUSY descriptions to generate realistic form fields\\n+   - Create appropriate AI prompts from step descriptions\\n+   - Generate algorithm stubs with proper interfaces\\n+\\n+2. **Enhanced Templates**\\n+   - Responsive UI components for HumanSteps\\n+   - Context-aware AI prompts for AgentSteps\\n+   - Type-safe algorithm implementations\\n+\\n+3. **Developer Experience**\\n+   - Generated code is readable and well-commented\\n+   - Clear separation between generated and custom code\\n+   - Easy customization points\\n+\\n+**Tasks**:\\n+- [ ] Enhance content analysis algorithms\\n+- [ ] Create sophisticated UI generation templates\\n+- [ ] Implement AI prompt generation from descriptions\\n+- [ ] Add code quality improvements\\n+- [ ] Build comprehensive examples\\n+\\n+### Phase 3: Flexibility & Override System (1.5 weeks)\\n+\\n+#### Week 5: AI-Powered Flexibility\\n+**Goal**: Implement conversational override system and flexible UI generation\\n+\\n+**Deliverables**:\\n+1. **FlexibilityAgent Implementation**\\n+   - Natural language override request processing\\n+   - Dynamic UI generation for complex data\\n+   - Intelligent validation override suggestions\\n+   - Context-aware alternative generation\\n+\\n+2. **Exception Management System**\\n+   - Complete exception tracking and categorization\\n+   - Audit trail for all deviations\\n+   - Pattern analysis for process improvements\\n+\\n+3. **Dynamic UI System**\\n+   - Generate alternative UIs on demand\\n+   - JSON editor fallback for complex data\\n+   - Agent-assisted data entry modes\\n+\\n+**Tasks**:\\n+- [ ] Implement FlexibilityAgent with LLM integration\\n+- [ ] Build dynamic UI generation system\\n+- [ ] Create exception tracking and analysis\\n+- [ ] Add conversational override capabilities\\n+- [ ] Build comprehensive audit trail system\\n+\\n+#### Week 6 (First Half): Integration & Testing\\n+**Goal**: Integrate all components and comprehensive testing\\n+\\n+**Deliverables**:\\n+1. **Complete Integration**\\n+   - Framework + Compiler + Flexibility System\\n+   - End-to-end process execution\\n+   - Full override and exception handling\\n+\\n+2. **Testing Suite**\\n+   - Unit tests for all components\\n+   - Integration tests for complete workflows\\n+   - Performance testing for large processes\\n+\\n+**Tasks**:\\n+- [ ] Complete end-to-end integration\\n+- [ ] Build comprehensive test suite\\n+- [ ] Performance optimization\\n+- [ ] Bug fixes and stability improvements\\n+\\n+### Phase 4: IDE Integration & Knit Enhancement (2 weeks)\\n+\\n+#### Week 6 (Second Half) - Week 7: IDE Transformation\\n+**Goal**: Transform Orgata IDE to work with new framework architecture\\n+\\n+**Deliverables**:\\n+1. **Replace Existing Generation System**\\n+   - Remove old YAML-based `BusyGeneratorService`\\n+   - Integrate new framework-based compiler\\n+   - Update all API endpoints\\n+\\n+2. **Enhanced Process Visualization**\\n+   - Visual process editor for BUSY files\\n+   - Real-time process execution viewing\\n+   - Exception and audit trail visualization\\n+\\n+3. **Agent Integration**\\n+   - Chat interface for process override requests\\n+   - Framework-aware agent tools\\n+   - Real-time process modification capabilities\\n+\\n+**Tasks**:\\n+- [ ] Replace existing generation services\\n+- [ ] Update IDE API endpoints\\n+- [ ] Build visual process editor\\n+- [ ] Integrate flexibility agent into IDE\\n+- [ ] Add process execution visualization\\n+\\n+#### Week 8: Knit Integration & Bidirectional Sync\\n+**Goal**: Enhance knit for framework code synchronization\\n+\\n+**Deliverables**:\\n+1. **Framework-Aware Knit**\\n+   - Understand generated framework code patterns\\n+   - Track custom implementations vs. generated stubs\\n+   - Intelligent merge strategies for code changes\\n+\\n+2. **Bidirectional Synchronization**\\n+   - BUSY changes → Framework code regeneration\\n+   - Code changes → BUSY file updates (where appropriate)\\n+   - Conflict resolution for incompatible changes\\n+\\n+3. **Developer Workflow**\\n+   - Seamless editing of both BUSY files and generated code\\n+   - Automatic reconciliation of changes\\n+   - Clear separation of concerns\\n+\\n+**Tasks**:\\n+- [ ] Enhance knit for framework code understanding\\n+- [ ] Implement bidirectional sync logic\\n+- [ ] Build conflict resolution system\\n+- [ ] Create developer workflow documentation\\n+- [ ] End-to-end testing of complete system\\n+\\n+## Technical Specifications\\n+\\n+### Framework Package Dependencies\\n+```json\\n+{\\n+  \\\"dependencies\\\": {\\n+    \\\"@types/node\\\": \\\"^20.0.0\\\",\\n+    \\\"eventemitter3\\\": \\\"^5.0.0\\\",\\n+    \\\"zod\\\": \\\"^3.22.0\\\",           // Runtime validation\\n+    \\\"immer\\\": \\\"^10.0.0\\\"          // Immutable state updates\\n+  },\\n+  \\\"devDependencies\\\": {\\n+    \\\"typescript\\\": \\\"^5.0.0\\\",\\n+    \\\"vitest\\\": \\\"^1.0.0\\\",\\n+    \\\"tsup\\\": \\\"^8.0.0\\\"\\n+  }\\n+}\\n+```\\n+\\n+### Code Generation Templates\\n+```typescript\\n+// Process template\\n+export class {{ProcessName}}Process extends Process {\\n+  constructor() {\\n+    super({{processConfig}});\\n+    {{#steps}}\\n+    this.addStep(new {{stepClassName}}());\\n+    {{/steps}}\\n+  }\\n+}\\n+\\n+// HumanStep template  \\n+class {{StepName}}Step extends HumanStep {\\n+  constructor() {\\n+    super({\\n+      model: {{generatedModel}},\\n+      view: {{generatedView}}\\n+    });\\n+  }\\n+}\\n+```\\n+\\n+### Directory Structure Post-Implementation\\n+```\\n+busy-lang/\\n+├── packages/\\n+│   ├── orgata-framework/           # New framework package\\n+│   ├── busy-compiler/              # Modified compiler\\n+│   └── orgata-ide/                 # Updated IDE\\n+├── examples/\\n+│   ├── generated-processes/        # Example generated code\\n+│   └── business-definitions/       # Example BUSY files\\n+└── design-docs/\\n+    └── 008-orgata-framework/       # This design\\n+```\\n+\\n+## Success Criteria\\n+\\n+### Technical Success\\n+- [ ] BUSY files compile to readable, type-safe TypeScript\\n+- [ ] Generated code can be customized without breaking regeneration\\n+- [ ] Complete audit trail of all process executions and exceptions\\n+- [ ] Flexible override system works conversationally\\n+- [ ] Bidirectional sync maintains consistency\\n+\\n+### User Experience Success\\n+- [ ] Business users can run processes without coding knowledge\\n+- [ ] Developers can customize generated code with full IDE support\\n+- [ ] Users never feel trapped by rigid workflows\\n+- [ ] Exception handling provides clear improvement insights\\n+- [ ] Process modification feels natural and intuitive\\n+\\n+### Business Value Success\\n+- [ ] Faster business process development and iteration\\n+- [ ] Clear audit trail for compliance and improvement\\n+- [ ] Learning system that makes processes better over time\\n+- [ ] Framework that scales from simple to complex organizations\\n+- [ ] Reduced maintenance burden compared to YAML generation\\n+\\n+## Risk Mitigation\\n+\\n+### Technical Risks\\n+- **Complexity of bidirectional sync**: Start with forward sync only, add reverse sync incrementally\\n+- **Framework lock-in concerns**: Generate standard TypeScript, provide clear escape hatches\\n+- **Performance with complex processes**: Build performance testing from day one\\n+\\n+### User Experience Risks  \\n+- **Learning curve for developers**: Comprehensive documentation and examples\\n+- **Business user confusion**: Start with simple visual interfaces\\n+- **Override system abuse**: Clear audit trail and consequence analysis\\n+\\n+### Timeline Risks\\n+- **Scope creep**: Clear phase boundaries, ship MVP first\\n+- **Integration complexity**: Build integration tests early\\n+- **Polish time**: Plan for 20% buffer in each phase\\n+\\n+## Next Actions\\n+\\n+1. **Immediate** (This Week):\\n+   - Set up monorepo structure\\n+   - Create framework package scaffold\\n+   - Begin implementing base classes\\n+\\n+2. **Week 1 Goals**:\\n+   - Complete core framework classes\\n+   - Basic process execution working\\n+   - Initial test suite\\n+\\n+3. **Weekly Reviews**:\\n+   - Demo working functionality each Friday\\n+   - Adjust timeline based on progress\\n+   - Gather feedback on developer experience\\n+\\n+This implementation plan provides a clear path from the current YAML generation system to a sophisticated, flexible framework that embodies the \\\"facilitate, never constrain\\\" philosophy.\\n\\\\ No newline at end of file\\n\"\n+    },\n+    {\n+      \"filepath\": \"design-docs/008-orgata-framework/ORGATA_FRAMEWORK_ARCHITECTURE.md\",\n+      \"oldHash\": \"\",\n+      \"newHash\": \"7a3806e962d414d77784827f23a1c4233d7f42cf\",\n+      \"timestamp\": \"2025-07-23T21:15:34.840Z\",\n+      \"changeType\": \"content\",\n+      \"gitDiff\": \"diff --git a/design-docs/008-orgata-framework/ORGATA_FRAMEWORK_ARCHITECTURE.md b/design-docs/008-orgata-framework/ORGATA_FRAMEWORK_ARCHITECTURE.md\\nnew file mode 100644\\nindex 0000000..7a3806e\\n--- /dev/null\\n+++ b/design-docs/008-orgata-framework/ORGATA_FRAMEWORK_ARCHITECTURE.md\\n@@ -0,0 +1,368 @@\\n+# Orgata Framework Architecture Design\\n+\\n+**Created**: July 2025  \\n+**Status**: Design Phase  \\n+**Scope**: Transform Orgata IDE from code generation to React-like framework architecture\\n+\\n+## Overview\\n+\\n+Transform the Orgata system from a YAML-string-generation approach to a true framework architecture where BUSY files compile to TypeScript code that leverages the Orgata Framework APIs. This creates a React-like developer experience for business processes.\\n+\\n+## Core Design Philosophy\\n+\\n+**\\\"Facilitate, Never Constrain\\\"** - The framework must provide helpful structure while maintaining complete user flexibility through AI-powered escape hatches and intelligent exception handling.\\n+\\n+### Key Principles\\n+\\n+1. **Never Rewrite History**: Always maintain complete audit trail of process execution\\n+2. **Forward-Only Updates**: Go back to original step and move forward through subsequent steps\\n+3. **Universal Skip Capability**: Allow skipping any step with manual data provision\\n+4. **Exception Analysis**: Use AI to analyze consequences of non-standard processing\\n+5. **Complete Audit Trail**: Track all deviations with clear reasoning and impact assessment\\n+\\n+## Current State Analysis\\n+\\n+### Problems with Current Approach\\n+\\n+Looking at the existing `BusyGeneratorService`, the system is essentially a string manipulation engine:\\n+\\n+```typescript\\n+// Current problematic pattern\\n+const processData = {\\n+  metadata: { version: '1.0.0', created: new Date().toISOString() },\\n+  process: { name: processName, steps: [...] }\\n+};\\n+\\n+return {\\n+  id: this.generateId(),\\n+  type: 'create', \\n+  filePath: `${basePath}/L0/processes/${processFileName}.busy`,\\n+  changes: [{ operation: 'add', path: '/', newValue: yaml.stringify(processData) }]\\n+};\\n+```\\n+\\n+This approach:\\n+- ❌ Generates boilerplate YAML strings\\n+- ❌ Provides no type safety or IDE support  \\n+- ❌ Makes customization difficult\\n+- ❌ Creates maintenance burden\\n+- ❌ Limits extensibility\\n+\\n+## Framework Architecture\\n+\\n+### Core Framework Components\\n+\\n+```typescript\\n+// @orgata/framework - Core framework package\\n+\\n+abstract class Process extends EventEmitter {\\n+  constructor(config: ProcessConfig);\\n+  abstract execute(context: ProcessContext): Promise<ProcessResult>;\\n+  \\n+  // Framework-provided functionality\\n+  addStep(step: Step): void;\\n+  setTimeline(duration: string): void;\\n+  getCurrentStep(): Step;\\n+  goToStep(stepId: string): void;\\n+  skipStep(stepId: string, reason: string, manualData?: any): void;\\n+}\\n+\\n+abstract class Step {\\n+  abstract execute(context: StepContext): Promise<StepResult>;\\n+  \\n+  // Framework handles: validation, logging, state management\\n+  validate(input: any): ValidationResult;\\n+  createAuditEntry(action: string, data: any): AuditEntry;\\n+}\\n+\\n+// Three specialized step types matching BUSY specification\\n+class HumanStep extends Step {\\n+  model: FormModel;           // Generated from BUSY description\\n+  view: ComponentDefinition;  // UI components and validation\\n+}\\n+\\n+class AgentStep extends Step {\\n+  prompt: AgentPrompt;        // Generated from BUSY description  \\n+  context: AgentContext;      // AI context and constraints\\n+}\\n+\\n+class AlgorithmStep extends Step {\\n+  implementation: Function;   // Generated code from BUSY description\\n+}\\n+```\\n+\\n+### Process State Management\\n+\\n+#### Immutable History with Forward-Only Updates\\n+\\n+```typescript\\n+class ProcessState {\\n+  readonly history: ProcessEvent[];           // Immutable event log\\n+  readonly currentStep: number;\\n+  readonly stepData: Map<string, StepData>;   // Current state\\n+  readonly exceptions: ProcessException[];    // All deviations tracked\\n+  \\n+  // Never modify history - always append new events\\n+  updateStepData(stepId: string, data: any, reason: string): ProcessState {\\n+    const event = new StepDataUpdateEvent(stepId, data, reason, new Date());\\n+    return this.appendEvent(event);\\n+  }\\n+  \\n+  // Go back by replaying history to that point, then continuing forward\\n+  goBackToStep(stepId: string, reason: string): ProcessState {\\n+    const replayPoint = this.findStepInHistory(stepId);\\n+    const event = new StepNavigationEvent('back', stepId, reason, new Date());\\n+    return this.replayToPoint(replayPoint).appendEvent(event);\\n+  }\\n+  \\n+  // Skip step but allow manual data provision\\n+  skipStep(stepId: string, reason: string, manualData?: any): ProcessState {\\n+    const skipEvent = new StepSkipEvent(stepId, reason, manualData, new Date());\\n+    return this.appendEvent(skipEvent);\\n+  }\\n+}\\n+```\\n+\\n+#### Exception Handling and Consequence Analysis\\n+\\n+```typescript\\n+class ProcessException {\\n+  readonly id: string;\\n+  readonly type: 'step_skip' | 'manual_data' | 'validation_override' | 'flow_modification';\\n+  readonly stepId: string;\\n+  readonly reason: string;\\n+  readonly timestamp: Date;\\n+  readonly userContext: UserContext;\\n+  readonly impact: ExceptionImpact;        // Analyzed by AI\\n+  readonly mitigation?: ExceptionMitigation;\\n+}\\n+\\n+class ExceptionAnalyzer {\\n+  // Future phase - AI-powered consequence analysis\\n+  async analyzeSkipConsequences(\\n+    skippedStep: Step, \\n+    processDefinition: Process,\\n+    currentState: ProcessState\\n+  ): Promise<ConsequenceAnalysis> {\\n+    return {\\n+      missingData: string[];              // What data won't be available\\n+      affectedSteps: string[];            // Which downstream steps might fail\\n+      riskLevel: 'low' | 'medium' | 'high';\\n+      suggestedMitigations: string[];     // How to minimize impact\\n+      dataRequirements: DataRequirement[]; // What manual data could substitute\\n+    };\\n+  }\\n+}\\n+```\\n+\\n+### Content Generation from BUSY Descriptions\\n+\\n+The compiler analyzes verbose BUSY step descriptions to generate appropriate implementations:\\n+\\n+```typescript\\n+// BUSY file example:\\n+/*\\n+step:\\n+  id: client-interview\\n+  type: human\\n+  description: |\\n+    Conduct detailed interview with client to understand their business goals,\\n+    current challenges, timeline constraints, and budget expectations. \\n+    Gather contact information for key stakeholders and decision makers.\\n+    Document any special requirements or preferences.\\n+*/\\n+\\n+// Generated HumanStep:\\n+class ClientInterviewStep extends HumanStep {\\n+  constructor() {\\n+    super({\\n+      model: {\\n+        fields: [\\n+          { name: 'businessGoals', type: 'textarea', required: true },\\n+          { name: 'currentChallenges', type: 'textarea', required: true },\\n+          { name: 'timelineConstraints', type: 'date-range', required: false },\\n+          { name: 'budgetExpectations', type: 'currency', required: true },\\n+          { name: 'stakeholders', type: 'contact-list', required: true },\\n+          { name: 'specialRequirements', type: 'textarea', required: false }\\n+        ]\\n+      },\\n+      view: {\\n+        layout: 'interview-form',\\n+        validation: 'real-time',\\n+        helpText: 'Generated from BUSY description'\\n+      }\\n+    });\\n+  }\\n+}\\n+```\\n+\\n+### Flexible Override System\\n+\\n+#### Conversational Bypass Capabilities\\n+\\n+```typescript\\n+class FlexibilityAgent {\\n+  // Handle user requests to bypass constraints\\n+  async handleOverrideRequest(\\n+    userMessage: string, \\n+    currentStep: Step, \\n+    processState: ProcessState\\n+  ): Promise<OverrideStrategy> {\\n+    \\n+    // Examples:\\n+    // \\\"This form is too restrictive\\\" → Generate flexible alternative UI\\n+    // \\\"Skip this, I already have the email\\\" → Skip with manual data\\n+    // \\\"Go back and change the client name\\\" → Navigate back and replay forward\\n+    \\n+    const intent = await this.analyzeIntent(userMessage);\\n+    const strategy = await this.generateStrategy(intent, currentStep);\\n+    \\n+    return {\\n+      type: strategy.type,\\n+      implementation: strategy.implementation,\\n+      auditReason: strategy.reasoning,\\n+      consequenceAnalysis: await this.analyzeConsequences(strategy)\\n+    };\\n+  }\\n+  \\n+  // Generate alternative UIs when standard forms are too restrictive\\n+  generateFlexibleUI(constraints: UIConstraints, userRequirements: string): ComponentDefinition {\\n+    // Could generate:\\n+    // - JSON editor for complex data\\n+    // - Free-form text with AI parsing\\n+    // - Multi-step wizard for complex processes\\n+    // - Custom form with dynamic fields\\n+  }\\n+}\\n+```\\n+\\n+#### Skip with Manual Data Provision\\n+\\n+```typescript\\n+// User: \\\"Skip the client interview step, I already have their email: john@example.com\\\"\\n+const skipResult = processState.skipStep('client-interview', 'Already have contact info', {\\n+  contactEmail: 'john@example.com',\\n+  source: 'manual_input',\\n+  confidence: 'user_provided'\\n+});\\n+\\n+// System validates if this data is sufficient for downstream steps\\n+const validation = await this.validateSkipData(skipResult.manualData, 'client-interview');\\n+if (!validation.sufficient) {\\n+  // Warn user about potential issues but still allow the skip\\n+  this.notifyUser(`Warning: Skipping may cause issues in steps: ${validation.affectedSteps.join(', ')}`);\\n+}\\n+```\\n+\\n+### Audit Trail and Exception Tracking\\n+\\n+#### Comprehensive Event Logging\\n+\\n+```typescript\\n+class ProcessAuditTrail {\\n+  readonly events: ProcessEvent[];\\n+  \\n+  // All actions create audit entries\\n+  recordStepExecution(stepId: string, result: StepResult): void;\\n+  recordStepSkip(stepId: string, reason: string, manualData?: any): void;\\n+  recordDataOverride(stepId: string, field: string, oldValue: any, newValue: any, reason: string): void;\\n+  recordValidationOverride(stepId: string, validationRule: string, reason: string): void;\\n+  recordAgentIntervention(stepId: string, userRequest: string, agentAction: string): void;\\n+  \\n+  // Exception analysis and improvement opportunities\\n+  generateExceptionReport(): ExceptionReport {\\n+    return {\\n+      totalExceptions: this.events.filter(e => e.type === 'exception').length,\\n+      commonSkips: this.getMostSkippedSteps(),\\n+      improvementOpportunities: this.identifyProcessImprovements(),\\n+      userFrustrationPoints: this.identifyConstraintIssues()\\n+    };\\n+  }\\n+}\\n+```\\n+\\n+## Compilation Pipeline\\n+\\n+### New Compilation Flow\\n+\\n+```\\n+BUSY Files → AST Analysis → Framework Code Generation → TypeScript Output\\n+```\\n+\\n+Instead of generating YAML configuration files, generate executable TypeScript:\\n+\\n+```typescript\\n+// Generated from client-onboarding.busy\\n+import { Process, HumanStep, AgentStep, AlgorithmStep } from '@orgata/framework';\\n+\\n+export class ClientOnboardingProcess extends Process {\\n+  constructor() {\\n+    super({\\n+      name: \\\"Client Onboarding\\\",\\n+      layer: \\\"L0\\\", \\n+      estimatedDuration: \\\"3 days\\\"\\n+    });\\n+    \\n+    // Steps generated from BUSY definitions\\n+    this.addStep(new InitialContactStep());\\n+    this.addStep(new NeedsAssessmentStep());\\n+    this.addStep(new ProposalGenerationStep());\\n+    this.addStep(new ContractFinalizationStep());\\n+  }\\n+}\\n+\\n+// Generated HumanStep with rich UI from BUSY description\\n+class NeedsAssessmentStep extends HumanStep {\\n+  constructor() {\\n+    super({\\n+      // UI model generated from verbose BUSY description\\n+      model: {/* detailed form model */},\\n+      view: {/* responsive UI components */}\\n+    });\\n+  }\\n+  \\n+  async execute(context: StepContext): Promise<StepResult> {\\n+    // Framework handles: UI rendering, validation, state management\\n+    const userInput = await this.presentUI(context);\\n+    \\n+    // Custom business logic can be added here\\n+    const enrichedData = await this.enrichClientData(userInput);\\n+    \\n+    return {\\n+      data: enrichedData,\\n+      nextStep: this.determineNextStep(enrichedData)\\n+    };\\n+  }\\n+}\\n+```\\n+\\n+## Benefits and Implications\\n+\\n+### Developer Experience\\n+- ✅ **Type Safety**: Full TypeScript support with autocomplete and debugging\\n+- ✅ **Readable Code**: Generated code is human-readable and modifiable\\n+- ✅ **Framework Power**: Infrastructure concerns handled by framework\\n+- ✅ **Flexibility**: Can override or extend any generated code\\n+\\n+### Business User Experience  \\n+- ✅ **Never Trapped**: Always able to bypass constraints through AI agent\\n+- ✅ **Complete Control**: Can skip, go back, or modify any step\\n+- ✅ **Intelligent Assistance**: AI analyzes consequences and suggests alternatives\\n+- ✅ **Learning System**: Process improves based on exception patterns\\n+\\n+### System Benefits\\n+- ✅ **Maintainability**: Framework evolution benefits all processes\\n+- ✅ **Auditability**: Complete trail of all decisions and exceptions\\n+- ✅ **Scalability**: Framework patterns scale from simple to complex organizations\\n+- ✅ **Extensibility**: Easy to add new step types and capabilities\\n+\\n+## Next Steps\\n+\\n+This document will be iteratively refined as we work through the detailed design questions around state management, AI integration, and the flexibility mechanisms.\\n+\\n+Key areas to elaborate:\\n+1. Detailed framework API specifications\\n+2. Code generation templates and patterns  \\n+3. AI agent integration points and capabilities\\n+4. Exception analysis and learning algorithms\\n+5. Bidirectional sync with knit integration\\n\\\\ No newline at end of file\\n\"\n+    },\n+    {\n+      \"filepath\": \"packages/orgata-framework/README.md\",\n+      \"oldHash\": \"\",\n+      \"newHash\": \"6f8cb2b0fe350b2c50e7d55aae435e9bb79e953e\",\n+      \"timestamp\": \"2025-07-23T21:15:34.882Z\",\n+      \"changeType\": \"content\",\n+      \"gitDiff\": \"diff --git a/packages/orgata-framework/README.md b/packages/orgata-framework/README.md\\nnew file mode 100644\\nindex 0000000..6f8cb2b\\n--- /dev/null\\n+++ b/packages/orgata-framework/README.md\\n@@ -0,0 +1,165 @@\\n+# @orgata/framework\\n+\\n+A React-like framework for business process development with complete flexibility and intelligent override capabilities.\\n+\\n+## Philosophy: \\\"Facilitate, Never Constrain\\\"\\n+\\n+The Orgata Framework is designed around the core principle that business tools should enhance productivity without creating bureaucratic barriers. Users can always skip steps, go back, provide manual data, or request AI assistance to bypass any constraint.\\n+\\n+## Key Features\\n+\\n+- **🔄 Immutable State Management**: Event-sourced state with complete audit trail\\n+- **⏭️ Universal Flexibility**: Skip any step, go back, provide manual data\\n+- **🤖 AI-Powered Overrides**: Conversational assistance to bypass constraints  \\n+- **📝 Complete Audit Trail**: Track all decisions and exceptions for improvement\\n+- **🎯 Three Step Types**: Human (UI), Agent (AI), Algorithm (Code)\\n+- **🚫 Never Rewrite History**: Forward-only updates preserve complete record\\n+\\n+## Quick Start\\n+\\n+### Installation\\n+\\n+```bash\\n+npm install @orgata/framework\\n+```\\n+\\n+### Basic Usage\\n+\\n+```typescript\\n+import { Process, HumanStep, ProcessConfig } from '@orgata/framework';\\n+\\n+// Create a simple process\\n+class ClientOnboardingProcess extends Process {\\n+  constructor() {\\n+    super({\\n+      name: \\\"Client Onboarding\\\",\\n+      layer: \\\"L0\\\",\\n+      estimatedDuration: \\\"2 hours\\\"\\n+    });\\n+    \\n+    this.addStep(new ContactInfoStep());\\n+    this.addStep(new NeedsAssessmentStep());\\n+  }\\n+  \\n+  async execute(context) {\\n+    return await this.executeSteps(context);\\n+  }\\n+}\\n+\\n+// Create a human step with form UI\\n+class ContactInfoStep extends HumanStep {\\n+  constructor() {\\n+    super({\\n+      id: 'contact-info',\\n+      name: 'Collect Contact Information',\\n+      model: {\\n+        fields: [\\n+          {\\n+            id: 'email',\\n+            type: FieldType.EMAIL,\\n+            label: 'Email Address',\\n+            required: true\\n+          },\\n+          {\\n+            id: 'phone',\\n+            type: FieldType.PHONE,\\n+            label: 'Phone Number',\\n+            required: false\\n+          }\\n+        ]\\n+      }\\n+    });\\n+  }\\n+}\\n+```\\n+\\n+### Flexible Navigation\\n+\\n+```typescript\\n+const process = new ClientOnboardingProcess();\\n+\\n+// Skip a step with manual data\\n+await process.skipStep('contact-info', 'Already have contact info', {\\n+  email: 'client@example.com',\\n+  phone: '+1-555-0123'\\n+});\\n+\\n+// Go back to previous step\\n+await process.goBack(1);\\n+\\n+// Navigate to specific step\\n+await process.goToStep('needs-assessment', 'Need to update requirements');\\n+```\\n+\\n+## Core Concepts\\n+\\n+### Process Class\\n+\\n+The base `Process` class provides:\\n+- Step management and execution\\n+- Flexible navigation (skip, go back, jump to step)\\n+- Immutable state management\\n+- Complete audit trail\\n+- AI-powered override system\\n+\\n+### Step Types\\n+\\n+**HumanStep**: UI-based user interaction\\n+- Automatic form generation from descriptions\\n+- Flexible validation and override capabilities\\n+- Alternative UI generation for complex requirements\\n+\\n+**AgentStep**: AI-powered processing  \\n+- Context-aware prompt generation\\n+- Confidence scoring and human review triggers\\n+- Structured output parsing and validation\\n+\\n+**AlgorithmStep**: Code-based processing\\n+- Type-safe input/output handling\\n+- Error handling and recovery\\n+- Performance monitoring\\n+\\n+### State Management\\n+\\n+The framework uses immutable state with event sourcing:\\n+- All changes create new events (never modify history)\\n+- Complete audit trail of all decisions\\n+- Exception tracking for process improvement\\n+- Forward-only updates preserve integrity\\n+\\n+## Design Documentation\\n+\\n+This framework is based on comprehensive design specifications:\\n+\\n+- **[Architecture Overview](../design-docs/008-orgata-framework/ORGATA_FRAMEWORK_ARCHITECTURE.md)**: Core design philosophy and principles\\n+- **[API Specification](../design-docs/008-orgata-framework/FRAMEWORK_API_SPECIFICATION.md)**: Complete TypeScript API reference  \\n+- **[Implementation Plan](../design-docs/008-orgata-framework/IMPLEMENTATION_PLAN.md)**: Development roadmap and timeline\\n+- **[Code Generation](../design-docs/008-orgata-framework/CODE_GENERATION_PATTERNS.md)**: Templates for generating framework code\\n+\\n+## Development Status\\n+\\n+Current status: **Phase 1 Implementation** (Core Framework)\\n+\\n+✅ **Completed**:\\n+- Core framework classes (Process, Step types)\\n+- Immutable state management with event sourcing  \\n+- TypeScript types and API structure\\n+- Package setup and build configuration\\n+\\n+🔄 **In Progress**:\\n+- Process execution engine\\n+- Flexibility and override system\\n+- UI integration layer\\n+\\n+📋 **Planned**:\\n+- AI agent integration\\n+- Code generation from BUSY files\\n+- IDE integration and tooling\\n+\\n+## Contributing\\n+\\n+This framework is part of the larger BUSY Language project. See the [main repository](../../README.md) for contribution guidelines.\\n+\\n+## License\\n+\\n+MIT - See [LICENSE](../../LICENSE) for details.\\n\\\\ No newline at end of file\\n\"\n+    },\n+    {\n+      \"filepath\": \"packages/orgata-framework/package-lock.json\",\n+      \"oldHash\": \"\",\n+      \"newHash\": \"9b55647220e294b974499c790a58d45f73f8e26b\",\n+      \"timestamp\": \"2025-07-23T21:15:34.926Z\",\n+      \"changeType\": \"content\",\n+      \"gitDiff\": \"diff --git a/packages/orgata-framework/package-lock.json b/packages/orgata-framework/package-lock.json\\nnew file mode 100644\\nindex 0000000..9b55647\\n--- /dev/null\\n+++ b/packages/orgata-framework/package-lock.json\\n@@ -0,0 +1,4771 @@\\n+{\\n+  \\\"name\\\": \\\"@orgata/framework\\\",\\n+  \\\"version\\\": \\\"0.1.0\\\",\\n+  \\\"lockfileVersion\\\": 3,\\n+  \\\"requires\\\": true,\\n+  \\\"packages\\\": {\\n+    \\\"\\\": {\\n+      \\\"name\\\": \\\"@orgata/framework\\\",\\n+      \\\"version\\\": \\\"0.1.0\\\",\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"@types/node\\\": \\\"^20.0.0\\\",\\n+        \\\"eventemitter3\\\": \\\"^5.0.0\\\",\\n+        \\\"immer\\\": \\\"^10.0.0\\\",\\n+        \\\"zod\\\": \\\"^3.22.0\\\"\\n+      },\\n+      \\\"devDependencies\\\": {\\n+        \\\"@typescript-eslint/eslint-plugin\\\": \\\"^6.0.0\\\",\\n+        \\\"@typescript-eslint/parser\\\": \\\"^6.0.0\\\",\\n+        \\\"eslint\\\": \\\"^8.0.0\\\",\\n+        \\\"tsup\\\": \\\"^8.0.0\\\",\\n+        \\\"typescript\\\": \\\"^5.0.0\\\",\\n+        \\\"vitest\\\": \\\"^1.0.0\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/@esbuild/aix-ppc64\\\": {\\n+      \\\"version\\\": \\\"0.25.8\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@esbuild/aix-ppc64/-/aix-ppc64-0.25.8.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-urAvrUedIqEiFR3FYSLTWQgLu5tb+m0qZw0NBEasUeo6wuqatkMDaRT+1uABiGXEu5vqgPd7FGE1BhsAIy9QVA==\\\",\\n+      \\\"cpu\\\": [\\n+        \\\"ppc64\\\"\\n+      ],\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"optional\\\": true,\\n+      \\\"os\\\": [\\n+        \\\"aix\\\"\\n+      ],\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=18\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/@esbuild/android-arm\\\": {\\n+      \\\"version\\\": \\\"0.25.8\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@esbuild/android-arm/-/android-arm-0.25.8.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-RONsAvGCz5oWyePVnLdZY/HHwA++nxYWIX1atInlaW6SEkwq6XkP3+cb825EUcRs5Vss/lGh/2YxAb5xqc07Uw==\\\",\\n+      \\\"cpu\\\": [\\n+        \\\"arm\\\"\\n+      ],\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"optional\\\": true,\\n+      \\\"os\\\": [\\n+        \\\"android\\\"\\n+      ],\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=18\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/@esbuild/android-arm64\\\": {\\n+      \\\"version\\\": \\\"0.25.8\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@esbuild/android-arm64/-/android-arm64-0.25.8.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-OD3p7LYzWpLhZEyATcTSJ67qB5D+20vbtr6vHlHWSQYhKtzUYrETuWThmzFpZtFsBIxRvhO07+UgVA9m0i/O1w==\\\",\\n+      \\\"cpu\\\": [\\n+        \\\"arm64\\\"\\n+      ],\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"optional\\\": true,\\n+      \\\"os\\\": [\\n+        \\\"android\\\"\\n+      ],\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=18\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/@esbuild/android-x64\\\": {\\n+      \\\"version\\\": \\\"0.25.8\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@esbuild/android-x64/-/android-x64-0.25.8.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-yJAVPklM5+4+9dTeKwHOaA+LQkmrKFX96BM0A/2zQrbS6ENCmxc4OVoBs5dPkCCak2roAD+jKCdnmOqKszPkjA==\\\",\\n+      \\\"cpu\\\": [\\n+        \\\"x64\\\"\\n+      ],\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"optional\\\": true,\\n+      \\\"os\\\": [\\n+        \\\"android\\\"\\n+      ],\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=18\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/@esbuild/darwin-arm64\\\": {\\n+      \\\"version\\\": \\\"0.25.8\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@esbuild/darwin-arm64/-/darwin-arm64-0.25.8.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-Jw0mxgIaYX6R8ODrdkLLPwBqHTtYHJSmzzd+QeytSugzQ0Vg4c5rDky5VgkoowbZQahCbsv1rT1KW72MPIkevw==\\\",\\n+      \\\"cpu\\\": [\\n+        \\\"arm64\\\"\\n+      ],\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"optional\\\": true,\\n+      \\\"os\\\": [\\n+        \\\"darwin\\\"\\n+      ],\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=18\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/@esbuild/darwin-x64\\\": {\\n+      \\\"version\\\": \\\"0.25.8\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@esbuild/darwin-x64/-/darwin-x64-0.25.8.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-Vh2gLxxHnuoQ+GjPNvDSDRpoBCUzY4Pu0kBqMBDlK4fuWbKgGtmDIeEC081xi26PPjn+1tct+Bh8FjyLlw1Zlg==\\\",\\n+      \\\"cpu\\\": [\\n+        \\\"x64\\\"\\n+      ],\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"optional\\\": true,\\n+      \\\"os\\\": [\\n+        \\\"darwin\\\"\\n+      ],\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=18\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/@esbuild/freebsd-arm64\\\": {\\n+      \\\"version\\\": \\\"0.25.8\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@esbuild/freebsd-arm64/-/freebsd-arm64-0.25.8.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-YPJ7hDQ9DnNe5vxOm6jaie9QsTwcKedPvizTVlqWG9GBSq+BuyWEDazlGaDTC5NGU4QJd666V0yqCBL2oWKPfA==\\\",\\n+      \\\"cpu\\\": [\\n+        \\\"arm64\\\"\\n+      ],\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"optional\\\": true,\\n+      \\\"os\\\": [\\n+        \\\"freebsd\\\"\\n+      ],\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=18\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/@esbuild/freebsd-x64\\\": {\\n+      \\\"version\\\": \\\"0.25.8\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@esbuild/freebsd-x64/-/freebsd-x64-0.25.8.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-MmaEXxQRdXNFsRN/KcIimLnSJrk2r5H8v+WVafRWz5xdSVmWLoITZQXcgehI2ZE6gioE6HirAEToM/RvFBeuhw==\\\",\\n+      \\\"cpu\\\": [\\n+        \\\"x64\\\"\\n+      ],\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"optional\\\": true,\\n+      \\\"os\\\": [\\n+        \\\"freebsd\\\"\\n+      ],\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=18\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/@esbuild/linux-arm\\\": {\\n+      \\\"version\\\": \\\"0.25.8\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@esbuild/linux-arm/-/linux-arm-0.25.8.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-FuzEP9BixzZohl1kLf76KEVOsxtIBFwCaLupVuk4eFVnOZfU+Wsn+x5Ryam7nILV2pkq2TqQM9EZPsOBuMC+kg==\\\",\\n+      \\\"cpu\\\": [\\n+        \\\"arm\\\"\\n+      ],\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"optional\\\": true,\\n+      \\\"os\\\": [\\n+        \\\"linux\\\"\\n+      ],\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=18\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/@esbuild/linux-arm64\\\": {\\n+      \\\"version\\\": \\\"0.25.8\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@esbuild/linux-arm64/-/linux-arm64-0.25.8.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-WIgg00ARWv/uYLU7lsuDK00d/hHSfES5BzdWAdAig1ioV5kaFNrtK8EqGcUBJhYqotlUByUKz5Qo6u8tt7iD/w==\\\",\\n+      \\\"cpu\\\": [\\n+        \\\"arm64\\\"\\n+      ],\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"optional\\\": true,\\n+      \\\"os\\\": [\\n+        \\\"linux\\\"\\n+      ],\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=18\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/@esbuild/linux-ia32\\\": {\\n+      \\\"version\\\": \\\"0.25.8\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@esbuild/linux-ia32/-/linux-ia32-0.25.8.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-A1D9YzRX1i+1AJZuFFUMP1E9fMaYY+GnSQil9Tlw05utlE86EKTUA7RjwHDkEitmLYiFsRd9HwKBPEftNdBfjg==\\\",\\n+      \\\"cpu\\\": [\\n+        \\\"ia32\\\"\\n+      ],\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"optional\\\": true,\\n+      \\\"os\\\": [\\n+        \\\"linux\\\"\\n+      ],\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=18\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/@esbuild/linux-loong64\\\": {\\n+      \\\"version\\\": \\\"0.25.8\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@esbuild/linux-loong64/-/linux-loong64-0.25.8.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-O7k1J/dwHkY1RMVvglFHl1HzutGEFFZ3kNiDMSOyUrB7WcoHGf96Sh+64nTRT26l3GMbCW01Ekh/ThKM5iI7hQ==\\\",\\n+      \\\"cpu\\\": [\\n+        \\\"loong64\\\"\\n+      ],\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"optional\\\": true,\\n+      \\\"os\\\": [\\n+        \\\"linux\\\"\\n+      ],\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=18\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/@esbuild/linux-mips64el\\\": {\\n+      \\\"version\\\": \\\"0.25.8\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@esbuild/linux-mips64el/-/linux-mips64el-0.25.8.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-uv+dqfRazte3BzfMp8PAQXmdGHQt2oC/y2ovwpTteqrMx2lwaksiFZ/bdkXJC19ttTvNXBuWH53zy/aTj1FgGw==\\\",\\n+      \\\"cpu\\\": [\\n+        \\\"mips64el\\\"\\n+      ],\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"optional\\\": true,\\n+      \\\"os\\\": [\\n+        \\\"linux\\\"\\n+      ],\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=18\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/@esbuild/linux-ppc64\\\": {\\n+      \\\"version\\\": \\\"0.25.8\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@esbuild/linux-ppc64/-/linux-ppc64-0.25.8.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-GyG0KcMi1GBavP5JgAkkstMGyMholMDybAf8wF5A70CALlDM2p/f7YFE7H92eDeH/VBtFJA5MT4nRPDGg4JuzQ==\\\",\\n+      \\\"cpu\\\": [\\n+        \\\"ppc64\\\"\\n+      ],\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"optional\\\": true,\\n+      \\\"os\\\": [\\n+        \\\"linux\\\"\\n+      ],\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=18\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/@esbuild/linux-riscv64\\\": {\\n+      \\\"version\\\": \\\"0.25.8\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@esbuild/linux-riscv64/-/linux-riscv64-0.25.8.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-rAqDYFv3yzMrq7GIcen3XP7TUEG/4LK86LUPMIz6RT8A6pRIDn0sDcvjudVZBiiTcZCY9y2SgYX2lgK3AF+1eg==\\\",\\n+      \\\"cpu\\\": [\\n+        \\\"riscv64\\\"\\n+      ],\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"optional\\\": true,\\n+      \\\"os\\\": [\\n+        \\\"linux\\\"\\n+      ],\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=18\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/@esbuild/linux-s390x\\\": {\\n+      \\\"version\\\": \\\"0.25.8\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@esbuild/linux-s390x/-/linux-s390x-0.25.8.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-Xutvh6VjlbcHpsIIbwY8GVRbwoviWT19tFhgdA7DlenLGC/mbc3lBoVb7jxj9Z+eyGqvcnSyIltYUrkKzWqSvg==\\\",\\n+      \\\"cpu\\\": [\\n+        \\\"s390x\\\"\\n+      ],\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"optional\\\": true,\\n+      \\\"os\\\": [\\n+        \\\"linux\\\"\\n+      ],\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=18\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/@esbuild/linux-x64\\\": {\\n+      \\\"version\\\": \\\"0.25.8\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@esbuild/linux-x64/-/linux-x64-0.25.8.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-ASFQhgY4ElXh3nDcOMTkQero4b1lgubskNlhIfJrsH5OKZXDpUAKBlNS0Kx81jwOBp+HCeZqmoJuihTv57/jvQ==\\\",\\n+      \\\"cpu\\\": [\\n+        \\\"x64\\\"\\n+      ],\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"optional\\\": true,\\n+      \\\"os\\\": [\\n+        \\\"linux\\\"\\n+      ],\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=18\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/@esbuild/netbsd-arm64\\\": {\\n+      \\\"version\\\": \\\"0.25.8\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@esbuild/netbsd-arm64/-/netbsd-arm64-0.25.8.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-d1KfruIeohqAi6SA+gENMuObDbEjn22olAR7egqnkCD9DGBG0wsEARotkLgXDu6c4ncgWTZJtN5vcgxzWRMzcw==\\\",\\n+      \\\"cpu\\\": [\\n+        \\\"arm64\\\"\\n+      ],\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"optional\\\": true,\\n+      \\\"os\\\": [\\n+        \\\"netbsd\\\"\\n+      ],\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=18\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/@esbuild/netbsd-x64\\\": {\\n+      \\\"version\\\": \\\"0.25.8\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@esbuild/netbsd-x64/-/netbsd-x64-0.25.8.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-nVDCkrvx2ua+XQNyfrujIG38+YGyuy2Ru9kKVNyh5jAys6n+l44tTtToqHjino2My8VAY6Lw9H7RI73XFi66Cg==\\\",\\n+      \\\"cpu\\\": [\\n+        \\\"x64\\\"\\n+      ],\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"optional\\\": true,\\n+      \\\"os\\\": [\\n+        \\\"netbsd\\\"\\n+      ],\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=18\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/@esbuild/openbsd-arm64\\\": {\\n+      \\\"version\\\": \\\"0.25.8\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@esbuild/openbsd-arm64/-/openbsd-arm64-0.25.8.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-j8HgrDuSJFAujkivSMSfPQSAa5Fxbvk4rgNAS5i3K+r8s1X0p1uOO2Hl2xNsGFppOeHOLAVgYwDVlmxhq5h+SQ==\\\",\\n+      \\\"cpu\\\": [\\n+        \\\"arm64\\\"\\n+      ],\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"optional\\\": true,\\n+      \\\"os\\\": [\\n+        \\\"openbsd\\\"\\n+      ],\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=18\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/@esbuild/openbsd-x64\\\": {\\n+      \\\"version\\\": \\\"0.25.8\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@esbuild/openbsd-x64/-/openbsd-x64-0.25.8.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-1h8MUAwa0VhNCDp6Af0HToI2TJFAn1uqT9Al6DJVzdIBAd21m/G0Yfc77KDM3uF3T/YaOgQq3qTJHPbTOInaIQ==\\\",\\n+      \\\"cpu\\\": [\\n+        \\\"x64\\\"\\n+      ],\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"optional\\\": true,\\n+      \\\"os\\\": [\\n+        \\\"openbsd\\\"\\n+      ],\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=18\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/@esbuild/openharmony-arm64\\\": {\\n+      \\\"version\\\": \\\"0.25.8\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@esbuild/openharmony-arm64/-/openharmony-arm64-0.25.8.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-r2nVa5SIK9tSWd0kJd9HCffnDHKchTGikb//9c7HX+r+wHYCpQrSgxhlY6KWV1nFo1l4KFbsMlHk+L6fekLsUg==\\\",\\n+      \\\"cpu\\\": [\\n+        \\\"arm64\\\"\\n+      ],\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"optional\\\": true,\\n+      \\\"os\\\": [\\n+        \\\"openharmony\\\"\\n+      ],\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=18\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/@esbuild/sunos-x64\\\": {\\n+      \\\"version\\\": \\\"0.25.8\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@esbuild/sunos-x64/-/sunos-x64-0.25.8.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-zUlaP2S12YhQ2UzUfcCuMDHQFJyKABkAjvO5YSndMiIkMimPmxA+BYSBikWgsRpvyxuRnow4nS5NPnf9fpv41w==\\\",\\n+      \\\"cpu\\\": [\\n+        \\\"x64\\\"\\n+      ],\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"optional\\\": true,\\n+      \\\"os\\\": [\\n+        \\\"sunos\\\"\\n+      ],\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=18\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/@esbuild/win32-arm64\\\": {\\n+      \\\"version\\\": \\\"0.25.8\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@esbuild/win32-arm64/-/win32-arm64-0.25.8.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-YEGFFWESlPva8hGL+zvj2z/SaK+pH0SwOM0Nc/d+rVnW7GSTFlLBGzZkuSU9kFIGIo8q9X3ucpZhu8PDN5A2sQ==\\\",\\n+      \\\"cpu\\\": [\\n+        \\\"arm64\\\"\\n+      ],\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"optional\\\": true,\\n+      \\\"os\\\": [\\n+        \\\"win32\\\"\\n+      ],\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=18\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/@esbuild/win32-ia32\\\": {\\n+      \\\"version\\\": \\\"0.25.8\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@esbuild/win32-ia32/-/win32-ia32-0.25.8.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-hiGgGC6KZ5LZz58OL/+qVVoZiuZlUYlYHNAmczOm7bs2oE1XriPFi5ZHHrS8ACpV5EjySrnoCKmcbQMN+ojnHg==\\\",\\n+      \\\"cpu\\\": [\\n+        \\\"ia32\\\"\\n+      ],\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"optional\\\": true,\\n+      \\\"os\\\": [\\n+        \\\"win32\\\"\\n+      ],\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=18\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/@esbuild/win32-x64\\\": {\\n+      \\\"version\\\": \\\"0.25.8\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@esbuild/win32-x64/-/win32-x64-0.25.8.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-cn3Yr7+OaaZq1c+2pe+8yxC8E144SReCQjN6/2ynubzYjvyqZjTXfQJpAcQpsdJq3My7XADANiYGHoFC69pLQw==\\\",\\n+      \\\"cpu\\\": [\\n+        \\\"x64\\\"\\n+      ],\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"optional\\\": true,\\n+      \\\"os\\\": [\\n+        \\\"win32\\\"\\n+      ],\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=18\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/@eslint-community/eslint-utils\\\": {\\n+      \\\"version\\\": \\\"4.7.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@eslint-community/eslint-utils/-/eslint-utils-4.7.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-dyybb3AcajC7uha6CvhdVRJqaKyn7w2YKqKyAN37NKYgZT36w+iRb0Dymmc5qEJ549c/S31cMMSFd75bteCpCw==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"eslint-visitor-keys\\\": \\\"^3.4.3\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\"^12.22.0 || ^14.17.0 || >=16.0.0\\\"\\n+      },\\n+      \\\"funding\\\": {\\n+        \\\"url\\\": \\\"https://opencollective.com/eslint\\\"\\n+      },\\n+      \\\"peerDependencies\\\": {\\n+        \\\"eslint\\\": \\\"^6.0.0 || ^7.0.0 || >=8.0.0\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/@eslint-community/regexpp\\\": {\\n+      \\\"version\\\": \\\"4.12.1\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@eslint-community/regexpp/-/regexpp-4.12.1.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-CCZCDJuduB9OUkFkY2IgppNZMi2lBQgD2qzwXkEia16cge2pijY/aXi96CJMquDMn3nJdlPV1A5KrJEXwfLNzQ==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\"^12.0.0 || ^14.0.0 || >=16.0.0\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/@eslint/eslintrc\\\": {\\n+      \\\"version\\\": \\\"2.1.4\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@eslint/eslintrc/-/eslintrc-2.1.4.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-269Z39MS6wVJtsoUl10L60WdkhJVdPG24Q4eZTH3nnF6lpvSShEK3wQjDX9JRWAUPvPh7COouPpU9IrqaZFvtQ==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"ajv\\\": \\\"^6.12.4\\\",\\n+        \\\"debug\\\": \\\"^4.3.2\\\",\\n+        \\\"espree\\\": \\\"^9.6.0\\\",\\n+        \\\"globals\\\": \\\"^13.19.0\\\",\\n+        \\\"ignore\\\": \\\"^5.2.0\\\",\\n+        \\\"import-fresh\\\": \\\"^3.2.1\\\",\\n+        \\\"js-yaml\\\": \\\"^4.1.0\\\",\\n+        \\\"minimatch\\\": \\\"^3.1.2\\\",\\n+        \\\"strip-json-comments\\\": \\\"^3.1.1\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\"^12.22.0 || ^14.17.0 || >=16.0.0\\\"\\n+      },\\n+      \\\"funding\\\": {\\n+        \\\"url\\\": \\\"https://opencollective.com/eslint\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/@eslint/eslintrc/node_modules/brace-expansion\\\": {\\n+      \\\"version\\\": \\\"1.1.12\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.12.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"balanced-match\\\": \\\"^1.0.0\\\",\\n+        \\\"concat-map\\\": \\\"0.0.1\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/@eslint/eslintrc/node_modules/minimatch\\\": {\\n+      \\\"version\\\": \\\"3.1.2\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"ISC\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"brace-expansion\\\": \\\"^1.1.7\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\"*\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/@eslint/js\\\": {\\n+      \\\"version\\\": \\\"8.57.1\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@eslint/js/-/js-8.57.1.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-d9zaMRSTIKDLhctzH12MtXvJKSSUhaHcjV+2Z+GK+EEY7XKpP5yR4x+N3TAcHTcu963nIr+TMcCb4DBCYX1z6Q==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\"^12.22.0 || ^14.17.0 || >=16.0.0\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/@humanwhocodes/config-array\\\": {\\n+      \\\"version\\\": \\\"0.13.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@humanwhocodes/config-array/-/config-array-0.13.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-DZLEEqFWQFiyK6h5YIeynKx7JlvCYWL0cImfSRXZ9l4Sg2efkFGTuFf6vzXjK1cq6IYkU+Eg/JizXw+TD2vRNw==\\\",\\n+      \\\"deprecated\\\": \\\"Use @eslint/config-array instead\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"Apache-2.0\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"@humanwhocodes/object-schema\\\": \\\"^2.0.3\\\",\\n+        \\\"debug\\\": \\\"^4.3.1\\\",\\n+        \\\"minimatch\\\": \\\"^3.0.5\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=10.10.0\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/@humanwhocodes/config-array/node_modules/brace-expansion\\\": {\\n+      \\\"version\\\": \\\"1.1.12\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.12.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"balanced-match\\\": \\\"^1.0.0\\\",\\n+        \\\"concat-map\\\": \\\"0.0.1\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/@humanwhocodes/config-array/node_modules/minimatch\\\": {\\n+      \\\"version\\\": \\\"3.1.2\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"ISC\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"brace-expansion\\\": \\\"^1.1.7\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\"*\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/@humanwhocodes/module-importer\\\": {\\n+      \\\"version\\\": \\\"1.0.1\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@humanwhocodes/module-importer/-/module-importer-1.0.1.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-bxveV4V8v5Yb4ncFTT3rPSgZBOpCkjfK0y4oVVVJwIuDVBRMDXrPyXRL988i5ap9m9bnyEEjWfm5WkBmtffLfA==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"Apache-2.0\\\",\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=12.22\\\"\\n+      },\\n+      \\\"funding\\\": {\\n+        \\\"type\\\": \\\"github\\\",\\n+        \\\"url\\\": \\\"https://github.com/sponsors/nzakas\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/@humanwhocodes/object-schema\\\": {\\n+      \\\"version\\\": \\\"2.0.3\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@humanwhocodes/object-schema/-/object-schema-2.0.3.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-93zYdMES/c1D69yZiKDBj0V24vqNzB/koF26KPaagAfd3P/4gUlh3Dys5ogAK+Exi9QyzlD8x/08Zt7wIKcDcA==\\\",\\n+      \\\"deprecated\\\": \\\"Use @eslint/object-schema instead\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"BSD-3-Clause\\\"\\n+    },\\n+    \\\"node_modules/@isaacs/cliui\\\": {\\n+      \\\"version\\\": \\\"8.0.2\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@isaacs/cliui/-/cliui-8.0.2.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-O8jcjabXaleOG9DQ0+ARXWZBTfnP4WNAqzuiJK7ll44AmxGKv/J2M4TPjxjY3znBCfvBXFzucm1twdyFybFqEA==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"ISC\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"string-width\\\": \\\"^5.1.2\\\",\\n+        \\\"string-width-cjs\\\": \\\"npm:string-width@^4.2.0\\\",\\n+        \\\"strip-ansi\\\": \\\"^7.0.1\\\",\\n+        \\\"strip-ansi-cjs\\\": \\\"npm:strip-ansi@^6.0.1\\\",\\n+        \\\"wrap-ansi\\\": \\\"^8.1.0\\\",\\n+        \\\"wrap-ansi-cjs\\\": \\\"npm:wrap-ansi@^7.0.0\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=12\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/@isaacs/cliui/node_modules/ansi-regex\\\": {\\n+      \\\"version\\\": \\\"6.1.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/ansi-regex/-/ansi-regex-6.1.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-7HSX4QQb4CspciLpVFwyRe79O3xsIZDDLER21kERQ71oaPodF8jL725AgJMFAYbooIqolJoRLuM81SpeUkpkvA==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=12\\\"\\n+      },\\n+      \\\"funding\\\": {\\n+        \\\"url\\\": \\\"https://github.com/chalk/ansi-regex?sponsor=1\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/@isaacs/cliui/node_modules/strip-ansi\\\": {\\n+      \\\"version\\\": \\\"7.1.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/strip-ansi/-/strip-ansi-7.1.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-iq6eVVI64nQQTRYq2KtEg2d2uU7LElhTJwsH4YzIHZshxlgZms/wIc4VoDQTlG/IvVIrBKG06CrZnp0qv7hkcQ==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"ansi-regex\\\": \\\"^6.0.1\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=12\\\"\\n+      },\\n+      \\\"funding\\\": {\\n+        \\\"url\\\": \\\"https://github.com/chalk/strip-ansi?sponsor=1\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/@jest/schemas\\\": {\\n+      \\\"version\\\": \\\"29.6.3\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@jest/schemas/-/schemas-29.6.3.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-mo5j5X+jIZmJQveBKeS/clAueipV7KgiX1vMgCxam1RNYiqE1w62n0/tJJnHtjW8ZHcQco5gY85jA3mi0L+nSA==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"@sinclair/typebox\\\": \\\"^0.27.8\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\"^14.15.0 || ^16.10.0 || >=18.0.0\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/@jridgewell/gen-mapping\\\": {\\n+      \\\"version\\\": \\\"0.3.12\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@jridgewell/gen-mapping/-/gen-mapping-0.3.12.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-OuLGC46TjB5BbN1dH8JULVVZY4WTdkF7tV9Ys6wLL1rubZnCMstOhNHueU5bLCrnRuDhKPDM4g6sw4Bel5Gzqg==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"@jridgewell/sourcemap-codec\\\": \\\"^1.5.0\\\",\\n+        \\\"@jridgewell/trace-mapping\\\": \\\"^0.3.24\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/@jridgewell/resolve-uri\\\": {\\n+      \\\"version\\\": \\\"3.1.2\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@jridgewell/resolve-uri/-/resolve-uri-3.1.2.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-bRISgCIjP20/tbWSPWMEi54QVPRZExkuD9lJL+UIxUKtwVJA8wW1Trb1jMs1RFXo1CBTNZ/5hpC9QvmKWdopKw==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=6.0.0\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/@jridgewell/sourcemap-codec\\\": {\\n+      \\\"version\\\": \\\"1.5.4\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.5.4.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-VT2+G1VQs/9oz078bLrYbecdZKs912zQlkelYpuf+SXF+QvZDYJlbx/LSx+meSAwdDFnF8FVXW92AVjjkVmgFw==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\"\\n+    },\\n+    \\\"node_modules/@jridgewell/trace-mapping\\\": {\\n+      \\\"version\\\": \\\"0.3.29\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@jridgewell/trace-mapping/-/trace-mapping-0.3.29.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-uw6guiW/gcAGPDhLmd77/6lW8QLeiV5RUTsAX46Db6oLhGaVj4lhnPwb184s1bkc8kdVg/+h988dro8GRDpmYQ==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"@jridgewell/resolve-uri\\\": \\\"^3.1.0\\\",\\n+        \\\"@jridgewell/sourcemap-codec\\\": \\\"^1.4.14\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/@nodelib/fs.scandir\\\": {\\n+      \\\"version\\\": \\\"2.1.5\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@nodelib/fs.scandir/-/fs.scandir-2.1.5.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-vq24Bq3ym5HEQm2NKCr3yXDwjc7vTsEThRDnkp2DK9p1uqLR+DHurm/NOTo0KG7HYHU7eppKZj3MyqYuMBf62g==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"@nodelib/fs.stat\\\": \\\"2.0.5\\\",\\n+        \\\"run-parallel\\\": \\\"^1.1.9\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">= 8\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/@nodelib/fs.stat\\\": {\\n+      \\\"version\\\": \\\"2.0.5\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@nodelib/fs.stat/-/fs.stat-2.0.5.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">= 8\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/@nodelib/fs.walk\\\": {\\n+      \\\"version\\\": \\\"1.2.8\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@nodelib/fs.walk/-/fs.walk-1.2.8.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-oGB+UxlgWcgQkgwo8GcEGwemoTFt3FIO9ababBmaGwXIoBKZ+GTy0pP185beGg7Llih/NSHSV2XAs1lnznocSg==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"@nodelib/fs.scandir\\\": \\\"2.1.5\\\",\\n+        \\\"fastq\\\": \\\"^1.6.0\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">= 8\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/@pkgjs/parseargs\\\": {\\n+      \\\"version\\\": \\\"0.11.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@pkgjs/parseargs/-/parseargs-0.11.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-+1VkjdD0QBLPodGrJUeqarH8VAIvQODIbwh9XpP5Syisf7YoQgsJKPNFoqqLQlu+VQ/tVSshMR6loPMn8U+dPg==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"optional\\\": true,\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=14\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/@rollup/rollup-android-arm-eabi\\\": {\\n+      \\\"version\\\": \\\"4.45.1\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@rollup/rollup-android-arm-eabi/-/rollup-android-arm-eabi-4.45.1.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-NEySIFvMY0ZQO+utJkgoMiCAjMrGvnbDLHvcmlA33UXJpYBCvlBEbMMtV837uCkS+plG2umfhn0T5mMAxGrlRA==\\\",\\n+      \\\"cpu\\\": [\\n+        \\\"arm\\\"\\n+      ],\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"optional\\\": true,\\n+      \\\"os\\\": [\\n+        \\\"android\\\"\\n+      ]\\n+    },\\n+    \\\"node_modules/@rollup/rollup-android-arm64\\\": {\\n+      \\\"version\\\": \\\"4.45.1\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@rollup/rollup-android-arm64/-/rollup-android-arm64-4.45.1.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-ujQ+sMXJkg4LRJaYreaVx7Z/VMgBBd89wGS4qMrdtfUFZ+TSY5Rs9asgjitLwzeIbhwdEhyj29zhst3L1lKsRQ==\\\",\\n+      \\\"cpu\\\": [\\n+        \\\"arm64\\\"\\n+      ],\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"optional\\\": true,\\n+      \\\"os\\\": [\\n+        \\\"android\\\"\\n+      ]\\n+    },\\n+    \\\"node_modules/@rollup/rollup-darwin-arm64\\\": {\\n+      \\\"version\\\": \\\"4.45.1\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@rollup/rollup-darwin-arm64/-/rollup-darwin-arm64-4.45.1.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-FSncqHvqTm3lC6Y13xncsdOYfxGSLnP+73k815EfNmpewPs+EyM49haPS105Rh4aF5mJKywk9X0ogzLXZzN9lA==\\\",\\n+      \\\"cpu\\\": [\\n+        \\\"arm64\\\"\\n+      ],\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"optional\\\": true,\\n+      \\\"os\\\": [\\n+        \\\"darwin\\\"\\n+      ]\\n+    },\\n+    \\\"node_modules/@rollup/rollup-darwin-x64\\\": {\\n+      \\\"version\\\": \\\"4.45.1\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@rollup/rollup-darwin-x64/-/rollup-darwin-x64-4.45.1.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-2/vVn/husP5XI7Fsf/RlhDaQJ7x9zjvC81anIVbr4b/f0xtSmXQTFcGIQ/B1cXIYM6h2nAhJkdMHTnD7OtQ9Og==\\\",\\n+      \\\"cpu\\\": [\\n+        \\\"x64\\\"\\n+      ],\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"optional\\\": true,\\n+      \\\"os\\\": [\\n+        \\\"darwin\\\"\\n+      ]\\n+    },\\n+    \\\"node_modules/@rollup/rollup-freebsd-arm64\\\": {\\n+      \\\"version\\\": \\\"4.45.1\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@rollup/rollup-freebsd-arm64/-/rollup-freebsd-arm64-4.45.1.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-4g1kaDxQItZsrkVTdYQ0bxu4ZIQ32cotoQbmsAnW1jAE4XCMbcBPDirX5fyUzdhVCKgPcrwWuucI8yrVRBw2+g==\\\",\\n+      \\\"cpu\\\": [\\n+        \\\"arm64\\\"\\n+      ],\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"optional\\\": true,\\n+      \\\"os\\\": [\\n+        \\\"freebsd\\\"\\n+      ]\\n+    },\\n+    \\\"node_modules/@rollup/rollup-freebsd-x64\\\": {\\n+      \\\"version\\\": \\\"4.45.1\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@rollup/rollup-freebsd-x64/-/rollup-freebsd-x64-4.45.1.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-L/6JsfiL74i3uK1Ti2ZFSNsp5NMiM4/kbbGEcOCps99aZx3g8SJMO1/9Y0n/qKlWZfn6sScf98lEOUe2mBvW9A==\\\",\\n+      \\\"cpu\\\": [\\n+        \\\"x64\\\"\\n+      ],\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"optional\\\": true,\\n+      \\\"os\\\": [\\n+        \\\"freebsd\\\"\\n+      ]\\n+    },\\n+    \\\"node_modules/@rollup/rollup-linux-arm-gnueabihf\\\": {\\n+      \\\"version\\\": \\\"4.45.1\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@rollup/rollup-linux-arm-gnueabihf/-/rollup-linux-arm-gnueabihf-4.45.1.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-RkdOTu2jK7brlu+ZwjMIZfdV2sSYHK2qR08FUWcIoqJC2eywHbXr0L8T/pONFwkGukQqERDheaGTeedG+rra6Q==\\\",\\n+      \\\"cpu\\\": [\\n+        \\\"arm\\\"\\n+      ],\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"optional\\\": true,\\n+      \\\"os\\\": [\\n+        \\\"linux\\\"\\n+      ]\\n+    },\\n+    \\\"node_modules/@rollup/rollup-linux-arm-musleabihf\\\": {\\n+      \\\"version\\\": \\\"4.45.1\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@rollup/rollup-linux-arm-musleabihf/-/rollup-linux-arm-musleabihf-4.45.1.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-3kJ8pgfBt6CIIr1o+HQA7OZ9mp/zDk3ctekGl9qn/pRBgrRgfwiffaUmqioUGN9hv0OHv2gxmvdKOkARCtRb8Q==\\\",\\n+      \\\"cpu\\\": [\\n+        \\\"arm\\\"\\n+      ],\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"optional\\\": true,\\n+      \\\"os\\\": [\\n+        \\\"linux\\\"\\n+      ]\\n+    },\\n+    \\\"node_modules/@rollup/rollup-linux-arm64-gnu\\\": {\\n+      \\\"version\\\": \\\"4.45.1\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@rollup/rollup-linux-arm64-gnu/-/rollup-linux-arm64-gnu-4.45.1.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-k3dOKCfIVixWjG7OXTCOmDfJj3vbdhN0QYEqB+OuGArOChek22hn7Uy5A/gTDNAcCy5v2YcXRJ/Qcnm4/ma1xw==\\\",\\n+      \\\"cpu\\\": [\\n+        \\\"arm64\\\"\\n+      ],\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"optional\\\": true,\\n+      \\\"os\\\": [\\n+        \\\"linux\\\"\\n+      ]\\n+    },\\n+    \\\"node_modules/@rollup/rollup-linux-arm64-musl\\\": {\\n+      \\\"version\\\": \\\"4.45.1\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@rollup/rollup-linux-arm64-musl/-/rollup-linux-arm64-musl-4.45.1.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-PmI1vxQetnM58ZmDFl9/Uk2lpBBby6B6rF4muJc65uZbxCs0EA7hhKCk2PKlmZKuyVSHAyIw3+/SiuMLxKxWog==\\\",\\n+      \\\"cpu\\\": [\\n+        \\\"arm64\\\"\\n+      ],\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"optional\\\": true,\\n+      \\\"os\\\": [\\n+        \\\"linux\\\"\\n+      ]\\n+    },\\n+    \\\"node_modules/@rollup/rollup-linux-loongarch64-gnu\\\": {\\n+      \\\"version\\\": \\\"4.45.1\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@rollup/rollup-linux-loongarch64-gnu/-/rollup-linux-loongarch64-gnu-4.45.1.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-9UmI0VzGmNJ28ibHW2GpE2nF0PBQqsyiS4kcJ5vK+wuwGnV5RlqdczVocDSUfGX/Na7/XINRVoUgJyFIgipoRg==\\\",\\n+      \\\"cpu\\\": [\\n+        \\\"loong64\\\"\\n+      ],\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"optional\\\": true,\\n+      \\\"os\\\": [\\n+        \\\"linux\\\"\\n+      ]\\n+    },\\n+    \\\"node_modules/@rollup/rollup-linux-powerpc64le-gnu\\\": {\\n+      \\\"version\\\": \\\"4.45.1\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@rollup/rollup-linux-powerpc64le-gnu/-/rollup-linux-powerpc64le-gnu-4.45.1.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-7nR2KY8oEOUTD3pBAxIBBbZr0U7U+R9HDTPNy+5nVVHDXI4ikYniH1oxQz9VoB5PbBU1CZuDGHkLJkd3zLMWsg==\\\",\\n+      \\\"cpu\\\": [\\n+        \\\"ppc64\\\"\\n+      ],\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"optional\\\": true,\\n+      \\\"os\\\": [\\n+        \\\"linux\\\"\\n+      ]\\n+    },\\n+    \\\"node_modules/@rollup/rollup-linux-riscv64-gnu\\\": {\\n+      \\\"version\\\": \\\"4.45.1\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@rollup/rollup-linux-riscv64-gnu/-/rollup-linux-riscv64-gnu-4.45.1.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-nlcl3jgUultKROfZijKjRQLUu9Ma0PeNv/VFHkZiKbXTBQXhpytS8CIj5/NfBeECZtY2FJQubm6ltIxm/ftxpw==\\\",\\n+      \\\"cpu\\\": [\\n+        \\\"riscv64\\\"\\n+      ],\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"optional\\\": true,\\n+      \\\"os\\\": [\\n+        \\\"linux\\\"\\n+      ]\\n+    },\\n+    \\\"node_modules/@rollup/rollup-linux-riscv64-musl\\\": {\\n+      \\\"version\\\": \\\"4.45.1\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@rollup/rollup-linux-riscv64-musl/-/rollup-linux-riscv64-musl-4.45.1.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-HJV65KLS51rW0VY6rvZkiieiBnurSzpzore1bMKAhunQiECPuxsROvyeaot/tcK3A3aGnI+qTHqisrpSgQrpgA==\\\",\\n+      \\\"cpu\\\": [\\n+        \\\"riscv64\\\"\\n+      ],\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"optional\\\": true,\\n+      \\\"os\\\": [\\n+        \\\"linux\\\"\\n+      ]\\n+    },\\n+    \\\"node_modules/@rollup/rollup-linux-s390x-gnu\\\": {\\n+      \\\"version\\\": \\\"4.45.1\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@rollup/rollup-linux-s390x-gnu/-/rollup-linux-s390x-gnu-4.45.1.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-NITBOCv3Qqc6hhwFt7jLV78VEO/il4YcBzoMGGNxznLgRQf43VQDae0aAzKiBeEPIxnDrACiMgbqjuihx08OOw==\\\",\\n+      \\\"cpu\\\": [\\n+        \\\"s390x\\\"\\n+      ],\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"optional\\\": true,\\n+      \\\"os\\\": [\\n+        \\\"linux\\\"\\n+      ]\\n+    },\\n+    \\\"node_modules/@rollup/rollup-linux-x64-gnu\\\": {\\n+      \\\"version\\\": \\\"4.45.1\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@rollup/rollup-linux-x64-gnu/-/rollup-linux-x64-gnu-4.45.1.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-+E/lYl6qu1zqgPEnTrs4WysQtvc/Sh4fC2nByfFExqgYrqkKWp1tWIbe+ELhixnenSpBbLXNi6vbEEJ8M7fiHw==\\\",\\n+      \\\"cpu\\\": [\\n+        \\\"x64\\\"\\n+      ],\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"optional\\\": true,\\n+      \\\"os\\\": [\\n+        \\\"linux\\\"\\n+      ]\\n+    },\\n+    \\\"node_modules/@rollup/rollup-linux-x64-musl\\\": {\\n+      \\\"version\\\": \\\"4.45.1\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@rollup/rollup-linux-x64-musl/-/rollup-linux-x64-musl-4.45.1.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-a6WIAp89p3kpNoYStITT9RbTbTnqarU7D8N8F2CV+4Cl9fwCOZraLVuVFvlpsW0SbIiYtEnhCZBPLoNdRkjQFw==\\\",\\n+      \\\"cpu\\\": [\\n+        \\\"x64\\\"\\n+      ],\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"optional\\\": true,\\n+      \\\"os\\\": [\\n+        \\\"linux\\\"\\n+      ]\\n+    },\\n+    \\\"node_modules/@rollup/rollup-win32-arm64-msvc\\\": {\\n+      \\\"version\\\": \\\"4.45.1\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@rollup/rollup-win32-arm64-msvc/-/rollup-win32-arm64-msvc-4.45.1.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-T5Bi/NS3fQiJeYdGvRpTAP5P02kqSOpqiopwhj0uaXB6nzs5JVi2XMJb18JUSKhCOX8+UE1UKQufyD6Or48dJg==\\\",\\n+      \\\"cpu\\\": [\\n+        \\\"arm64\\\"\\n+      ],\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"optional\\\": true,\\n+      \\\"os\\\": [\\n+        \\\"win32\\\"\\n+      ]\\n+    },\\n+    \\\"node_modules/@rollup/rollup-win32-ia32-msvc\\\": {\\n+      \\\"version\\\": \\\"4.45.1\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@rollup/rollup-win32-ia32-msvc/-/rollup-win32-ia32-msvc-4.45.1.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-lxV2Pako3ujjuUe9jiU3/s7KSrDfH6IgTSQOnDWr9aJ92YsFd7EurmClK0ly/t8dzMkDtd04g60WX6yl0sGfdw==\\\",\\n+      \\\"cpu\\\": [\\n+        \\\"ia32\\\"\\n+      ],\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"optional\\\": true,\\n+      \\\"os\\\": [\\n+        \\\"win32\\\"\\n+      ]\\n+    },\\n+    \\\"node_modules/@rollup/rollup-win32-x64-msvc\\\": {\\n+      \\\"version\\\": \\\"4.45.1\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@rollup/rollup-win32-x64-msvc/-/rollup-win32-x64-msvc-4.45.1.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-M/fKi4sasCdM8i0aWJjCSFm2qEnYRR8AMLG2kxp6wD13+tMGA4Z1tVAuHkNRjud5SW2EM3naLuK35w9twvf6aA==\\\",\\n+      \\\"cpu\\\": [\\n+        \\\"x64\\\"\\n+      ],\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"optional\\\": true,\\n+      \\\"os\\\": [\\n+        \\\"win32\\\"\\n+      ]\\n+    },\\n+    \\\"node_modules/@sinclair/typebox\\\": {\\n+      \\\"version\\\": \\\"0.27.8\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@sinclair/typebox/-/typebox-0.27.8.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-+Fj43pSMwJs4KRrH/938Uf+uAELIgVBmQzg/q1YG10djyfA3TnrU8N8XzqCh/okZdszqBQTZf96idMfE5lnwTA==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\"\\n+    },\\n+    \\\"node_modules/@types/estree\\\": {\\n+      \\\"version\\\": \\\"1.0.8\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@types/estree/-/estree-1.0.8.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-dWHzHa2WqEXI/O1E9OjrocMTKJl2mSrEolh1Iomrv6U+JuNwaHXsXx9bLu5gG7BUWFIN0skIQJQ/L1rIex4X6w==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\"\\n+    },\\n+    \\\"node_modules/@types/json-schema\\\": {\\n+      \\\"version\\\": \\\"7.0.15\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@types/json-schema/-/json-schema-7.0.15.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-5+fP8P8MFNC+AyZCDxrB2pkZFPGzqQWUzpSeuuVLvm8VMcorNYavBqoFcxK8bQz4Qsbn4oUEEem4wDLfcysGHA==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\"\\n+    },\\n+    \\\"node_modules/@types/node\\\": {\\n+      \\\"version\\\": \\\"20.19.9\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@types/node/-/node-20.19.9.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-cuVNgarYWZqxRJDQHEB58GEONhOK79QVR/qYx4S7kcUObQvUwvFnYxJuuHUKm2aieN9X3yZB4LZsuYNU1Qphsw==\\\",\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"undici-types\\\": \\\"~6.21.0\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/@types/semver\\\": {\\n+      \\\"version\\\": \\\"7.7.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@types/semver/-/semver-7.7.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-k107IF4+Xr7UHjwDc7Cfd6PRQfbdkiRabXGRjo07b4WyPahFBZCZ1sE+BNxYIJPPg73UkfOsVOLwqVc/6ETrIA==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\"\\n+    },\\n+    \\\"node_modules/@typescript-eslint/eslint-plugin\\\": {\\n+      \\\"version\\\": \\\"6.21.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@typescript-eslint/eslint-plugin/-/eslint-plugin-6.21.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-oy9+hTPCUFpngkEZUSzbf9MxI65wbKFoQYsgPdILTfbUldp5ovUuphZVe4i30emU9M/kP+T64Di0mxl7dSw3MA==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"@eslint-community/regexpp\\\": \\\"^4.5.1\\\",\\n+        \\\"@typescript-eslint/scope-manager\\\": \\\"6.21.0\\\",\\n+        \\\"@typescript-eslint/type-utils\\\": \\\"6.21.0\\\",\\n+        \\\"@typescript-eslint/utils\\\": \\\"6.21.0\\\",\\n+        \\\"@typescript-eslint/visitor-keys\\\": \\\"6.21.0\\\",\\n+        \\\"debug\\\": \\\"^4.3.4\\\",\\n+        \\\"graphemer\\\": \\\"^1.4.0\\\",\\n+        \\\"ignore\\\": \\\"^5.2.4\\\",\\n+        \\\"natural-compare\\\": \\\"^1.4.0\\\",\\n+        \\\"semver\\\": \\\"^7.5.4\\\",\\n+        \\\"ts-api-utils\\\": \\\"^1.0.1\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\"^16.0.0 || >=18.0.0\\\"\\n+      },\\n+      \\\"funding\\\": {\\n+        \\\"type\\\": \\\"opencollective\\\",\\n+        \\\"url\\\": \\\"https://opencollective.com/typescript-eslint\\\"\\n+      },\\n+      \\\"peerDependencies\\\": {\\n+        \\\"@typescript-eslint/parser\\\": \\\"^6.0.0 || ^6.0.0-alpha\\\",\\n+        \\\"eslint\\\": \\\"^7.0.0 || ^8.0.0\\\"\\n+      },\\n+      \\\"peerDependenciesMeta\\\": {\\n+        \\\"typescript\\\": {\\n+          \\\"optional\\\": true\\n+        }\\n+      }\\n+    },\\n+    \\\"node_modules/@typescript-eslint/parser\\\": {\\n+      \\\"version\\\": \\\"6.21.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@typescript-eslint/parser/-/parser-6.21.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-tbsV1jPne5CkFQCgPBcDOt30ItF7aJoZL997JSF7MhGQqOeT3svWRYxiqlfA5RUdlHN6Fi+EI9bxqbdyAUZjYQ==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"BSD-2-Clause\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"@typescript-eslint/scope-manager\\\": \\\"6.21.0\\\",\\n+        \\\"@typescript-eslint/types\\\": \\\"6.21.0\\\",\\n+        \\\"@typescript-eslint/typescript-estree\\\": \\\"6.21.0\\\",\\n+        \\\"@typescript-eslint/visitor-keys\\\": \\\"6.21.0\\\",\\n+        \\\"debug\\\": \\\"^4.3.4\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\"^16.0.0 || >=18.0.0\\\"\\n+      },\\n+      \\\"funding\\\": {\\n+        \\\"type\\\": \\\"opencollective\\\",\\n+        \\\"url\\\": \\\"https://opencollective.com/typescript-eslint\\\"\\n+      },\\n+      \\\"peerDependencies\\\": {\\n+        \\\"eslint\\\": \\\"^7.0.0 || ^8.0.0\\\"\\n+      },\\n+      \\\"peerDependenciesMeta\\\": {\\n+        \\\"typescript\\\": {\\n+          \\\"optional\\\": true\\n+        }\\n+      }\\n+    },\\n+    \\\"node_modules/@typescript-eslint/scope-manager\\\": {\\n+      \\\"version\\\": \\\"6.21.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@typescript-eslint/scope-manager/-/scope-manager-6.21.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-OwLUIWZJry80O99zvqXVEioyniJMa+d2GrqpUTqi5/v5D5rOrppJVBPa0yKCblcigC0/aYAzxxqQ1B+DS2RYsg==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"@typescript-eslint/types\\\": \\\"6.21.0\\\",\\n+        \\\"@typescript-eslint/visitor-keys\\\": \\\"6.21.0\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\"^16.0.0 || >=18.0.0\\\"\\n+      },\\n+      \\\"funding\\\": {\\n+        \\\"type\\\": \\\"opencollective\\\",\\n+        \\\"url\\\": \\\"https://opencollective.com/typescript-eslint\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/@typescript-eslint/type-utils\\\": {\\n+      \\\"version\\\": \\\"6.21.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@typescript-eslint/type-utils/-/type-utils-6.21.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-rZQI7wHfao8qMX3Rd3xqeYSMCL3SoiSQLBATSiVKARdFGCYSRvmViieZjqc58jKgs8Y8i9YvVVhRbHSTA4VBag==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"@typescript-eslint/typescript-estree\\\": \\\"6.21.0\\\",\\n+        \\\"@typescript-eslint/utils\\\": \\\"6.21.0\\\",\\n+        \\\"debug\\\": \\\"^4.3.4\\\",\\n+        \\\"ts-api-utils\\\": \\\"^1.0.1\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\"^16.0.0 || >=18.0.0\\\"\\n+      },\\n+      \\\"funding\\\": {\\n+        \\\"type\\\": \\\"opencollective\\\",\\n+        \\\"url\\\": \\\"https://opencollective.com/typescript-eslint\\\"\\n+      },\\n+      \\\"peerDependencies\\\": {\\n+        \\\"eslint\\\": \\\"^7.0.0 || ^8.0.0\\\"\\n+      },\\n+      \\\"peerDependenciesMeta\\\": {\\n+        \\\"typescript\\\": {\\n+          \\\"optional\\\": true\\n+        }\\n+      }\\n+    },\\n+    \\\"node_modules/@typescript-eslint/types\\\": {\\n+      \\\"version\\\": \\\"6.21.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@typescript-eslint/types/-/types-6.21.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-1kFmZ1rOm5epu9NZEZm1kckCDGj5UJEf7P1kliH4LKu/RkwpsfqqGmY2OOcUs18lSlQBKLDYBOGxRVtrMN5lpg==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\"^16.0.0 || >=18.0.0\\\"\\n+      },\\n+      \\\"funding\\\": {\\n+        \\\"type\\\": \\\"opencollective\\\",\\n+        \\\"url\\\": \\\"https://opencollective.com/typescript-eslint\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/@typescript-eslint/typescript-estree\\\": {\\n+      \\\"version\\\": \\\"6.21.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@typescript-eslint/typescript-estree/-/typescript-estree-6.21.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-6npJTkZcO+y2/kr+z0hc4HwNfrrP4kNYh57ek7yCNlrBjWQ1Y0OS7jiZTkgumrvkX5HkEKXFZkkdFNkaW2wmUQ==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"BSD-2-Clause\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"@typescript-eslint/types\\\": \\\"6.21.0\\\",\\n+        \\\"@typescript-eslint/visitor-keys\\\": \\\"6.21.0\\\",\\n+        \\\"debug\\\": \\\"^4.3.4\\\",\\n+        \\\"globby\\\": \\\"^11.1.0\\\",\\n+        \\\"is-glob\\\": \\\"^4.0.3\\\",\\n+        \\\"minimatch\\\": \\\"9.0.3\\\",\\n+        \\\"semver\\\": \\\"^7.5.4\\\",\\n+        \\\"ts-api-utils\\\": \\\"^1.0.1\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\"^16.0.0 || >=18.0.0\\\"\\n+      },\\n+      \\\"funding\\\": {\\n+        \\\"type\\\": \\\"opencollective\\\",\\n+        \\\"url\\\": \\\"https://opencollective.com/typescript-eslint\\\"\\n+      },\\n+      \\\"peerDependenciesMeta\\\": {\\n+        \\\"typescript\\\": {\\n+          \\\"optional\\\": true\\n+        }\\n+      }\\n+    },\\n+    \\\"node_modules/@typescript-eslint/utils\\\": {\\n+      \\\"version\\\": \\\"6.21.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@typescript-eslint/utils/-/utils-6.21.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-NfWVaC8HP9T8cbKQxHcsJBY5YE1O33+jpMwN45qzWWaPDZgLIbo12toGMWnmhvCpd3sIxkpDw3Wv1B3dYrbDQQ==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"@eslint-community/eslint-utils\\\": \\\"^4.4.0\\\",\\n+        \\\"@types/json-schema\\\": \\\"^7.0.12\\\",\\n+        \\\"@types/semver\\\": \\\"^7.5.0\\\",\\n+        \\\"@typescript-eslint/scope-manager\\\": \\\"6.21.0\\\",\\n+        \\\"@typescript-eslint/types\\\": \\\"6.21.0\\\",\\n+        \\\"@typescript-eslint/typescript-estree\\\": \\\"6.21.0\\\",\\n+        \\\"semver\\\": \\\"^7.5.4\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\"^16.0.0 || >=18.0.0\\\"\\n+      },\\n+      \\\"funding\\\": {\\n+        \\\"type\\\": \\\"opencollective\\\",\\n+        \\\"url\\\": \\\"https://opencollective.com/typescript-eslint\\\"\\n+      },\\n+      \\\"peerDependencies\\\": {\\n+        \\\"eslint\\\": \\\"^7.0.0 || ^8.0.0\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/@typescript-eslint/visitor-keys\\\": {\\n+      \\\"version\\\": \\\"6.21.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@typescript-eslint/visitor-keys/-/visitor-keys-6.21.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-JJtkDduxLi9bivAB+cYOVMtbkqdPOhZ+ZI5LC47MIRrDV4Yn2o+ZnW10Nkmr28xRpSpdJ6Sm42Hjf2+REYXm0A==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"@typescript-eslint/types\\\": \\\"6.21.0\\\",\\n+        \\\"eslint-visitor-keys\\\": \\\"^3.4.1\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\"^16.0.0 || >=18.0.0\\\"\\n+      },\\n+      \\\"funding\\\": {\\n+        \\\"type\\\": \\\"opencollective\\\",\\n+        \\\"url\\\": \\\"https://opencollective.com/typescript-eslint\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/@ungap/structured-clone\\\": {\\n+      \\\"version\\\": \\\"1.3.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@ungap/structured-clone/-/structured-clone-1.3.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-WmoN8qaIAo7WTYWbAZuG8PYEhn5fkz7dZrqTBZ7dtt//lL2Gwms1IcnQ5yHqjDfX8Ft5j4YzDM23f87zBfDe9g==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"ISC\\\"\\n+    },\\n+    \\\"node_modules/@vitest/expect\\\": {\\n+      \\\"version\\\": \\\"1.6.1\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@vitest/expect/-/expect-1.6.1.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-jXL+9+ZNIJKruofqXuuTClf44eSpcHlgj3CiuNihUF3Ioujtmc0zIa3UJOW5RjDK1YLBJZnWBlPuqhYycLioog==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"@vitest/spy\\\": \\\"1.6.1\\\",\\n+        \\\"@vitest/utils\\\": \\\"1.6.1\\\",\\n+        \\\"chai\\\": \\\"^4.3.10\\\"\\n+      },\\n+      \\\"funding\\\": {\\n+        \\\"url\\\": \\\"https://opencollective.com/vitest\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/@vitest/runner\\\": {\\n+      \\\"version\\\": \\\"1.6.1\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@vitest/runner/-/runner-1.6.1.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-3nSnYXkVkf3mXFfE7vVyPmi3Sazhb/2cfZGGs0JRzFsPFvAMBEcrweV1V1GsrstdXeKCTXlJbvnQwGWgEIHmOA==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"@vitest/utils\\\": \\\"1.6.1\\\",\\n+        \\\"p-limit\\\": \\\"^5.0.0\\\",\\n+        \\\"pathe\\\": \\\"^1.1.1\\\"\\n+      },\\n+      \\\"funding\\\": {\\n+        \\\"url\\\": \\\"https://opencollective.com/vitest\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/@vitest/runner/node_modules/p-limit\\\": {\\n+      \\\"version\\\": \\\"5.0.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/p-limit/-/p-limit-5.0.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-/Eaoq+QyLSiXQ4lyYV23f14mZRQcXnxfHrN0vCai+ak9G0pp9iEQukIIZq5NccEvwRB8PUnZT0KsOoDCINS1qQ==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"yocto-queue\\\": \\\"^1.0.0\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=18\\\"\\n+      },\\n+      \\\"funding\\\": {\\n+        \\\"url\\\": \\\"https://github.com/sponsors/sindresorhus\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/@vitest/runner/node_modules/pathe\\\": {\\n+      \\\"version\\\": \\\"1.1.2\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/pathe/-/pathe-1.1.2.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-whLdWMYL2TwI08hn8/ZqAbrVemu0LNaNNJZX73O6qaIdCTfXutsLhMkjdENX0qhsQ9uIimo4/aQOmXkoon2nDQ==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\"\\n+    },\\n+    \\\"node_modules/@vitest/runner/node_modules/yocto-queue\\\": {\\n+      \\\"version\\\": \\\"1.2.1\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/yocto-queue/-/yocto-queue-1.2.1.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-AyeEbWOu/TAXdxlV9wmGcR0+yh2j3vYPGOECcIj2S7MkrLyC7ne+oye2BKTItt0ii2PHk4cDy+95+LshzbXnGg==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=12.20\\\"\\n+      },\\n+      \\\"funding\\\": {\\n+        \\\"url\\\": \\\"https://github.com/sponsors/sindresorhus\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/@vitest/snapshot\\\": {\\n+      \\\"version\\\": \\\"1.6.1\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@vitest/snapshot/-/snapshot-1.6.1.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-WvidQuWAzU2p95u8GAKlRMqMyN1yOJkGHnx3M1PL9Raf7AQ1kwLKg04ADlCa3+OXUZE7BceOhVZiuWAbzCKcUQ==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"magic-string\\\": \\\"^0.30.5\\\",\\n+        \\\"pathe\\\": \\\"^1.1.1\\\",\\n+        \\\"pretty-format\\\": \\\"^29.7.0\\\"\\n+      },\\n+      \\\"funding\\\": {\\n+        \\\"url\\\": \\\"https://opencollective.com/vitest\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/@vitest/snapshot/node_modules/pathe\\\": {\\n+      \\\"version\\\": \\\"1.1.2\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/pathe/-/pathe-1.1.2.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-whLdWMYL2TwI08hn8/ZqAbrVemu0LNaNNJZX73O6qaIdCTfXutsLhMkjdENX0qhsQ9uIimo4/aQOmXkoon2nDQ==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\"\\n+    },\\n+    \\\"node_modules/@vitest/spy\\\": {\\n+      \\\"version\\\": \\\"1.6.1\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@vitest/spy/-/spy-1.6.1.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-MGcMmpGkZebsMZhbQKkAf9CX5zGvjkBTqf8Zx3ApYWXr3wG+QvEu2eXWfnIIWYSJExIp4V9FCKDEeygzkYrXMw==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"tinyspy\\\": \\\"^2.2.0\\\"\\n+      },\\n+      \\\"funding\\\": {\\n+        \\\"url\\\": \\\"https://opencollective.com/vitest\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/@vitest/utils\\\": {\\n+      \\\"version\\\": \\\"1.6.1\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@vitest/utils/-/utils-1.6.1.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-jOrrUvXM4Av9ZWiG1EajNto0u96kWAhJ1LmPmJhXXQx/32MecEKd10pOLYgS2BQx1TgkGhloPU1ArDW2vvaY6g==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"diff-sequences\\\": \\\"^29.6.3\\\",\\n+        \\\"estree-walker\\\": \\\"^3.0.3\\\",\\n+        \\\"loupe\\\": \\\"^2.3.7\\\",\\n+        \\\"pretty-format\\\": \\\"^29.7.0\\\"\\n+      },\\n+      \\\"funding\\\": {\\n+        \\\"url\\\": \\\"https://opencollective.com/vitest\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/acorn\\\": {\\n+      \\\"version\\\": \\\"8.15.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/acorn/-/acorn-8.15.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-NZyJarBfL7nWwIq+FDL6Zp/yHEhePMNnnJ0y3qfieCrmNvYct8uvtiV41UvlSe6apAfk0fY1FbWx+NwfmpvtTg==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"bin\\\": {\\n+        \\\"acorn\\\": \\\"bin/acorn\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=0.4.0\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/acorn-jsx\\\": {\\n+      \\\"version\\\": \\\"5.3.2\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/acorn-jsx/-/acorn-jsx-5.3.2.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-rq9s+JNhf0IChjtDXxllJ7g41oZk5SlXtp0LHwyA5cejwn7vKmKp4pPri6YEePv2PU65sAsegbXtIinmDFDXgQ==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"peerDependencies\\\": {\\n+        \\\"acorn\\\": \\\"^6.0.0 || ^7.0.0 || ^8.0.0\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/acorn-walk\\\": {\\n+      \\\"version\\\": \\\"8.3.4\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/acorn-walk/-/acorn-walk-8.3.4.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-ueEepnujpqee2o5aIYnvHU6C0A42MNdsIDeqy5BydrkuC5R1ZuUFnm27EeFJGoEHJQgn3uleRvmTXaJgfXbt4g==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"acorn\\\": \\\"^8.11.0\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=0.4.0\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/ajv\\\": {\\n+      \\\"version\\\": \\\"6.12.6\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/ajv/-/ajv-6.12.6.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-j3fVLgvTo527anyYyJOGTYJbG+vnnQYvE0m5mmkc1TK+nxAppkCLMIL0aZ4dblVCNoGShhm+kzE4ZUykBoMg4g==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"fast-deep-equal\\\": \\\"^3.1.1\\\",\\n+        \\\"fast-json-stable-stringify\\\": \\\"^2.0.0\\\",\\n+        \\\"json-schema-traverse\\\": \\\"^0.4.1\\\",\\n+        \\\"uri-js\\\": \\\"^4.2.2\\\"\\n+      },\\n+      \\\"funding\\\": {\\n+        \\\"type\\\": \\\"github\\\",\\n+        \\\"url\\\": \\\"https://github.com/sponsors/epoberezkin\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/ansi-regex\\\": {\\n+      \\\"version\\\": \\\"5.0.1\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=8\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/ansi-styles\\\": {\\n+      \\\"version\\\": \\\"4.3.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"color-convert\\\": \\\"^2.0.1\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=8\\\"\\n+      },\\n+      \\\"funding\\\": {\\n+        \\\"url\\\": \\\"https://github.com/chalk/ansi-styles?sponsor=1\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/any-promise\\\": {\\n+      \\\"version\\\": \\\"1.3.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/any-promise/-/any-promise-1.3.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-7UvmKalWRt1wgjL1RrGxoSJW/0QZFIegpeGvZG9kjp8vrRu55XTHbwnqq2GpXm9uLbcuhxm3IqX9OB4MZR1b2A==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\"\\n+    },\\n+    \\\"node_modules/argparse\\\": {\\n+      \\\"version\\\": \\\"2.0.1\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/argparse/-/argparse-2.0.1.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-8+9WqebbFzpX9OR+Wa6O29asIogeRMzcGtAINdpMHHyAg10f05aSFVBbcEqGf/PXw1EjAZ+q2/bEBg3DvurK3Q==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"Python-2.0\\\"\\n+    },\\n+    \\\"node_modules/array-union\\\": {\\n+      \\\"version\\\": \\\"2.1.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/array-union/-/array-union-2.1.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-HGyxoOTYUyCM6stUe6EJgnd4EoewAI7zMdfqO+kGjnlZmBDz/cR5pf8r/cR4Wq60sL/p0IkcjUEEPwS3GFrIyw==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=8\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/assertion-error\\\": {\\n+      \\\"version\\\": \\\"1.1.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/assertion-error/-/assertion-error-1.1.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-jgsaNduz+ndvGyFt3uSuWqvy4lCnIJiovtouQN5JZHOKCS2QuhEdbcQHFhVksz2N2U9hXJo8odG7ETyWlEeuDw==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\"*\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/balanced-match\\\": {\\n+      \\\"version\\\": \\\"1.0.2\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\"\\n+    },\\n+    \\\"node_modules/brace-expansion\\\": {\\n+      \\\"version\\\": \\\"2.0.2\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/brace-expansion/-/brace-expansion-2.0.2.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-Jt0vHyM+jmUBqojB7E1NIYadt0vI0Qxjxd2TErW94wDz+E2LAm5vKMXXwg6ZZBTHPuUlDgQHKXvjGBdfcF1ZDQ==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"balanced-match\\\": \\\"^1.0.0\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/braces\\\": {\\n+      \\\"version\\\": \\\"3.0.3\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/braces/-/braces-3.0.3.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"fill-range\\\": \\\"^7.1.1\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=8\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/bundle-require\\\": {\\n+      \\\"version\\\": \\\"5.1.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/bundle-require/-/bundle-require-5.1.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-3WrrOuZiyaaZPWiEt4G3+IffISVC9HYlWueJEBWED4ZH4aIAC2PnkdnuRrR94M+w6yGWn4AglWtJtBI8YqvgoA==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"load-tsconfig\\\": \\\"^0.2.3\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\"^12.20.0 || ^14.13.1 || >=16.0.0\\\"\\n+      },\\n+      \\\"peerDependencies\\\": {\\n+        \\\"esbuild\\\": \\\">=0.18\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/cac\\\": {\\n+      \\\"version\\\": \\\"6.7.14\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/cac/-/cac-6.7.14.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-b6Ilus+c3RrdDk+JhLKUAQfzzgLEPy6wcXqS7f/xe1EETvsDP6GORG7SFuOs6cID5YkqchW/LXZbX5bc8j7ZcQ==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=8\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/callsites\\\": {\\n+      \\\"version\\\": \\\"3.1.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/callsites/-/callsites-3.1.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=6\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/chai\\\": {\\n+      \\\"version\\\": \\\"4.5.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/chai/-/chai-4.5.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-RITGBfijLkBddZvnn8jdqoTypxvqbOLYQkGGxXzeFjVHvudaPw0HNFD9x928/eUwYWd2dPCugVqspGALTZZQKw==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"assertion-error\\\": \\\"^1.1.0\\\",\\n+        \\\"check-error\\\": \\\"^1.0.3\\\",\\n+        \\\"deep-eql\\\": \\\"^4.1.3\\\",\\n+        \\\"get-func-name\\\": \\\"^2.0.2\\\",\\n+        \\\"loupe\\\": \\\"^2.3.6\\\",\\n+        \\\"pathval\\\": \\\"^1.1.1\\\",\\n+        \\\"type-detect\\\": \\\"^4.1.0\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=4\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/chalk\\\": {\\n+      \\\"version\\\": \\\"4.1.2\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"ansi-styles\\\": \\\"^4.1.0\\\",\\n+        \\\"supports-color\\\": \\\"^7.1.0\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=10\\\"\\n+      },\\n+      \\\"funding\\\": {\\n+        \\\"url\\\": \\\"https://github.com/chalk/chalk?sponsor=1\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/check-error\\\": {\\n+      \\\"version\\\": \\\"1.0.3\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/check-error/-/check-error-1.0.3.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-iKEoDYaRmd1mxM90a2OEfWhjsjPpYPuQ+lMYsoxB126+t8fw7ySEO48nmDg5COTjxDI65/Y2OWpeEHk3ZOe8zg==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"get-func-name\\\": \\\"^2.0.2\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\"*\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/chokidar\\\": {\\n+      \\\"version\\\": \\\"4.0.3\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/chokidar/-/chokidar-4.0.3.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-Qgzu8kfBvo+cA4962jnP1KkS6Dop5NS6g7R5LFYJr4b8Ub94PPQXUksCw9PvXoeXPRRddRNC5C1JQUR2SMGtnA==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"readdirp\\\": \\\"^4.0.1\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">= 14.16.0\\\"\\n+      },\\n+      \\\"funding\\\": {\\n+        \\\"url\\\": \\\"https://paulmillr.com/funding/\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/color-convert\\\": {\\n+      \\\"version\\\": \\\"2.0.1\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"color-name\\\": \\\"~1.1.4\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=7.0.0\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/color-name\\\": {\\n+      \\\"version\\\": \\\"1.1.4\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\"\\n+    },\\n+    \\\"node_modules/commander\\\": {\\n+      \\\"version\\\": \\\"4.1.1\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/commander/-/commander-4.1.1.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-NOKm8xhkzAjzFx8B2v5OAHT+u5pRQc2UCa2Vq9jYL/31o2wi9mxBA7LIFs3sV5VSC49z6pEhfbMULvShKj26WA==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">= 6\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/concat-map\\\": {\\n+      \\\"version\\\": \\\"0.0.1\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\"\\n+    },\\n+    \\\"node_modules/confbox\\\": {\\n+      \\\"version\\\": \\\"0.1.8\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/confbox/-/confbox-0.1.8.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-RMtmw0iFkeR4YV+fUOSucriAQNb9g8zFR52MWCtl+cCZOFRNL6zeB395vPzFhEjjn4fMxXudmELnl/KF/WrK6w==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\"\\n+    },\\n+    \\\"node_modules/consola\\\": {\\n+      \\\"version\\\": \\\"3.4.2\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/consola/-/consola-3.4.2.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-5IKcdX0nnYavi6G7TtOhwkYzyjfJlatbjMjuLSfE2kYT5pMDOilZ4OvMhi637CcDICTmz3wARPoyhqyX1Y+XvA==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\"^14.18.0 || >=16.10.0\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/cross-spawn\\\": {\\n+      \\\"version\\\": \\\"7.0.6\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.6.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-uV2QOWP2nWzsy2aMp8aRibhi9dlzF5Hgh5SHaB9OiTGEyDTiJJyx0uy51QXdyWbtAHNua4XJzUKca3OzKUd3vA==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"path-key\\\": \\\"^3.1.0\\\",\\n+        \\\"shebang-command\\\": \\\"^2.0.0\\\",\\n+        \\\"which\\\": \\\"^2.0.1\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">= 8\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/debug\\\": {\\n+      \\\"version\\\": \\\"4.4.1\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/debug/-/debug-4.4.1.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-KcKCqiftBJcZr++7ykoDIEwSa3XWowTfNPo92BYxjXiyYEVrUQh2aLyhxBCwww+heortUFxEJYcRzosstTEBYQ==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"ms\\\": \\\"^2.1.3\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=6.0\\\"\\n+      },\\n+      \\\"peerDependenciesMeta\\\": {\\n+        \\\"supports-color\\\": {\\n+          \\\"optional\\\": true\\n+        }\\n+      }\\n+    },\\n+    \\\"node_modules/deep-eql\\\": {\\n+      \\\"version\\\": \\\"4.1.4\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/deep-eql/-/deep-eql-4.1.4.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-SUwdGfqdKOwxCPeVYjwSyRpJ7Z+fhpwIAtmCUdZIWZ/YP5R9WAsyuSgpLVDi9bjWoN2LXHNss/dk3urXtdQxGg==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"type-detect\\\": \\\"^4.0.0\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=6\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/deep-is\\\": {\\n+      \\\"version\\\": \\\"0.1.4\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/deep-is/-/deep-is-0.1.4.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-oIPzksmTg4/MriiaYGO+okXDT7ztn/w3Eptv/+gSIdMdKsJo0u4CfYNFJPy+4SKMuCqGw2wxnA+URMg3t8a/bQ==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\"\\n+    },\\n+    \\\"node_modules/diff-sequences\\\": {\\n+      \\\"version\\\": \\\"29.6.3\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/diff-sequences/-/diff-sequences-29.6.3.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-EjePK1srD3P08o2j4f0ExnylqRs5B9tJjcp9t1krH2qRi8CCdsYfwe9JgSLurFBWwq4uOlipzfk5fHNvwFKr8Q==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\"^14.15.0 || ^16.10.0 || >=18.0.0\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/dir-glob\\\": {\\n+      \\\"version\\\": \\\"3.0.1\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/dir-glob/-/dir-glob-3.0.1.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-WkrWp9GR4KXfKGYzOLmTuGVi1UWFfws377n9cc55/tb6DuqyF6pcQ5AbiHEshaDpY9v6oaSr2XCDidGmMwdzIA==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"path-type\\\": \\\"^4.0.0\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=8\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/doctrine\\\": {\\n+      \\\"version\\\": \\\"3.0.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/doctrine/-/doctrine-3.0.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-yS+Q5i3hBf7GBkd4KG8a7eBNNWNGLTaEwwYWUijIYM7zrlYDM0BFXHjjPWlWZ1Rg7UaddZeIDmi9jF3HmqiQ2w==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"Apache-2.0\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"esutils\\\": \\\"^2.0.2\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=6.0.0\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/eastasianwidth\\\": {\\n+      \\\"version\\\": \\\"0.2.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/eastasianwidth/-/eastasianwidth-0.2.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-I88TYZWc9XiYHRQ4/3c5rjjfgkjhLyW2luGIheGERbNQ6OY7yTybanSpDXZa8y7VUP9YmDcYa+eyq4ca7iLqWA==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\"\\n+    },\\n+    \\\"node_modules/emoji-regex\\\": {\\n+      \\\"version\\\": \\\"9.2.2\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/emoji-regex/-/emoji-regex-9.2.2.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-L18DaJsXSUk2+42pv8mLs5jJT2hqFkFE4j21wOmgbUqsZ2hL72NsUU785g9RXgo3s0ZNgVl42TiHp3ZtOv/Vyg==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\"\\n+    },\\n+    \\\"node_modules/esbuild\\\": {\\n+      \\\"version\\\": \\\"0.25.8\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/esbuild/-/esbuild-0.25.8.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-vVC0USHGtMi8+R4Kz8rt6JhEWLxsv9Rnu/lGYbPR8u47B+DCBksq9JarW0zOO7bs37hyOK1l2/oqtbciutL5+Q==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"hasInstallScript\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"bin\\\": {\\n+        \\\"esbuild\\\": \\\"bin/esbuild\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=18\\\"\\n+      },\\n+      \\\"optionalDependencies\\\": {\\n+        \\\"@esbuild/aix-ppc64\\\": \\\"0.25.8\\\",\\n+        \\\"@esbuild/android-arm\\\": \\\"0.25.8\\\",\\n+        \\\"@esbuild/android-arm64\\\": \\\"0.25.8\\\",\\n+        \\\"@esbuild/android-x64\\\": \\\"0.25.8\\\",\\n+        \\\"@esbuild/darwin-arm64\\\": \\\"0.25.8\\\",\\n+        \\\"@esbuild/darwin-x64\\\": \\\"0.25.8\\\",\\n+        \\\"@esbuild/freebsd-arm64\\\": \\\"0.25.8\\\",\\n+        \\\"@esbuild/freebsd-x64\\\": \\\"0.25.8\\\",\\n+        \\\"@esbuild/linux-arm\\\": \\\"0.25.8\\\",\\n+        \\\"@esbuild/linux-arm64\\\": \\\"0.25.8\\\",\\n+        \\\"@esbuild/linux-ia32\\\": \\\"0.25.8\\\",\\n+        \\\"@esbuild/linux-loong64\\\": \\\"0.25.8\\\",\\n+        \\\"@esbuild/linux-mips64el\\\": \\\"0.25.8\\\",\\n+        \\\"@esbuild/linux-ppc64\\\": \\\"0.25.8\\\",\\n+        \\\"@esbuild/linux-riscv64\\\": \\\"0.25.8\\\",\\n+        \\\"@esbuild/linux-s390x\\\": \\\"0.25.8\\\",\\n+        \\\"@esbuild/linux-x64\\\": \\\"0.25.8\\\",\\n+        \\\"@esbuild/netbsd-arm64\\\": \\\"0.25.8\\\",\\n+        \\\"@esbuild/netbsd-x64\\\": \\\"0.25.8\\\",\\n+        \\\"@esbuild/openbsd-arm64\\\": \\\"0.25.8\\\",\\n+        \\\"@esbuild/openbsd-x64\\\": \\\"0.25.8\\\",\\n+        \\\"@esbuild/openharmony-arm64\\\": \\\"0.25.8\\\",\\n+        \\\"@esbuild/sunos-x64\\\": \\\"0.25.8\\\",\\n+        \\\"@esbuild/win32-arm64\\\": \\\"0.25.8\\\",\\n+        \\\"@esbuild/win32-ia32\\\": \\\"0.25.8\\\",\\n+        \\\"@esbuild/win32-x64\\\": \\\"0.25.8\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/escape-string-regexp\\\": {\\n+      \\\"version\\\": \\\"4.0.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-4.0.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=10\\\"\\n+      },\\n+      \\\"funding\\\": {\\n+        \\\"url\\\": \\\"https://github.com/sponsors/sindresorhus\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/eslint\\\": {\\n+      \\\"version\\\": \\\"8.57.1\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/eslint/-/eslint-8.57.1.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-ypowyDxpVSYpkXr9WPv2PAZCtNip1Mv5KTW0SCurXv/9iOpcrH9PaqUElksqEB6pChqHGDRCFTyrZlGhnLNGiA==\\\",\\n+      \\\"deprecated\\\": \\\"This version is no longer supported. Please see https://eslint.org/version-support for other options.\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"@eslint-community/eslint-utils\\\": \\\"^4.2.0\\\",\\n+        \\\"@eslint-community/regexpp\\\": \\\"^4.6.1\\\",\\n+        \\\"@eslint/eslintrc\\\": \\\"^2.1.4\\\",\\n+        \\\"@eslint/js\\\": \\\"8.57.1\\\",\\n+        \\\"@humanwhocodes/config-array\\\": \\\"^0.13.0\\\",\\n+        \\\"@humanwhocodes/module-importer\\\": \\\"^1.0.1\\\",\\n+        \\\"@nodelib/fs.walk\\\": \\\"^1.2.8\\\",\\n+        \\\"@ungap/structured-clone\\\": \\\"^1.2.0\\\",\\n+        \\\"ajv\\\": \\\"^6.12.4\\\",\\n+        \\\"chalk\\\": \\\"^4.0.0\\\",\\n+        \\\"cross-spawn\\\": \\\"^7.0.2\\\",\\n+        \\\"debug\\\": \\\"^4.3.2\\\",\\n+        \\\"doctrine\\\": \\\"^3.0.0\\\",\\n+        \\\"escape-string-regexp\\\": \\\"^4.0.0\\\",\\n+        \\\"eslint-scope\\\": \\\"^7.2.2\\\",\\n+        \\\"eslint-visitor-keys\\\": \\\"^3.4.3\\\",\\n+        \\\"espree\\\": \\\"^9.6.1\\\",\\n+        \\\"esquery\\\": \\\"^1.4.2\\\",\\n+        \\\"esutils\\\": \\\"^2.0.2\\\",\\n+        \\\"fast-deep-equal\\\": \\\"^3.1.3\\\",\\n+        \\\"file-entry-cache\\\": \\\"^6.0.1\\\",\\n+        \\\"find-up\\\": \\\"^5.0.0\\\",\\n+        \\\"glob-parent\\\": \\\"^6.0.2\\\",\\n+        \\\"globals\\\": \\\"^13.19.0\\\",\\n+        \\\"graphemer\\\": \\\"^1.4.0\\\",\\n+        \\\"ignore\\\": \\\"^5.2.0\\\",\\n+        \\\"imurmurhash\\\": \\\"^0.1.4\\\",\\n+        \\\"is-glob\\\": \\\"^4.0.0\\\",\\n+        \\\"is-path-inside\\\": \\\"^3.0.3\\\",\\n+        \\\"js-yaml\\\": \\\"^4.1.0\\\",\\n+        \\\"json-stable-stringify-without-jsonify\\\": \\\"^1.0.1\\\",\\n+        \\\"levn\\\": \\\"^0.4.1\\\",\\n+        \\\"lodash.merge\\\": \\\"^4.6.2\\\",\\n+        \\\"minimatch\\\": \\\"^3.1.2\\\",\\n+        \\\"natural-compare\\\": \\\"^1.4.0\\\",\\n+        \\\"optionator\\\": \\\"^0.9.3\\\",\\n+        \\\"strip-ansi\\\": \\\"^6.0.1\\\",\\n+        \\\"text-table\\\": \\\"^0.2.0\\\"\\n+      },\\n+      \\\"bin\\\": {\\n+        \\\"eslint\\\": \\\"bin/eslint.js\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\"^12.22.0 || ^14.17.0 || >=16.0.0\\\"\\n+      },\\n+      \\\"funding\\\": {\\n+        \\\"url\\\": \\\"https://opencollective.com/eslint\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/eslint-scope\\\": {\\n+      \\\"version\\\": \\\"7.2.2\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/eslint-scope/-/eslint-scope-7.2.2.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-dOt21O7lTMhDM+X9mB4GX+DZrZtCUJPL/wlcTqxyrx5IvO0IYtILdtrQGQp+8n5S0gwSVmOf9NQrjMOgfQZlIg==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"BSD-2-Clause\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"esrecurse\\\": \\\"^4.3.0\\\",\\n+        \\\"estraverse\\\": \\\"^5.2.0\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\"^12.22.0 || ^14.17.0 || >=16.0.0\\\"\\n+      },\\n+      \\\"funding\\\": {\\n+        \\\"url\\\": \\\"https://opencollective.com/eslint\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/eslint-visitor-keys\\\": {\\n+      \\\"version\\\": \\\"3.4.3\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-3.4.3.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-wpc+LXeiyiisxPlEkUzU6svyS1frIO3Mgxj1fdy7Pm8Ygzguax2N3Fa/D/ag1WqbOprdI+uY6wMUl8/a2G+iag==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"Apache-2.0\\\",\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\"^12.22.0 || ^14.17.0 || >=16.0.0\\\"\\n+      },\\n+      \\\"funding\\\": {\\n+        \\\"url\\\": \\\"https://opencollective.com/eslint\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/eslint/node_modules/brace-expansion\\\": {\\n+      \\\"version\\\": \\\"1.1.12\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.12.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"balanced-match\\\": \\\"^1.0.0\\\",\\n+        \\\"concat-map\\\": \\\"0.0.1\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/eslint/node_modules/minimatch\\\": {\\n+      \\\"version\\\": \\\"3.1.2\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"ISC\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"brace-expansion\\\": \\\"^1.1.7\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\"*\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/espree\\\": {\\n+      \\\"version\\\": \\\"9.6.1\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/espree/-/espree-9.6.1.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-oruZaFkjorTpF32kDSI5/75ViwGeZginGGy2NoOSg3Q9bnwlnmDm4HLnkl0RE3n+njDXR037aY1+x58Z/zFdwQ==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"BSD-2-Clause\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"acorn\\\": \\\"^8.9.0\\\",\\n+        \\\"acorn-jsx\\\": \\\"^5.3.2\\\",\\n+        \\\"eslint-visitor-keys\\\": \\\"^3.4.1\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\"^12.22.0 || ^14.17.0 || >=16.0.0\\\"\\n+      },\\n+      \\\"funding\\\": {\\n+        \\\"url\\\": \\\"https://opencollective.com/eslint\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/esquery\\\": {\\n+      \\\"version\\\": \\\"1.6.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/esquery/-/esquery-1.6.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-ca9pw9fomFcKPvFLXhBKUK90ZvGibiGOvRJNbjljY7s7uq/5YO4BOzcYtJqExdx99rF6aAcnRxHmcUHcz6sQsg==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"BSD-3-Clause\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"estraverse\\\": \\\"^5.1.0\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=0.10\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/esrecurse\\\": {\\n+      \\\"version\\\": \\\"4.3.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/esrecurse/-/esrecurse-4.3.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-KmfKL3b6G+RXvP8N1vr3Tq1kL/oCFgn2NYXEtqP8/L3pKapUA4G8cFVaoF3SU323CD4XypR/ffioHmkti6/Tag==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"BSD-2-Clause\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"estraverse\\\": \\\"^5.2.0\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=4.0\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/estraverse\\\": {\\n+      \\\"version\\\": \\\"5.3.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/estraverse/-/estraverse-5.3.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-MMdARuVEQziNTeJD8DgMqmhwR11BRQ/cBP+pLtYdSTnf3MIO8fFeiINEbX36ZdNlfU/7A9f3gUw49B3oQsvwBA==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"BSD-2-Clause\\\",\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=4.0\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/estree-walker\\\": {\\n+      \\\"version\\\": \\\"3.0.3\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/estree-walker/-/estree-walker-3.0.3.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-7RUKfXgSMMkzt6ZuXmqapOurLGPPfgj6l9uRZ7lRGolvk0y2yocc35LdcxKC5PQZdn2DMqioAQ2NoWcrTKmm6g==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"@types/estree\\\": \\\"^1.0.0\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/esutils\\\": {\\n+      \\\"version\\\": \\\"2.0.3\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/esutils/-/esutils-2.0.3.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-kVscqXk4OCp68SZ0dkgEKVi6/8ij300KBWTJq32P/dYeWTSwK41WyTxalN1eRmA5Z9UU/LX9D7FWSmV9SAYx6g==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"BSD-2-Clause\\\",\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=0.10.0\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/eventemitter3\\\": {\\n+      \\\"version\\\": \\\"5.0.1\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/eventemitter3/-/eventemitter3-5.0.1.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-GWkBvjiSZK87ELrYOSESUYeVIc9mvLLf/nXalMOS5dYrgZq9o5OVkbZAVM06CVxYsCwH9BDZFPlQTlPA1j4ahA==\\\",\\n+      \\\"license\\\": \\\"MIT\\\"\\n+    },\\n+    \\\"node_modules/execa\\\": {\\n+      \\\"version\\\": \\\"8.0.1\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/execa/-/execa-8.0.1.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-VyhnebXciFV2DESc+p6B+y0LjSm0krU4OgJN44qFAhBY0TJ+1V61tYD2+wHusZ6F9n5K+vl8k0sTy7PEfV4qpg==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"cross-spawn\\\": \\\"^7.0.3\\\",\\n+        \\\"get-stream\\\": \\\"^8.0.1\\\",\\n+        \\\"human-signals\\\": \\\"^5.0.0\\\",\\n+        \\\"is-stream\\\": \\\"^3.0.0\\\",\\n+        \\\"merge-stream\\\": \\\"^2.0.0\\\",\\n+        \\\"npm-run-path\\\": \\\"^5.1.0\\\",\\n+        \\\"onetime\\\": \\\"^6.0.0\\\",\\n+        \\\"signal-exit\\\": \\\"^4.1.0\\\",\\n+        \\\"strip-final-newline\\\": \\\"^3.0.0\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=16.17\\\"\\n+      },\\n+      \\\"funding\\\": {\\n+        \\\"url\\\": \\\"https://github.com/sindresorhus/execa?sponsor=1\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/fast-deep-equal\\\": {\\n+      \\\"version\\\": \\\"3.1.3\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-3.1.3.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-f3qQ9oQy9j2AhBe/H9VC91wLmKBCCU/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\"\\n+    },\\n+    \\\"node_modules/fast-glob\\\": {\\n+      \\\"version\\\": \\\"3.3.3\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/fast-glob/-/fast-glob-3.3.3.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-7MptL8U0cqcFdzIzwOTHoilX9x5BrNqye7Z/LuC7kCMRio1EMSyqRK3BEAUD7sXRq4iT4AzTVuZdhgQ2TCvYLg==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"@nodelib/fs.stat\\\": \\\"^2.0.2\\\",\\n+        \\\"@nodelib/fs.walk\\\": \\\"^1.2.3\\\",\\n+        \\\"glob-parent\\\": \\\"^5.1.2\\\",\\n+        \\\"merge2\\\": \\\"^1.3.0\\\",\\n+        \\\"micromatch\\\": \\\"^4.0.8\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=8.6.0\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/fast-glob/node_modules/glob-parent\\\": {\\n+      \\\"version\\\": \\\"5.1.2\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"ISC\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"is-glob\\\": \\\"^4.0.1\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">= 6\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/fast-json-stable-stringify\\\": {\\n+      \\\"version\\\": \\\"2.1.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/fast-json-stable-stringify/-/fast-json-stable-stringify-2.1.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\"\\n+    },\\n+    \\\"node_modules/fast-levenshtein\\\": {\\n+      \\\"version\\\": \\\"2.0.6\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/fast-levenshtein/-/fast-levenshtein-2.0.6.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-DCXu6Ifhqcks7TZKY3Hxp3y6qphY5SJZmrWMDrKcERSOXWQdMhU9Ig/PYrzyw/ul9jOIyh0N4M0tbC5hodg8dw==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\"\\n+    },\\n+    \\\"node_modules/fastq\\\": {\\n+      \\\"version\\\": \\\"1.19.1\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/fastq/-/fastq-1.19.1.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-GwLTyxkCXjXbxqIhTsMI2Nui8huMPtnxg7krajPJAjnEG/iiOS7i+zCtWGZR9G0NBKbXKh6X9m9UIsYX/N6vvQ==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"ISC\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"reusify\\\": \\\"^1.0.4\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/file-entry-cache\\\": {\\n+      \\\"version\\\": \\\"6.0.1\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/file-entry-cache/-/file-entry-cache-6.0.1.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-7Gps/XWymbLk2QLYK4NzpMOrYjMhdIxXuIvy2QBsLE6ljuodKvdkWs/cpyJJ3CVIVpH0Oi1Hvg1ovbMzLdFBBg==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"flat-cache\\\": \\\"^3.0.4\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\"^10.12.0 || >=12.0.0\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/fill-range\\\": {\\n+      \\\"version\\\": \\\"7.1.1\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/fill-range/-/fill-range-7.1.1.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-YsGpe3WHLK8ZYi4tWDg2Jy3ebRz2rXowDxnld4bkQB00cc/1Zw9AWnC0i9ztDJitivtQvaI9KaLyKrc+hBW0yg==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"to-regex-range\\\": \\\"^5.0.1\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=8\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/find-up\\\": {\\n+      \\\"version\\\": \\\"5.0.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/find-up/-/find-up-5.0.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-78/PXT1wlLLDgTzDs7sjq9hzz0vXD+zn+7wypEe4fXQxCmdmqfGsEPQxmiCSQI3ajFV91bVSsvNtrJRiW6nGng==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"locate-path\\\": \\\"^6.0.0\\\",\\n+        \\\"path-exists\\\": \\\"^4.0.0\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=10\\\"\\n+      },\\n+      \\\"funding\\\": {\\n+        \\\"url\\\": \\\"https://github.com/sponsors/sindresorhus\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/fix-dts-default-cjs-exports\\\": {\\n+      \\\"version\\\": \\\"1.0.1\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/fix-dts-default-cjs-exports/-/fix-dts-default-cjs-exports-1.0.1.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-pVIECanWFC61Hzl2+oOCtoJ3F17kglZC/6N94eRWycFgBH35hHx0Li604ZIzhseh97mf2p0cv7vVrOZGoqhlEg==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"magic-string\\\": \\\"^0.30.17\\\",\\n+        \\\"mlly\\\": \\\"^1.7.4\\\",\\n+        \\\"rollup\\\": \\\"^4.34.8\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/flat-cache\\\": {\\n+      \\\"version\\\": \\\"3.2.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/flat-cache/-/flat-cache-3.2.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-CYcENa+FtcUKLmhhqyctpclsq7QF38pKjZHsGNiSQF5r4FtoKDWabFDl3hzaEQMvT1LHEysw5twgLvpYYb4vbw==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"flatted\\\": \\\"^3.2.9\\\",\\n+        \\\"keyv\\\": \\\"^4.5.3\\\",\\n+        \\\"rimraf\\\": \\\"^3.0.2\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\"^10.12.0 || >=12.0.0\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/flatted\\\": {\\n+      \\\"version\\\": \\\"3.3.3\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/flatted/-/flatted-3.3.3.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-GX+ysw4PBCz0PzosHDepZGANEuFCMLrnRTiEy9McGjmkCQYwRq4A/X786G/fjM/+OjsWSU1ZrY5qyARZmO/uwg==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"ISC\\\"\\n+    },\\n+    \\\"node_modules/foreground-child\\\": {\\n+      \\\"version\\\": \\\"3.3.1\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/foreground-child/-/foreground-child-3.3.1.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-gIXjKqtFuWEgzFRJA9WCQeSJLZDjgJUOMCMzxtvFq/37KojM1BFGufqsCy0r4qSQmYLsZYMeyRqzIWOMup03sw==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"ISC\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"cross-spawn\\\": \\\"^7.0.6\\\",\\n+        \\\"signal-exit\\\": \\\"^4.0.1\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=14\\\"\\n+      },\\n+      \\\"funding\\\": {\\n+        \\\"url\\\": \\\"https://github.com/sponsors/isaacs\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/fs.realpath\\\": {\\n+      \\\"version\\\": \\\"1.0.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-OO0pH2lK6a0hZnAdau5ItzHPI6pUlvI7jMVnxUQRtw4owF2wk8lOSabtGDCTP4Ggrg2MbGnWO9X8K1t4+fGMDw==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"ISC\\\"\\n+    },\\n+    \\\"node_modules/fsevents\\\": {\\n+      \\\"version\\\": \\\"2.3.3\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/fsevents/-/fsevents-2.3.3.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"hasInstallScript\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"optional\\\": true,\\n+      \\\"os\\\": [\\n+        \\\"darwin\\\"\\n+      ],\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\"^8.16.0 || ^10.6.0 || >=11.0.0\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/get-func-name\\\": {\\n+      \\\"version\\\": \\\"2.0.2\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/get-func-name/-/get-func-name-2.0.2.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-8vXOvuE167CtIc3OyItco7N/dpRtBbYOsPsXCz7X/PMnlGjYjSGuZJgM1Y7mmew7BKf9BqvLX2tnOVy1BBUsxQ==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\"*\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/get-stream\\\": {\\n+      \\\"version\\\": \\\"8.0.1\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/get-stream/-/get-stream-8.0.1.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-VaUJspBffn/LMCJVoMvSAdmscJyS1auj5Zulnn5UoYcY531UWmdwhRWkcGKnGU93m5HSXP9LP2usOryrBtQowA==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=16\\\"\\n+      },\\n+      \\\"funding\\\": {\\n+        \\\"url\\\": \\\"https://github.com/sponsors/sindresorhus\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/glob\\\": {\\n+      \\\"version\\\": \\\"7.2.3\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/glob/-/glob-7.2.3.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-nFR0zLpU2YCaRxwoCJvL6UvCH2JFyFVIvwTLsIf21AuHlMskA1hhTdk+LlYJtOlYt9v6dvszD2BGRqBL+iQK9Q==\\\",\\n+      \\\"deprecated\\\": \\\"Glob versions prior to v9 are no longer supported\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"ISC\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"fs.realpath\\\": \\\"^1.0.0\\\",\\n+        \\\"inflight\\\": \\\"^1.0.4\\\",\\n+        \\\"inherits\\\": \\\"2\\\",\\n+        \\\"minimatch\\\": \\\"^3.1.1\\\",\\n+        \\\"once\\\": \\\"^1.3.0\\\",\\n+        \\\"path-is-absolute\\\": \\\"^1.0.0\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\"*\\\"\\n+      },\\n+      \\\"funding\\\": {\\n+        \\\"url\\\": \\\"https://github.com/sponsors/isaacs\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/glob-parent\\\": {\\n+      \\\"version\\\": \\\"6.0.2\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/glob-parent/-/glob-parent-6.0.2.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-XxwI8EOhVQgWp6iDL+3b0r86f4d6AX6zSU55HfB4ydCEuXLXc5FcYeOu+nnGftS4TEju/11rt4KJPTMgbfmv4A==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"ISC\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"is-glob\\\": \\\"^4.0.3\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=10.13.0\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/glob/node_modules/brace-expansion\\\": {\\n+      \\\"version\\\": \\\"1.1.12\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.12.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"balanced-match\\\": \\\"^1.0.0\\\",\\n+        \\\"concat-map\\\": \\\"0.0.1\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/glob/node_modules/minimatch\\\": {\\n+      \\\"version\\\": \\\"3.1.2\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"ISC\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"brace-expansion\\\": \\\"^1.1.7\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\"*\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/globals\\\": {\\n+      \\\"version\\\": \\\"13.24.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/globals/-/globals-13.24.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-AhO5QUcj8llrbG09iWhPU2B204J1xnPeL8kQmVorSsy+Sjj1sk8gIyh6cUocGmH4L0UuhAJy+hJMRA4mgA4mFQ==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"type-fest\\\": \\\"^0.20.2\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=8\\\"\\n+      },\\n+      \\\"funding\\\": {\\n+        \\\"url\\\": \\\"https://github.com/sponsors/sindresorhus\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/globby\\\": {\\n+      \\\"version\\\": \\\"11.1.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/globby/-/globby-11.1.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-jhIXaOzy1sb8IyocaruWSn1TjmnBVs8Ayhcy83rmxNJ8q2uWKCAj3CnJY+KpGSXCueAPc0i05kVvVKtP1t9S3g==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"array-union\\\": \\\"^2.1.0\\\",\\n+        \\\"dir-glob\\\": \\\"^3.0.1\\\",\\n+        \\\"fast-glob\\\": \\\"^3.2.9\\\",\\n+        \\\"ignore\\\": \\\"^5.2.0\\\",\\n+        \\\"merge2\\\": \\\"^1.4.1\\\",\\n+        \\\"slash\\\": \\\"^3.0.0\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=10\\\"\\n+      },\\n+      \\\"funding\\\": {\\n+        \\\"url\\\": \\\"https://github.com/sponsors/sindresorhus\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/graphemer\\\": {\\n+      \\\"version\\\": \\\"1.4.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/graphemer/-/graphemer-1.4.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-EtKwoO6kxCL9WO5xipiHTZlSzBm7WLT627TqC/uVRd0HKmq8NXyebnNYxDoBi7wt8eTWrUrKXCOVaFq9x1kgag==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\"\\n+    },\\n+    \\\"node_modules/has-flag\\\": {\\n+      \\\"version\\\": \\\"4.0.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=8\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/human-signals\\\": {\\n+      \\\"version\\\": \\\"5.0.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/human-signals/-/human-signals-5.0.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-AXcZb6vzzrFAUE61HnN4mpLqd/cSIwNQjtNWR0euPm6y0iqx3G4gOXaIDdtdDwZmhwe82LA6+zinmW4UBWVePQ==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"Apache-2.0\\\",\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=16.17.0\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/ignore\\\": {\\n+      \\\"version\\\": \\\"5.3.2\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/ignore/-/ignore-5.3.2.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-hsBTNUqQTDwkWtcdYI2i06Y/nUBEsNEDJKjWdigLvegy8kDuJAS8uRlpkkcQpyEXL0Z/pjDy5HBmMjRCJ2gq+g==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">= 4\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/immer\\\": {\\n+      \\\"version\\\": \\\"10.1.1\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/immer/-/immer-10.1.1.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-s2MPrmjovJcoMaHtx6K11Ra7oD05NT97w1IC5zpMkT6Atjr7H8LjaDd81iIxUYpMKSRRNMJE703M1Fhr/TctHw==\\\",\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"funding\\\": {\\n+        \\\"type\\\": \\\"opencollective\\\",\\n+        \\\"url\\\": \\\"https://opencollective.com/immer\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/import-fresh\\\": {\\n+      \\\"version\\\": \\\"3.3.1\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/import-fresh/-/import-fresh-3.3.1.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-TR3KfrTZTYLPB6jUjfx6MF9WcWrHL9su5TObK4ZkYgBdWKPOFoSoQIdEuTuR82pmtxH2spWG9h6etwfr1pLBqQ==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"parent-module\\\": \\\"^1.0.0\\\",\\n+        \\\"resolve-from\\\": \\\"^4.0.0\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=6\\\"\\n+      },\\n+      \\\"funding\\\": {\\n+        \\\"url\\\": \\\"https://github.com/sponsors/sindresorhus\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/imurmurhash\\\": {\\n+      \\\"version\\\": \\\"0.1.4\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/imurmurhash/-/imurmurhash-0.1.4.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-JmXMZ6wuvDmLiHEml9ykzqO6lwFbof0GG4IkcGaENdCRDDmMVnny7s5HsIgHCbaq0w2MyPhDqkhTUgS2LU2PHA==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=0.8.19\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/inflight\\\": {\\n+      \\\"version\\\": \\\"1.0.6\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-k92I/b08q4wvFscXCLvqfsHCrjrF7yiXsQuIVvVE7N82W3+aqpzuUdBbfhWcy/FZR3/4IgflMgKLOsvPDrGCJA==\\\",\\n+      \\\"deprecated\\\": \\\"This module is not supported, and leaks memory. Do not use it. Check out lru-cache if you want a good and tested way to coalesce async requests by a key value, which is much more comprehensive and powerful.\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"ISC\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"once\\\": \\\"^1.3.0\\\",\\n+        \\\"wrappy\\\": \\\"1\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/inherits\\\": {\\n+      \\\"version\\\": \\\"2.0.4\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"ISC\\\"\\n+    },\\n+    \\\"node_modules/is-extglob\\\": {\\n+      \\\"version\\\": \\\"2.1.1\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=0.10.0\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/is-fullwidth-code-point\\\": {\\n+      \\\"version\\\": \\\"3.0.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=8\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/is-glob\\\": {\\n+      \\\"version\\\": \\\"4.0.3\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/is-glob/-/is-glob-4.0.3.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"is-extglob\\\": \\\"^2.1.1\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=0.10.0\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/is-number\\\": {\\n+      \\\"version\\\": \\\"7.0.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=0.12.0\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/is-path-inside\\\": {\\n+      \\\"version\\\": \\\"3.0.3\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/is-path-inside/-/is-path-inside-3.0.3.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-Fd4gABb+ycGAmKou8eMftCupSir5lRxqf4aD/vd0cD2qc4HL07OjCeuHMr8Ro4CoMaeCKDB0/ECBOVWjTwUvPQ==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=8\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/is-stream\\\": {\\n+      \\\"version\\\": \\\"3.0.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/is-stream/-/is-stream-3.0.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-LnQR4bZ9IADDRSkvpqMGvt/tEJWclzklNgSw48V5EAaAeDd6qGvN8ei6k5p0tvxSR171VmGyHuTiAOfxAbr8kA==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\"^12.20.0 || ^14.13.1 || >=16.0.0\\\"\\n+      },\\n+      \\\"funding\\\": {\\n+        \\\"url\\\": \\\"https://github.com/sponsors/sindresorhus\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/isexe\\\": {\\n+      \\\"version\\\": \\\"2.0.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"ISC\\\"\\n+    },\\n+    \\\"node_modules/jackspeak\\\": {\\n+      \\\"version\\\": \\\"3.4.3\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/jackspeak/-/jackspeak-3.4.3.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-OGlZQpz2yfahA/Rd1Y8Cd9SIEsqvXkLVoSw/cgwhnhFMDbsQFeZYoJJ7bIZBS9BcamUW96asq/npPWugM+RQBw==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"BlueOak-1.0.0\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"@isaacs/cliui\\\": \\\"^8.0.2\\\"\\n+      },\\n+      \\\"funding\\\": {\\n+        \\\"url\\\": \\\"https://github.com/sponsors/isaacs\\\"\\n+      },\\n+      \\\"optionalDependencies\\\": {\\n+        \\\"@pkgjs/parseargs\\\": \\\"^0.11.0\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/joycon\\\": {\\n+      \\\"version\\\": \\\"3.1.1\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/joycon/-/joycon-3.1.1.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-34wB/Y7MW7bzjKRjUKTa46I2Z7eV62Rkhva+KkopW7Qvv/OSWBqvkSY7vusOPrNuZcUG3tApvdVgNB8POj3SPw==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=10\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/js-tokens\\\": {\\n+      \\\"version\\\": \\\"9.0.1\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/js-tokens/-/js-tokens-9.0.1.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-mxa9E9ITFOt0ban3j6L5MpjwegGz6lBQmM1IJkWeBZGcMxto50+eWdjC/52xDbS2vy0k7vIMK0Fe2wfL9OQSpQ==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\"\\n+    },\\n+    \\\"node_modules/js-yaml\\\": {\\n+      \\\"version\\\": \\\"4.1.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/js-yaml/-/js-yaml-4.1.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-wpxZs9NoxZaJESJGIZTyDEaYpl0FKSA+FB9aJiyemKhMwkxQg63h4T1KJgUGHpTqPDNRcmmYLugrRjJlBtWvRA==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"argparse\\\": \\\"^2.0.1\\\"\\n+      },\\n+      \\\"bin\\\": {\\n+        \\\"js-yaml\\\": \\\"bin/js-yaml.js\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/json-buffer\\\": {\\n+      \\\"version\\\": \\\"3.0.1\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/json-buffer/-/json-buffer-3.0.1.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-4bV5BfR2mqfQTJm+V5tPPdf+ZpuhiIvTuAB5g8kcrXOZpTT/QwwVRWBywX1ozr6lEuPdbHxwaJlm9G6mI2sfSQ==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\"\\n+    },\\n+    \\\"node_modules/json-schema-traverse\\\": {\\n+      \\\"version\\\": \\\"0.4.1\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-0.4.1.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\"\\n+    },\\n+    \\\"node_modules/json-stable-stringify-without-jsonify\\\": {\\n+      \\\"version\\\": \\\"1.0.1\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/json-stable-stringify-without-jsonify/-/json-stable-stringify-without-jsonify-1.0.1.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-Bdboy+l7tA3OGW6FjyFHWkP5LuByj1Tk33Ljyq0axyzdk9//JSi2u3fP1QSmd1KNwq6VOKYGlAu87CisVir6Pw==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\"\\n+    },\\n+    \\\"node_modules/keyv\\\": {\\n+      \\\"version\\\": \\\"4.5.4\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/keyv/-/keyv-4.5.4.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-oxVHkHR/EJf2CNXnWxRLW6mg7JyCCUcG0DtEGmL2ctUo1PNTin1PUil+r/+4r5MpVgC/fn1kjsx7mjSujKqIpw==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"json-buffer\\\": \\\"3.0.1\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/levn\\\": {\\n+      \\\"version\\\": \\\"0.4.1\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/levn/-/levn-0.4.1.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-+bT2uH4E5LGE7h/n3evcS/sQlJXCpIp6ym8OWJ5eV6+67Dsql/LaaT7qJBAt2rzfoa/5QBGBhxDix1dMt2kQKQ==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"prelude-ls\\\": \\\"^1.2.1\\\",\\n+        \\\"type-check\\\": \\\"~0.4.0\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">= 0.8.0\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/lilconfig\\\": {\\n+      \\\"version\\\": \\\"3.1.3\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/lilconfig/-/lilconfig-3.1.3.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-/vlFKAoH5Cgt3Ie+JLhRbwOsCQePABiU3tJ1egGvyQ+33R/vcwM2Zl2QR/LzjsBeItPt3oSVXapn+m4nQDvpzw==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=14\\\"\\n+      },\\n+      \\\"funding\\\": {\\n+        \\\"url\\\": \\\"https://github.com/sponsors/antonk52\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/lines-and-columns\\\": {\\n+      \\\"version\\\": \\\"1.2.4\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/lines-and-columns/-/lines-and-columns-1.2.4.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-7ylylesZQ/PV29jhEDl3Ufjo6ZX7gCqJr5F7PKrqc93v7fzSymt1BpwEU8nAUXs8qzzvqhbjhK5QZg6Mt/HkBg==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\"\\n+    },\\n+    \\\"node_modules/load-tsconfig\\\": {\\n+      \\\"version\\\": \\\"0.2.5\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/load-tsconfig/-/load-tsconfig-0.2.5.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-IXO6OCs9yg8tMKzfPZ1YmheJbZCiEsnBdcB03l0OcfK9prKnJb96siuHCr5Fl37/yo9DnKU+TLpxzTUspw9shg==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\"^12.20.0 || ^14.13.1 || >=16.0.0\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/local-pkg\\\": {\\n+      \\\"version\\\": \\\"0.5.1\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/local-pkg/-/local-pkg-0.5.1.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-9rrA30MRRP3gBD3HTGnC6cDFpaE1kVDWxWgqWJUN0RvDNAo+Nz/9GxB+nHOH0ifbVFy0hSA1V6vFDvnx54lTEQ==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"mlly\\\": \\\"^1.7.3\\\",\\n+        \\\"pkg-types\\\": \\\"^1.2.1\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=14\\\"\\n+      },\\n+      \\\"funding\\\": {\\n+        \\\"url\\\": \\\"https://github.com/sponsors/antfu\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/locate-path\\\": {\\n+      \\\"version\\\": \\\"6.0.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/locate-path/-/locate-path-6.0.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-iPZK6eYjbxRu3uB4/WZ3EsEIMJFMqAoopl3R+zuq0UjcAm/MO6KCweDgPfP3elTztoKP3KtnVHxTn2NHBSDVUw==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"p-locate\\\": \\\"^5.0.0\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=10\\\"\\n+      },\\n+      \\\"funding\\\": {\\n+        \\\"url\\\": \\\"https://github.com/sponsors/sindresorhus\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/lodash.merge\\\": {\\n+      \\\"version\\\": \\\"4.6.2\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/lodash.merge/-/lodash.merge-4.6.2.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-0KpjqXRVvrYyCsX1swR/XTK0va6VQkQM6MNo7PqW77ByjAhoARA8EfrP1N4+KlKj8YS0ZUCtRT/YUuhyYDujIQ==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\"\\n+    },\\n+    \\\"node_modules/lodash.sortby\\\": {\\n+      \\\"version\\\": \\\"4.7.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/lodash.sortby/-/lodash.sortby-4.7.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-HDWXG8isMntAyRF5vZ7xKuEvOhT4AhlRt/3czTSjvGUxjYCBVRQY48ViDHyfYz9VIoBkW4TMGQNapx+l3RUwdA==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\"\\n+    },\\n+    \\\"node_modules/loupe\\\": {\\n+      \\\"version\\\": \\\"2.3.7\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/loupe/-/loupe-2.3.7.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-zSMINGVYkdpYSOBmLi0D1Uo7JU9nVdQKrHxC8eYlV+9YKK9WePqAlL7lSlorG/U2Fw1w0hTBmaa/jrQ3UbPHtA==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"get-func-name\\\": \\\"^2.0.1\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/lru-cache\\\": {\\n+      \\\"version\\\": \\\"10.4.3\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/lru-cache/-/lru-cache-10.4.3.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-JNAzZcXrCt42VGLuYz0zfAzDfAvJWW6AfYlDBQyDV5DClI2m5sAmK+OIO7s59XfsRsWHp02jAJrRadPRGTt6SQ==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"ISC\\\"\\n+    },\\n+    \\\"node_modules/magic-string\\\": {\\n+      \\\"version\\\": \\\"0.30.17\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/magic-string/-/magic-string-0.30.17.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-sNPKHvyjVf7gyjwS4xGTaW/mCnF8wnjtifKBEhxfZ7E/S8tQ0rssrwGNn6q8JH/ohItJfSQp9mBtQYuTlH5QnA==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"@jridgewell/sourcemap-codec\\\": \\\"^1.5.0\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/merge-stream\\\": {\\n+      \\\"version\\\": \\\"2.0.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/merge-stream/-/merge-stream-2.0.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-abv/qOcuPfk3URPfDzmZU1LKmuw8kT+0nIHvKrKgFrwifol/doWcdA4ZqsWQ8ENrFKkd67Mfpo/LovbIUsbt3w==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\"\\n+    },\\n+    \\\"node_modules/merge2\\\": {\\n+      \\\"version\\\": \\\"1.4.1\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/merge2/-/merge2-1.4.1.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-8q7VEgMJW4J8tcfVPy8g09NcQwZdbwFEqhe/WZkoIzjn/3TGDwtOCYtXGxA3O8tPzpczCCDgv+P2P5y00ZJOOg==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">= 8\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/micromatch\\\": {\\n+      \\\"version\\\": \\\"4.0.8\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/micromatch/-/micromatch-4.0.8.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-PXwfBhYu0hBCPw8Dn0E+WDYb7af3dSLVWKi3HGv84IdF4TyFoC0ysxFd0Goxw7nSv4T/PzEJQxsYsEiFCKo2BA==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"braces\\\": \\\"^3.0.3\\\",\\n+        \\\"picomatch\\\": \\\"^2.3.1\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=8.6\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/mimic-fn\\\": {\\n+      \\\"version\\\": \\\"4.0.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/mimic-fn/-/mimic-fn-4.0.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-vqiC06CuhBTUdZH+RYl8sFrL096vA45Ok5ISO6sE/Mr1jRbGH4Csnhi8f3wKVl7x8mO4Au7Ir9D3Oyv1VYMFJw==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=12\\\"\\n+      },\\n+      \\\"funding\\\": {\\n+        \\\"url\\\": \\\"https://github.com/sponsors/sindresorhus\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/minimatch\\\": {\\n+      \\\"version\\\": \\\"9.0.3\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/minimatch/-/minimatch-9.0.3.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-RHiac9mvaRw0x3AYRgDC1CxAP7HTcNrrECeA8YYJeWnpo+2Q5CegtZjaotWTWxDG3UeGA1coE05iH1mPjT/2mg==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"ISC\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"brace-expansion\\\": \\\"^2.0.1\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=16 || 14 >=14.17\\\"\\n+      },\\n+      \\\"funding\\\": {\\n+        \\\"url\\\": \\\"https://github.com/sponsors/isaacs\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/minipass\\\": {\\n+      \\\"version\\\": \\\"7.1.2\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/minipass/-/minipass-7.1.2.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-qOOzS1cBTWYF4BH8fVePDBOO9iptMnGUEZwNc/cMWnTV2nVLZ7VoNWEPHkYczZA0pdoA7dl6e7FL659nX9S2aw==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"ISC\\\",\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=16 || 14 >=14.17\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/mlly\\\": {\\n+      \\\"version\\\": \\\"1.7.4\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/mlly/-/mlly-1.7.4.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-qmdSIPC4bDJXgZTCR7XosJiNKySV7O215tsPtDN9iEO/7q/76b/ijtgRu/+epFXSJhijtTCCGp3DWS549P3xKw==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"acorn\\\": \\\"^8.14.0\\\",\\n+        \\\"pathe\\\": \\\"^2.0.1\\\",\\n+        \\\"pkg-types\\\": \\\"^1.3.0\\\",\\n+        \\\"ufo\\\": \\\"^1.5.4\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/ms\\\": {\\n+      \\\"version\\\": \\\"2.1.3\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/ms/-/ms-2.1.3.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\"\\n+    },\\n+    \\\"node_modules/mz\\\": {\\n+      \\\"version\\\": \\\"2.7.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/mz/-/mz-2.7.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-z81GNO7nnYMEhrGh9LeymoE4+Yr0Wn5McHIZMK5cfQCl+NDX08sCZgUc9/6MHni9IWuFLm1Z3HTCXu2z9fN62Q==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"any-promise\\\": \\\"^1.0.0\\\",\\n+        \\\"object-assign\\\": \\\"^4.0.1\\\",\\n+        \\\"thenify-all\\\": \\\"^1.0.0\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/nanoid\\\": {\\n+      \\\"version\\\": \\\"3.3.11\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/nanoid/-/nanoid-3.3.11.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-N8SpfPUnUp1bK+PMYW8qSWdl9U+wwNWI4QKxOYDy9JAro3WMX7p2OeVRF9v+347pnakNevPmiHhNmZ2HbFA76w==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"funding\\\": [\\n+        {\\n+          \\\"type\\\": \\\"github\\\",\\n+          \\\"url\\\": \\\"https://github.com/sponsors/ai\\\"\\n+        }\\n+      ],\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"bin\\\": {\\n+        \\\"nanoid\\\": \\\"bin/nanoid.cjs\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\"^10 || ^12 || ^13.7 || ^14 || >=15.0.1\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/natural-compare\\\": {\\n+      \\\"version\\\": \\\"1.4.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/natural-compare/-/natural-compare-1.4.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-OWND8ei3VtNC9h7V60qff3SVobHr996CTwgxubgyQYEpg290h9J0buyECNNJexkFm5sOajh5G116RYA1c8ZMSw==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\"\\n+    },\\n+    \\\"node_modules/npm-run-path\\\": {\\n+      \\\"version\\\": \\\"5.3.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/npm-run-path/-/npm-run-path-5.3.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-ppwTtiJZq0O/ai0z7yfudtBpWIoxM8yE6nHi1X47eFR2EWORqfbu6CnPlNsjeN683eT0qG6H/Pyf9fCcvjnnnQ==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"path-key\\\": \\\"^4.0.0\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\"^12.20.0 || ^14.13.1 || >=16.0.0\\\"\\n+      },\\n+      \\\"funding\\\": {\\n+        \\\"url\\\": \\\"https://github.com/sponsors/sindresorhus\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/npm-run-path/node_modules/path-key\\\": {\\n+      \\\"version\\\": \\\"4.0.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/path-key/-/path-key-4.0.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-haREypq7xkM7ErfgIyA0z+Bj4AGKlMSdlQE2jvJo6huWD1EdkKYV+G/T4nq0YEF2vgTT8kqMFKo1uHn950r4SQ==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=12\\\"\\n+      },\\n+      \\\"funding\\\": {\\n+        \\\"url\\\": \\\"https://github.com/sponsors/sindresorhus\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/object-assign\\\": {\\n+      \\\"version\\\": \\\"4.1.1\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-rJgTQnkUnH1sFw8yT6VSU3zD3sWmu6sZhIseY8VX+GRu3P6F7Fu+JNDoXfklElbLJSnc3FUQHVe4cU5hj+BcUg==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=0.10.0\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/once\\\": {\\n+      \\\"version\\\": \\\"1.4.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/once/-/once-1.4.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-lNaJgI+2Q5URQBkccEKHTQOPaXdUxnZZElQTZY0MFUAuaEqe1E+Nyvgdz/aIyNi6Z9MzO5dv1H8n58/GELp3+w==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"ISC\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"wrappy\\\": \\\"1\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/onetime\\\": {\\n+      \\\"version\\\": \\\"6.0.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/onetime/-/onetime-6.0.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-1FlR+gjXK7X+AsAHso35MnyN5KqGwJRi/31ft6x0M194ht7S+rWAvd7PHss9xSKMzE0asv1pyIHaJYq+BbacAQ==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"mimic-fn\\\": \\\"^4.0.0\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=12\\\"\\n+      },\\n+      \\\"funding\\\": {\\n+        \\\"url\\\": \\\"https://github.com/sponsors/sindresorhus\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/optionator\\\": {\\n+      \\\"version\\\": \\\"0.9.4\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/optionator/-/optionator-0.9.4.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-6IpQ7mKUxRcZNLIObR0hz7lxsapSSIYNZJwXPGeF0mTVqGKFIXj1DQcMoT22S3ROcLyY/rz0PWaWZ9ayWmad9g==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"deep-is\\\": \\\"^0.1.3\\\",\\n+        \\\"fast-levenshtein\\\": \\\"^2.0.6\\\",\\n+        \\\"levn\\\": \\\"^0.4.1\\\",\\n+        \\\"prelude-ls\\\": \\\"^1.2.1\\\",\\n+        \\\"type-check\\\": \\\"^0.4.0\\\",\\n+        \\\"word-wrap\\\": \\\"^1.2.5\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">= 0.8.0\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/p-limit\\\": {\\n+      \\\"version\\\": \\\"3.1.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/p-limit/-/p-limit-3.1.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-TYOanM3wGwNGsZN2cVTYPArw454xnXj5qmWF1bEoAc4+cU/ol7GVh7odevjp1FNHduHc3KZMcFduxU5Xc6uJRQ==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"yocto-queue\\\": \\\"^0.1.0\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=10\\\"\\n+      },\\n+      \\\"funding\\\": {\\n+        \\\"url\\\": \\\"https://github.com/sponsors/sindresorhus\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/p-locate\\\": {\\n+      \\\"version\\\": \\\"5.0.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/p-locate/-/p-locate-5.0.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-LaNjtRWUBY++zB5nE/NwcaoMylSPk+S+ZHNB1TzdbMJMny6dynpAGt7X/tl/QYq3TIeE6nxHppbo2LGymrG5Pw==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"p-limit\\\": \\\"^3.0.2\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=10\\\"\\n+      },\\n+      \\\"funding\\\": {\\n+        \\\"url\\\": \\\"https://github.com/sponsors/sindresorhus\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/package-json-from-dist\\\": {\\n+      \\\"version\\\": \\\"1.0.1\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/package-json-from-dist/-/package-json-from-dist-1.0.1.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-UEZIS3/by4OC8vL3P2dTXRETpebLI2NiI5vIrjaD/5UtrkFX/tNbwjTSRAGC/+7CAo2pIcBaRgWmcBBHcsaCIw==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"BlueOak-1.0.0\\\"\\n+    },\\n+    \\\"node_modules/parent-module\\\": {\\n+      \\\"version\\\": \\\"1.0.1\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/parent-module/-/parent-module-1.0.1.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-GQ2EWRpQV8/o+Aw8YqtfZZPfNRWZYkbidE9k5rpl/hC3vtHHBfGm2Ifi6qWV+coDGkrUKZAxE3Lot5kcsRlh+g==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"callsites\\\": \\\"^3.0.0\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=6\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/path-exists\\\": {\\n+      \\\"version\\\": \\\"4.0.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/path-exists/-/path-exists-4.0.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=8\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/path-is-absolute\\\": {\\n+      \\\"version\\\": \\\"1.0.1\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.1.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-AVbw3UJ2e9bq64vSaS9Am0fje1Pa8pbGqTTsmXfaIiMpnr5DlDhfJOuLj9Sf95ZPVDAUerDfEk88MPmPe7UCQg==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=0.10.0\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/path-key\\\": {\\n+      \\\"version\\\": \\\"3.1.1\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/path-key/-/path-key-3.1.1.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=8\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/path-scurry\\\": {\\n+      \\\"version\\\": \\\"1.11.1\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/path-scurry/-/path-scurry-1.11.1.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-Xa4Nw17FS9ApQFJ9umLiJS4orGjm7ZzwUrwamcGQuHSzDyth9boKDaycYdDcZDuqYATXw4HFXgaqWTctW/v1HA==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"BlueOak-1.0.0\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"lru-cache\\\": \\\"^10.2.0\\\",\\n+        \\\"minipass\\\": \\\"^5.0.0 || ^6.0.2 || ^7.0.0\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=16 || 14 >=14.18\\\"\\n+      },\\n+      \\\"funding\\\": {\\n+        \\\"url\\\": \\\"https://github.com/sponsors/isaacs\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/path-type\\\": {\\n+      \\\"version\\\": \\\"4.0.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/path-type/-/path-type-4.0.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-gDKb8aZMDeD/tZWs9P6+q0J9Mwkdl6xMV8TjnGP3qJVJ06bdMgkbBlLU8IdfOsIsFz2BW1rNVT3XuNEl8zPAvw==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=8\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/pathe\\\": {\\n+      \\\"version\\\": \\\"2.0.3\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/pathe/-/pathe-2.0.3.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-WUjGcAqP1gQacoQe+OBJsFA7Ld4DyXuUIjZ5cc75cLHvJ7dtNsTugphxIADwspS+AraAUePCKrSVtPLFj/F88w==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\"\\n+    },\\n+    \\\"node_modules/pathval\\\": {\\n+      \\\"version\\\": \\\"1.1.1\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/pathval/-/pathval-1.1.1.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-Dp6zGqpTdETdR63lehJYPeIOqpiNBNtc7BpWSLrOje7UaIsE5aY92r/AunQA7rsXvet3lrJ3JnZX29UPTKXyKQ==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\"*\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/picocolors\\\": {\\n+      \\\"version\\\": \\\"1.1.1\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/picocolors/-/picocolors-1.1.1.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"ISC\\\"\\n+    },\\n+    \\\"node_modules/picomatch\\\": {\\n+      \\\"version\\\": \\\"2.3.1\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=8.6\\\"\\n+      },\\n+      \\\"funding\\\": {\\n+        \\\"url\\\": \\\"https://github.com/sponsors/jonschlinkert\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/pirates\\\": {\\n+      \\\"version\\\": \\\"4.0.7\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/pirates/-/pirates-4.0.7.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-TfySrs/5nm8fQJDcBDuUng3VOUKsd7S+zqvbOTiGXHfxX4wK31ard+hoNuvkicM/2YFzlpDgABOevKSsB4G/FA==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">= 6\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/pkg-types\\\": {\\n+      \\\"version\\\": \\\"1.3.1\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/pkg-types/-/pkg-types-1.3.1.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-/Jm5M4RvtBFVkKWRu2BLUTNP8/M2a+UwuAX+ae4770q1qVGtfjG+WTCupoZixokjmHiry8uI+dlY8KXYV5HVVQ==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"confbox\\\": \\\"^0.1.8\\\",\\n+        \\\"mlly\\\": \\\"^1.7.4\\\",\\n+        \\\"pathe\\\": \\\"^2.0.1\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/postcss\\\": {\\n+      \\\"version\\\": \\\"8.5.6\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/postcss/-/postcss-8.5.6.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-3Ybi1tAuwAP9s0r1UQ2J4n5Y0G05bJkpUIO0/bI9MhwmD70S5aTWbXGBwxHrelT+XM1k6dM0pk+SwNkpTRN7Pg==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"funding\\\": [\\n+        {\\n+          \\\"type\\\": \\\"opencollective\\\",\\n+          \\\"url\\\": \\\"https://opencollective.com/postcss/\\\"\\n+        },\\n+        {\\n+          \\\"type\\\": \\\"tidelift\\\",\\n+          \\\"url\\\": \\\"https://tidelift.com/funding/github/npm/postcss\\\"\\n+        },\\n+        {\\n+          \\\"type\\\": \\\"github\\\",\\n+          \\\"url\\\": \\\"https://github.com/sponsors/ai\\\"\\n+        }\\n+      ],\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"nanoid\\\": \\\"^3.3.11\\\",\\n+        \\\"picocolors\\\": \\\"^1.1.1\\\",\\n+        \\\"source-map-js\\\": \\\"^1.2.1\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\"^10 || ^12 || >=14\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/postcss-load-config\\\": {\\n+      \\\"version\\\": \\\"6.0.1\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/postcss-load-config/-/postcss-load-config-6.0.1.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-oPtTM4oerL+UXmx+93ytZVN82RrlY/wPUV8IeDxFrzIjXOLF1pN+EmKPLbubvKHT2HC20xXsCAH2Z+CKV6Oz/g==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"funding\\\": [\\n+        {\\n+          \\\"type\\\": \\\"opencollective\\\",\\n+          \\\"url\\\": \\\"https://opencollective.com/postcss/\\\"\\n+        },\\n+        {\\n+          \\\"type\\\": \\\"github\\\",\\n+          \\\"url\\\": \\\"https://github.com/sponsors/ai\\\"\\n+        }\\n+      ],\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"lilconfig\\\": \\\"^3.1.1\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">= 18\\\"\\n+      },\\n+      \\\"peerDependencies\\\": {\\n+        \\\"jiti\\\": \\\">=1.21.0\\\",\\n+        \\\"postcss\\\": \\\">=8.0.9\\\",\\n+        \\\"tsx\\\": \\\"^4.8.1\\\",\\n+        \\\"yaml\\\": \\\"^2.4.2\\\"\\n+      },\\n+      \\\"peerDependenciesMeta\\\": {\\n+        \\\"jiti\\\": {\\n+          \\\"optional\\\": true\\n+        },\\n+        \\\"postcss\\\": {\\n+          \\\"optional\\\": true\\n+        },\\n+        \\\"tsx\\\": {\\n+          \\\"optional\\\": true\\n+        },\\n+        \\\"yaml\\\": {\\n+          \\\"optional\\\": true\\n+        }\\n+      }\\n+    },\\n+    \\\"node_modules/prelude-ls\\\": {\\n+      \\\"version\\\": \\\"1.2.1\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/prelude-ls/-/prelude-ls-1.2.1.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-vkcDPrRZo1QZLbn5RLGPpg/WmIQ65qoWWhcGKf/b5eplkkarX0m9z8ppCat4mlOqUsWpyNuYgO3VRyrYHSzX5g==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">= 0.8.0\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/pretty-format\\\": {\\n+      \\\"version\\\": \\\"29.7.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/pretty-format/-/pretty-format-29.7.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-Pdlw/oPxN+aXdmM9R00JVC9WVFoCLTKJvDVLgmJ+qAffBMxsV85l/Lu7sNx4zSzPyoL2euImuEwHhOXdEgNFZQ==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"@jest/schemas\\\": \\\"^29.6.3\\\",\\n+        \\\"ansi-styles\\\": \\\"^5.0.0\\\",\\n+        \\\"react-is\\\": \\\"^18.0.0\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\"^14.15.0 || ^16.10.0 || >=18.0.0\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/pretty-format/node_modules/ansi-styles\\\": {\\n+      \\\"version\\\": \\\"5.2.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/ansi-styles/-/ansi-styles-5.2.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-Cxwpt2SfTzTtXcfOlzGEee8O+c+MmUgGrNiBcXnuWxuFJHe6a5Hz7qwhwe5OgaSYI0IJvkLqWX1ASG+cJOkEiA==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=10\\\"\\n+      },\\n+      \\\"funding\\\": {\\n+        \\\"url\\\": \\\"https://github.com/chalk/ansi-styles?sponsor=1\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/punycode\\\": {\\n+      \\\"version\\\": \\\"2.3.1\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/punycode/-/punycode-2.3.1.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-vYt7UD1U9Wg6138shLtLOvdAu+8DsC/ilFtEVHcH+wydcSpNE20AfSOduf6MkRFahL5FY7X1oU7nKVZFtfq8Fg==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=6\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/queue-microtask\\\": {\\n+      \\\"version\\\": \\\"1.2.3\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/queue-microtask/-/queue-microtask-1.2.3.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5RqkDBHA7r4hej3K9A==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"funding\\\": [\\n+        {\\n+          \\\"type\\\": \\\"github\\\",\\n+          \\\"url\\\": \\\"https://github.com/sponsors/feross\\\"\\n+        },\\n+        {\\n+          \\\"type\\\": \\\"patreon\\\",\\n+          \\\"url\\\": \\\"https://www.patreon.com/feross\\\"\\n+        },\\n+        {\\n+          \\\"type\\\": \\\"consulting\\\",\\n+          \\\"url\\\": \\\"https://feross.org/support\\\"\\n+        }\\n+      ],\\n+      \\\"license\\\": \\\"MIT\\\"\\n+    },\\n+    \\\"node_modules/react-is\\\": {\\n+      \\\"version\\\": \\\"18.3.1\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/react-is/-/react-is-18.3.1.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-/LLMVyas0ljjAtoYiPqYiL8VWXzUUdThrmU5+n20DZv+a+ClRoevUzw5JxU+Ieh5/c87ytoTBV9G1FiKfNJdmg==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\"\\n+    },\\n+    \\\"node_modules/readdirp\\\": {\\n+      \\\"version\\\": \\\"4.1.2\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/readdirp/-/readdirp-4.1.2.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-GDhwkLfywWL2s6vEjyhri+eXmfH6j1L7JE27WhqLeYzoh/A3DBaYGEj2H/HFZCn/kMfim73FXxEJTw06WtxQwg==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">= 14.18.0\\\"\\n+      },\\n+      \\\"funding\\\": {\\n+        \\\"type\\\": \\\"individual\\\",\\n+        \\\"url\\\": \\\"https://paulmillr.com/funding/\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/resolve-from\\\": {\\n+      \\\"version\\\": \\\"4.0.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/resolve-from/-/resolve-from-4.0.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-pb/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp/+vgZqsCGJapvy8N3Q+4o7FwvquPJcnZ7RYy4g==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=4\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/reusify\\\": {\\n+      \\\"version\\\": \\\"1.1.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/reusify/-/reusify-1.1.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-g6QUff04oZpHs0eG5p83rFLhHeV00ug/Yf9nZM6fLeUrPguBTkTQOdpAWWspMh55TZfVQDPaN3NQJfbVRAxdIw==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"engines\\\": {\\n+        \\\"iojs\\\": \\\">=1.0.0\\\",\\n+        \\\"node\\\": \\\">=0.10.0\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/rimraf\\\": {\\n+      \\\"version\\\": \\\"3.0.2\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/rimraf/-/rimraf-3.0.2.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-JZkJMZkAGFFPP2YqXZXPbMlMBgsxzE8ILs4lMIX/2o0L9UBw9O/Y3o6wFw/i9YLapcUJWwqbi3kdxIPdC62TIA==\\\",\\n+      \\\"deprecated\\\": \\\"Rimraf versions prior to v4 are no longer supported\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"ISC\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"glob\\\": \\\"^7.1.3\\\"\\n+      },\\n+      \\\"bin\\\": {\\n+        \\\"rimraf\\\": \\\"bin.js\\\"\\n+      },\\n+      \\\"funding\\\": {\\n+        \\\"url\\\": \\\"https://github.com/sponsors/isaacs\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/rollup\\\": {\\n+      \\\"version\\\": \\\"4.45.1\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/rollup/-/rollup-4.45.1.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-4iya7Jb76fVpQyLoiVpzUrsjQ12r3dM7fIVz+4NwoYvZOShknRmiv+iu9CClZml5ZLGb0XMcYLutK6w9tgxHDw==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"@types/estree\\\": \\\"1.0.8\\\"\\n+      },\\n+      \\\"bin\\\": {\\n+        \\\"rollup\\\": \\\"dist/bin/rollup\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=18.0.0\\\",\\n+        \\\"npm\\\": \\\">=8.0.0\\\"\\n+      },\\n+      \\\"optionalDependencies\\\": {\\n+        \\\"@rollup/rollup-android-arm-eabi\\\": \\\"4.45.1\\\",\\n+        \\\"@rollup/rollup-android-arm64\\\": \\\"4.45.1\\\",\\n+        \\\"@rollup/rollup-darwin-arm64\\\": \\\"4.45.1\\\",\\n+        \\\"@rollup/rollup-darwin-x64\\\": \\\"4.45.1\\\",\\n+        \\\"@rollup/rollup-freebsd-arm64\\\": \\\"4.45.1\\\",\\n+        \\\"@rollup/rollup-freebsd-x64\\\": \\\"4.45.1\\\",\\n+        \\\"@rollup/rollup-linux-arm-gnueabihf\\\": \\\"4.45.1\\\",\\n+        \\\"@rollup/rollup-linux-arm-musleabihf\\\": \\\"4.45.1\\\",\\n+        \\\"@rollup/rollup-linux-arm64-gnu\\\": \\\"4.45.1\\\",\\n+        \\\"@rollup/rollup-linux-arm64-musl\\\": \\\"4.45.1\\\",\\n+        \\\"@rollup/rollup-linux-loongarch64-gnu\\\": \\\"4.45.1\\\",\\n+        \\\"@rollup/rollup-linux-powerpc64le-gnu\\\": \\\"4.45.1\\\",\\n+        \\\"@rollup/rollup-linux-riscv64-gnu\\\": \\\"4.45.1\\\",\\n+        \\\"@rollup/rollup-linux-riscv64-musl\\\": \\\"4.45.1\\\",\\n+        \\\"@rollup/rollup-linux-s390x-gnu\\\": \\\"4.45.1\\\",\\n+        \\\"@rollup/rollup-linux-x64-gnu\\\": \\\"4.45.1\\\",\\n+        \\\"@rollup/rollup-linux-x64-musl\\\": \\\"4.45.1\\\",\\n+        \\\"@rollup/rollup-win32-arm64-msvc\\\": \\\"4.45.1\\\",\\n+        \\\"@rollup/rollup-win32-ia32-msvc\\\": \\\"4.45.1\\\",\\n+        \\\"@rollup/rollup-win32-x64-msvc\\\": \\\"4.45.1\\\",\\n+        \\\"fsevents\\\": \\\"~2.3.2\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/run-parallel\\\": {\\n+      \\\"version\\\": \\\"1.2.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/run-parallel/-/run-parallel-1.2.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-5l4VyZR86LZ/lDxZTR6jqL8AFE2S0IFLMP26AbjsLVADxHdhB/c0GUsH+y39UfCi3dzz8OlQuPmnaJOMoDHQBA==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"funding\\\": [\\n+        {\\n+          \\\"type\\\": \\\"github\\\",\\n+          \\\"url\\\": \\\"https://github.com/sponsors/feross\\\"\\n+        },\\n+        {\\n+          \\\"type\\\": \\\"patreon\\\",\\n+          \\\"url\\\": \\\"https://www.patreon.com/feross\\\"\\n+        },\\n+        {\\n+          \\\"type\\\": \\\"consulting\\\",\\n+          \\\"url\\\": \\\"https://feross.org/support\\\"\\n+        }\\n+      ],\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"queue-microtask\\\": \\\"^1.2.2\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/semver\\\": {\\n+      \\\"version\\\": \\\"7.7.2\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/semver/-/semver-7.7.2.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-RF0Fw+rO5AMf9MAyaRXI4AV0Ulj5lMHqVxxdSgiVbixSCXoEmmX/jk0CuJw4+3SqroYO9VoUh+HcuJivvtJemA==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"ISC\\\",\\n+      \\\"bin\\\": {\\n+        \\\"semver\\\": \\\"bin/semver.js\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=10\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/shebang-command\\\": {\\n+      \\\"version\\\": \\\"2.0.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/shebang-command/-/shebang-command-2.0.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"shebang-regex\\\": \\\"^3.0.0\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=8\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/shebang-regex\\\": {\\n+      \\\"version\\\": \\\"3.0.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/shebang-regex/-/shebang-regex-3.0.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=8\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/siginfo\\\": {\\n+      \\\"version\\\": \\\"2.0.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/siginfo/-/siginfo-2.0.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-ybx0WO1/8bSBLEWXZvEd7gMW3Sn3JFlW3TvX1nREbDLRNQNaeNN8WK0meBwPdAaOI7TtRRRJn/Es1zhrrCHu7g==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"ISC\\\"\\n+    },\\n+    \\\"node_modules/signal-exit\\\": {\\n+      \\\"version\\\": \\\"4.1.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/signal-exit/-/signal-exit-4.1.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-bzyZ1e88w9O1iNJbKnOlvYTrWPDl46O1bG0D3XInv+9tkPrxrN8jUUTiFlDkkmKWgn1M6CfIA13SuGqOa9Korw==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"ISC\\\",\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=14\\\"\\n+      },\\n+      \\\"funding\\\": {\\n+        \\\"url\\\": \\\"https://github.com/sponsors/isaacs\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/slash\\\": {\\n+      \\\"version\\\": \\\"3.0.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/slash/-/slash-3.0.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz0V1G85A4MyAdDMi2Q==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=8\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/source-map\\\": {\\n+      \\\"version\\\": \\\"0.8.0-beta.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/source-map/-/source-map-0.8.0-beta.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-2ymg6oRBpebeZi9UUNsgQ89bhx01TcTkmNTGnNO88imTmbSgy4nfujrgVEFKWpMTEGA11EDkTt7mqObTPdigIA==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"BSD-3-Clause\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"whatwg-url\\\": \\\"^7.0.0\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">= 8\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/source-map-js\\\": {\\n+      \\\"version\\\": \\\"1.2.1\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/source-map-js/-/source-map-js-1.2.1.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-UXWMKhLOwVKb728IUtQPXxfYU+usdybtUrK/8uGE8CQMvrhOpwvzDBwj0QhSL7MQc7vIsISBG8VQ8+IDQxpfQA==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"BSD-3-Clause\\\",\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=0.10.0\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/stackback\\\": {\\n+      \\\"version\\\": \\\"0.0.2\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/stackback/-/stackback-0.0.2.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-1XMJE5fQo1jGH6Y/7ebnwPOBEkIEnT4QF32d5R1+VXdXveM0IBMJt8zfaxX1P3QhVwrYe+576+jkANtSS2mBbw==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\"\\n+    },\\n+    \\\"node_modules/std-env\\\": {\\n+      \\\"version\\\": \\\"3.9.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/std-env/-/std-env-3.9.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-UGvjygr6F6tpH7o2qyqR6QYpwraIjKSdtzyBdyytFOHmPZY917kwdwLG0RbOjWOnKmnm3PeHjaoLLMie7kPLQw==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\"\\n+    },\\n+    \\\"node_modules/string-width\\\": {\\n+      \\\"version\\\": \\\"5.1.2\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/string-width/-/string-width-5.1.2.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-HnLOCR3vjcY8beoNLtcjZ5/nxn2afmME6lhrDrebokqMap+XbeW8n9TXpPDOqdGK5qcI3oT0GKTW6wC7EMiVqA==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"eastasianwidth\\\": \\\"^0.2.0\\\",\\n+        \\\"emoji-regex\\\": \\\"^9.2.2\\\",\\n+        \\\"strip-ansi\\\": \\\"^7.0.1\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=12\\\"\\n+      },\\n+      \\\"funding\\\": {\\n+        \\\"url\\\": \\\"https://github.com/sponsors/sindresorhus\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/string-width-cjs\\\": {\\n+      \\\"name\\\": \\\"string-width\\\",\\n+      \\\"version\\\": \\\"4.2.3\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"emoji-regex\\\": \\\"^8.0.0\\\",\\n+        \\\"is-fullwidth-code-point\\\": \\\"^3.0.0\\\",\\n+        \\\"strip-ansi\\\": \\\"^6.0.1\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=8\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/string-width-cjs/node_modules/emoji-regex\\\": {\\n+      \\\"version\\\": \\\"8.0.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\"\\n+    },\\n+    \\\"node_modules/string-width/node_modules/ansi-regex\\\": {\\n+      \\\"version\\\": \\\"6.1.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/ansi-regex/-/ansi-regex-6.1.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-7HSX4QQb4CspciLpVFwyRe79O3xsIZDDLER21kERQ71oaPodF8jL725AgJMFAYbooIqolJoRLuM81SpeUkpkvA==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=12\\\"\\n+      },\\n+      \\\"funding\\\": {\\n+        \\\"url\\\": \\\"https://github.com/chalk/ansi-regex?sponsor=1\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/string-width/node_modules/strip-ansi\\\": {\\n+      \\\"version\\\": \\\"7.1.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/strip-ansi/-/strip-ansi-7.1.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-iq6eVVI64nQQTRYq2KtEg2d2uU7LElhTJwsH4YzIHZshxlgZms/wIc4VoDQTlG/IvVIrBKG06CrZnp0qv7hkcQ==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"ansi-regex\\\": \\\"^6.0.1\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=12\\\"\\n+      },\\n+      \\\"funding\\\": {\\n+        \\\"url\\\": \\\"https://github.com/chalk/strip-ansi?sponsor=1\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/strip-ansi\\\": {\\n+      \\\"version\\\": \\\"6.0.1\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"ansi-regex\\\": \\\"^5.0.1\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=8\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/strip-ansi-cjs\\\": {\\n+      \\\"name\\\": \\\"strip-ansi\\\",\\n+      \\\"version\\\": \\\"6.0.1\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"ansi-regex\\\": \\\"^5.0.1\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=8\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/strip-final-newline\\\": {\\n+      \\\"version\\\": \\\"3.0.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/strip-final-newline/-/strip-final-newline-3.0.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-dOESqjYr96iWYylGObzd39EuNTa5VJxyvVAEm5Jnh7KGo75V43Hk1odPQkNDyXNmUR6k+gEiDVXnjB8HJ3crXw==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=12\\\"\\n+      },\\n+      \\\"funding\\\": {\\n+        \\\"url\\\": \\\"https://github.com/sponsors/sindresorhus\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/strip-json-comments\\\": {\\n+      \\\"version\\\": \\\"3.1.1\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/strip-json-comments/-/strip-json-comments-3.1.1.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-6fPc+R4ihwqP6N/aIv2f1gMH8lOVtWQHoqC4yK6oSDVVocumAsfCqjkXnqiYMhmMwS/mEHLp7Vehlt3ql6lEig==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=8\\\"\\n+      },\\n+      \\\"funding\\\": {\\n+        \\\"url\\\": \\\"https://github.com/sponsors/sindresorhus\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/strip-literal\\\": {\\n+      \\\"version\\\": \\\"2.1.1\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/strip-literal/-/strip-literal-2.1.1.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-631UJ6O00eNGfMiWG78ck80dfBab8X6IVFB51jZK5Icd7XAs60Z5y7QdSd/wGIklnWvRbUNloVzhOKKmutxQ6Q==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"js-tokens\\\": \\\"^9.0.1\\\"\\n+      },\\n+      \\\"funding\\\": {\\n+        \\\"url\\\": \\\"https://github.com/sponsors/antfu\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/sucrase\\\": {\\n+      \\\"version\\\": \\\"3.35.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/sucrase/-/sucrase-3.35.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-8EbVDiu9iN/nESwxeSxDKe0dunta1GOlHufmSSXxMD2z2/tMZpDMpvXQGsc+ajGo8y2uYUmixaSRUc/QPoQ0GA==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"@jridgewell/gen-mapping\\\": \\\"^0.3.2\\\",\\n+        \\\"commander\\\": \\\"^4.0.0\\\",\\n+        \\\"glob\\\": \\\"^10.3.10\\\",\\n+        \\\"lines-and-columns\\\": \\\"^1.1.6\\\",\\n+        \\\"mz\\\": \\\"^2.7.0\\\",\\n+        \\\"pirates\\\": \\\"^4.0.1\\\",\\n+        \\\"ts-interface-checker\\\": \\\"^0.1.9\\\"\\n+      },\\n+      \\\"bin\\\": {\\n+        \\\"sucrase\\\": \\\"bin/sucrase\\\",\\n+        \\\"sucrase-node\\\": \\\"bin/sucrase-node\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=16 || 14 >=14.17\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/sucrase/node_modules/glob\\\": {\\n+      \\\"version\\\": \\\"10.4.5\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/glob/-/glob-10.4.5.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-7Bv8RF0k6xjo7d4A/PxYLbUCfb6c+Vpd2/mB2yRDlew7Jb5hEXiCD9ibfO7wpk8i4sevK6DFny9h7EYbM3/sHg==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"ISC\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"foreground-child\\\": \\\"^3.1.0\\\",\\n+        \\\"jackspeak\\\": \\\"^3.1.2\\\",\\n+        \\\"minimatch\\\": \\\"^9.0.4\\\",\\n+        \\\"minipass\\\": \\\"^7.1.2\\\",\\n+        \\\"package-json-from-dist\\\": \\\"^1.0.0\\\",\\n+        \\\"path-scurry\\\": \\\"^1.11.1\\\"\\n+      },\\n+      \\\"bin\\\": {\\n+        \\\"glob\\\": \\\"dist/esm/bin.mjs\\\"\\n+      },\\n+      \\\"funding\\\": {\\n+        \\\"url\\\": \\\"https://github.com/sponsors/isaacs\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/sucrase/node_modules/minimatch\\\": {\\n+      \\\"version\\\": \\\"9.0.5\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/minimatch/-/minimatch-9.0.5.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-G6T0ZX48xgozx7587koeX9Ys2NYy6Gmv//P89sEte9V9whIapMNF4idKxnW2QtCcLiTWlb/wfCabAtAFWhhBow==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"ISC\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"brace-expansion\\\": \\\"^2.0.1\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=16 || 14 >=14.17\\\"\\n+      },\\n+      \\\"funding\\\": {\\n+        \\\"url\\\": \\\"https://github.com/sponsors/isaacs\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/supports-color\\\": {\\n+      \\\"version\\\": \\\"7.2.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"has-flag\\\": \\\"^4.0.0\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=8\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/text-table\\\": {\\n+      \\\"version\\\": \\\"0.2.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/text-table/-/text-table-0.2.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-N+8UisAXDGk8PFXP4HAzVR9nbfmVJ3zYLAWiTIoqC5v5isinhr+r5uaO8+7r3BMfuNIufIsA7RdpVgacC2cSpw==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\"\\n+    },\\n+    \\\"node_modules/thenify\\\": {\\n+      \\\"version\\\": \\\"3.3.1\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/thenify/-/thenify-3.3.1.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-RVZSIV5IG10Hk3enotrhvz0T9em6cyHBLkH/YAZuKqd8hRkKhSfCGIcP2KUY0EPxndzANBmNllzWPwak+bheSw==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"any-promise\\\": \\\"^1.0.0\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/thenify-all\\\": {\\n+      \\\"version\\\": \\\"1.6.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/thenify-all/-/thenify-all-1.6.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-RNxQH/qI8/t3thXJDwcstUO4zeqo64+Uy/+sNVRBx4Xn2OX+OZ9oP+iJnNFqplFra2ZUVeKCSa2oVWi3T4uVmA==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"thenify\\\": \\\">= 3.1.0 < 4\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=0.8\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/tinybench\\\": {\\n+      \\\"version\\\": \\\"2.9.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/tinybench/-/tinybench-2.9.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-0+DUvqWMValLmha6lr4kD8iAMK1HzV0/aKnCtWb9v9641TnP/MFb7Pc2bxoxQjTXAErryXVgUOfv2YqNllqGeg==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\"\\n+    },\\n+    \\\"node_modules/tinyexec\\\": {\\n+      \\\"version\\\": \\\"0.3.2\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/tinyexec/-/tinyexec-0.3.2.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-KQQR9yN7R5+OSwaK0XQoj22pwHoTlgYqmUscPYoknOoWCWfj/5/ABTMRi69FrKU5ffPVh5QcFikpWJI/P1ocHA==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\"\\n+    },\\n+    \\\"node_modules/tinyglobby\\\": {\\n+      \\\"version\\\": \\\"0.2.14\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/tinyglobby/-/tinyglobby-0.2.14.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-tX5e7OM1HnYr2+a2C/4V0htOcSQcoSTH9KgJnVvNm5zm/cyEWKJ7j7YutsH9CxMdtOkkLFy2AHrMci9IM8IPZQ==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"fdir\\\": \\\"^6.4.4\\\",\\n+        \\\"picomatch\\\": \\\"^4.0.2\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=12.0.0\\\"\\n+      },\\n+      \\\"funding\\\": {\\n+        \\\"url\\\": \\\"https://github.com/sponsors/SuperchupuDev\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/tinyglobby/node_modules/fdir\\\": {\\n+      \\\"version\\\": \\\"6.4.6\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/fdir/-/fdir-6.4.6.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-hiFoqpyZcfNm1yc4u8oWCf9A2c4D3QjCrks3zmoVKVxpQRzmPNar1hUJcBG2RQHvEVGDN+Jm81ZheVLAQMK6+w==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"peerDependencies\\\": {\\n+        \\\"picomatch\\\": \\\"^3 || ^4\\\"\\n+      },\\n+      \\\"peerDependenciesMeta\\\": {\\n+        \\\"picomatch\\\": {\\n+          \\\"optional\\\": true\\n+        }\\n+      }\\n+    },\\n+    \\\"node_modules/tinyglobby/node_modules/picomatch\\\": {\\n+      \\\"version\\\": \\\"4.0.3\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/picomatch/-/picomatch-4.0.3.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-5gTmgEY/sqK6gFXLIsQNH19lWb4ebPDLA4SdLP7dsWkIXHWlG66oPuVvXSGFPppYZz8ZDZq0dYYrbHfBCVUb1Q==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=12\\\"\\n+      },\\n+      \\\"funding\\\": {\\n+        \\\"url\\\": \\\"https://github.com/sponsors/jonschlinkert\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/tinypool\\\": {\\n+      \\\"version\\\": \\\"0.8.4\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/tinypool/-/tinypool-0.8.4.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-i11VH5gS6IFeLY3gMBQ00/MmLncVP7JLXOw1vlgkytLmJK7QnEr7NXf0LBdxfmNPAeyetukOk0bOYrJrFGjYJQ==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=14.0.0\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/tinyspy\\\": {\\n+      \\\"version\\\": \\\"2.2.1\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/tinyspy/-/tinyspy-2.2.1.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-KYad6Vy5VDWV4GH3fjpseMQ/XU2BhIYP7Vzd0LG44qRWm/Yt2WCOTicFdvmgo6gWaqooMQCawTtILVQJupKu7A==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=14.0.0\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/to-regex-range\\\": {\\n+      \\\"version\\\": \\\"5.0.1\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"is-number\\\": \\\"^7.0.0\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=8.0\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/tr46\\\": {\\n+      \\\"version\\\": \\\"1.0.1\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/tr46/-/tr46-1.0.1.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-dTpowEjclQ7Kgx5SdBkqRzVhERQXov8/l9Ft9dVM9fmg0W0KQSVaXX9T4i6twCPNtYiZM53lpSSUAwJbFPOHxA==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"punycode\\\": \\\"^2.1.0\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/tree-kill\\\": {\\n+      \\\"version\\\": \\\"1.2.2\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/tree-kill/-/tree-kill-1.2.2.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-L0Orpi8qGpRG//Nd+H90vFB+3iHnue1zSSGmNOOCh1GLJ7rUKVwV2HvijphGQS2UmhUZewS9VgvxYIdgr+fG1A==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"bin\\\": {\\n+        \\\"tree-kill\\\": \\\"cli.js\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/ts-api-utils\\\": {\\n+      \\\"version\\\": \\\"1.4.3\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/ts-api-utils/-/ts-api-utils-1.4.3.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-i3eMG77UTMD0hZhgRS562pv83RC6ukSAC2GMNWc+9dieh/+jDM5u5YG+NHX6VNDRHQcHwmsTHctP9LhbC3WxVw==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=16\\\"\\n+      },\\n+      \\\"peerDependencies\\\": {\\n+        \\\"typescript\\\": \\\">=4.2.0\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/ts-interface-checker\\\": {\\n+      \\\"version\\\": \\\"0.1.13\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/ts-interface-checker/-/ts-interface-checker-0.1.13.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-Y/arvbn+rrz3JCKl9C4kVNfTfSm2/mEp5FSz5EsZSANGPSlQrpRI5M4PKF+mJnE52jOO90PnPSc3Ur3bTQw0gA==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"Apache-2.0\\\"\\n+    },\\n+    \\\"node_modules/tsup\\\": {\\n+      \\\"version\\\": \\\"8.5.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/tsup/-/tsup-8.5.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-VmBp77lWNQq6PfuMqCHD3xWl22vEoWsKajkF8t+yMBawlUS8JzEI+vOVMeuNZIuMML8qXRizFKi9oD5glKQVcQ==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"bundle-require\\\": \\\"^5.1.0\\\",\\n+        \\\"cac\\\": \\\"^6.7.14\\\",\\n+        \\\"chokidar\\\": \\\"^4.0.3\\\",\\n+        \\\"consola\\\": \\\"^3.4.0\\\",\\n+        \\\"debug\\\": \\\"^4.4.0\\\",\\n+        \\\"esbuild\\\": \\\"^0.25.0\\\",\\n+        \\\"fix-dts-default-cjs-exports\\\": \\\"^1.0.0\\\",\\n+        \\\"joycon\\\": \\\"^3.1.1\\\",\\n+        \\\"picocolors\\\": \\\"^1.1.1\\\",\\n+        \\\"postcss-load-config\\\": \\\"^6.0.1\\\",\\n+        \\\"resolve-from\\\": \\\"^5.0.0\\\",\\n+        \\\"rollup\\\": \\\"^4.34.8\\\",\\n+        \\\"source-map\\\": \\\"0.8.0-beta.0\\\",\\n+        \\\"sucrase\\\": \\\"^3.35.0\\\",\\n+        \\\"tinyexec\\\": \\\"^0.3.2\\\",\\n+        \\\"tinyglobby\\\": \\\"^0.2.11\\\",\\n+        \\\"tree-kill\\\": \\\"^1.2.2\\\"\\n+      },\\n+      \\\"bin\\\": {\\n+        \\\"tsup\\\": \\\"dist/cli-default.js\\\",\\n+        \\\"tsup-node\\\": \\\"dist/cli-node.js\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=18\\\"\\n+      },\\n+      \\\"peerDependencies\\\": {\\n+        \\\"@microsoft/api-extractor\\\": \\\"^7.36.0\\\",\\n+        \\\"@swc/core\\\": \\\"^1\\\",\\n+        \\\"postcss\\\": \\\"^8.4.12\\\",\\n+        \\\"typescript\\\": \\\">=4.5.0\\\"\\n+      },\\n+      \\\"peerDependenciesMeta\\\": {\\n+        \\\"@microsoft/api-extractor\\\": {\\n+          \\\"optional\\\": true\\n+        },\\n+        \\\"@swc/core\\\": {\\n+          \\\"optional\\\": true\\n+        },\\n+        \\\"postcss\\\": {\\n+          \\\"optional\\\": true\\n+        },\\n+        \\\"typescript\\\": {\\n+          \\\"optional\\\": true\\n+        }\\n+      }\\n+    },\\n+    \\\"node_modules/tsup/node_modules/resolve-from\\\": {\\n+      \\\"version\\\": \\\"5.0.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/resolve-from/-/resolve-from-5.0.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-qYg9KP24dD5qka9J47d0aVky0N+b4fTU89LN9iDnjB5waksiC49rvMB0PrUJQGoTmH50XPiqOvAjDfaijGxYZw==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=8\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/type-check\\\": {\\n+      \\\"version\\\": \\\"0.4.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/type-check/-/type-check-0.4.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-XleUoc9uwGXqjWwXaUTZAmzMcFZ5858QA2vvx1Ur5xIcixXIP+8LnFDgRplU30us6teqdlskFfu+ae4K79Ooew==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"prelude-ls\\\": \\\"^1.2.1\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">= 0.8.0\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/type-detect\\\": {\\n+      \\\"version\\\": \\\"4.1.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/type-detect/-/type-detect-4.1.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-Acylog8/luQ8L7il+geoSxhEkazvkslg7PSNKOX59mbB9cOveP5aq9h74Y7YU8yDpJwetzQQrfIwtf4Wp4LKcw==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=4\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/type-fest\\\": {\\n+      \\\"version\\\": \\\"0.20.2\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/type-fest/-/type-fest-0.20.2.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-Ne+eE4r0/iWnpAxD852z3A+N0Bt5RN//NjJwRd2VFHEmrywxf5vsZlh4R6lixl6B+wz/8d+maTSAkN1FIkI3LQ==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"(MIT OR CC0-1.0)\\\",\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=10\\\"\\n+      },\\n+      \\\"funding\\\": {\\n+        \\\"url\\\": \\\"https://github.com/sponsors/sindresorhus\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/typescript\\\": {\\n+      \\\"version\\\": \\\"5.8.3\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/typescript/-/typescript-5.8.3.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-p1diW6TqL9L07nNxvRMM7hMMw4c5XOo/1ibL4aAIGmSAt9slTE1Xgw5KWuof2uTOvCg9BY7ZRi+GaF+7sfgPeQ==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"Apache-2.0\\\",\\n+      \\\"bin\\\": {\\n+        \\\"tsc\\\": \\\"bin/tsc\\\",\\n+        \\\"tsserver\\\": \\\"bin/tsserver\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=14.17\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/ufo\\\": {\\n+      \\\"version\\\": \\\"1.6.1\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/ufo/-/ufo-1.6.1.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-9a4/uxlTWJ4+a5i0ooc1rU7C7YOw3wT+UGqdeNNHWnOF9qcMBgLRS+4IYUqbczewFx4mLEig6gawh7X6mFlEkA==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\"\\n+    },\\n+    \\\"node_modules/undici-types\\\": {\\n+      \\\"version\\\": \\\"6.21.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/undici-types/-/undici-types-6.21.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-iwDZqg0QAGrg9Rav5H4n0M64c3mkR59cJ6wQp+7C4nI0gsmExaedaYLNO44eT4AtBBwjbTiGPMlt2Md0T9H9JQ==\\\",\\n+      \\\"license\\\": \\\"MIT\\\"\\n+    },\\n+    \\\"node_modules/uri-js\\\": {\\n+      \\\"version\\\": \\\"4.4.1\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/uri-js/-/uri-js-4.4.1.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-7rKUyy33Q1yc98pQ1DAmLtwX109F7TIfWlW1Ydo8Wl1ii1SeHieeh0HHfPeL2fMXK6z0s8ecKs9frCuLJvndBg==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"BSD-2-Clause\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"punycode\\\": \\\"^2.1.0\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/vite\\\": {\\n+      \\\"version\\\": \\\"5.4.19\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/vite/-/vite-5.4.19.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-qO3aKv3HoQC8QKiNSTuUM1l9o/XX3+c+VTgLHbJWHZGeTPVAg2XwazI9UWzoxjIJCGCV2zU60uqMzjeLZuULqA==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"esbuild\\\": \\\"^0.21.3\\\",\\n+        \\\"postcss\\\": \\\"^8.4.43\\\",\\n+        \\\"rollup\\\": \\\"^4.20.0\\\"\\n+      },\\n+      \\\"bin\\\": {\\n+        \\\"vite\\\": \\\"bin/vite.js\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\"^18.0.0 || >=20.0.0\\\"\\n+      },\\n+      \\\"funding\\\": {\\n+        \\\"url\\\": \\\"https://github.com/vitejs/vite?sponsor=1\\\"\\n+      },\\n+      \\\"optionalDependencies\\\": {\\n+        \\\"fsevents\\\": \\\"~2.3.3\\\"\\n+      },\\n+      \\\"peerDependencies\\\": {\\n+        \\\"@types/node\\\": \\\"^18.0.0 || >=20.0.0\\\",\\n+        \\\"less\\\": \\\"*\\\",\\n+        \\\"lightningcss\\\": \\\"^1.21.0\\\",\\n+        \\\"sass\\\": \\\"*\\\",\\n+        \\\"sass-embedded\\\": \\\"*\\\",\\n+        \\\"stylus\\\": \\\"*\\\",\\n+        \\\"sugarss\\\": \\\"*\\\",\\n+        \\\"terser\\\": \\\"^5.4.0\\\"\\n+      },\\n+      \\\"peerDependenciesMeta\\\": {\\n+        \\\"@types/node\\\": {\\n+          \\\"optional\\\": true\\n+        },\\n+        \\\"less\\\": {\\n+          \\\"optional\\\": true\\n+        },\\n+        \\\"lightningcss\\\": {\\n+          \\\"optional\\\": true\\n+        },\\n+        \\\"sass\\\": {\\n+          \\\"optional\\\": true\\n+        },\\n+        \\\"sass-embedded\\\": {\\n+          \\\"optional\\\": true\\n+        },\\n+        \\\"stylus\\\": {\\n+          \\\"optional\\\": true\\n+        },\\n+        \\\"sugarss\\\": {\\n+          \\\"optional\\\": true\\n+        },\\n+        \\\"terser\\\": {\\n+          \\\"optional\\\": true\\n+        }\\n+      }\\n+    },\\n+    \\\"node_modules/vite-node\\\": {\\n+      \\\"version\\\": \\\"1.6.1\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/vite-node/-/vite-node-1.6.1.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-YAXkfvGtuTzwWbDSACdJSg4A4DZiAqckWe90Zapc/sEX3XvHcw1NdurM/6od8J207tSDqNbSsgdCacBgvJKFuA==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"cac\\\": \\\"^6.7.14\\\",\\n+        \\\"debug\\\": \\\"^4.3.4\\\",\\n+        \\\"pathe\\\": \\\"^1.1.1\\\",\\n+        \\\"picocolors\\\": \\\"^1.0.0\\\",\\n+        \\\"vite\\\": \\\"^5.0.0\\\"\\n+      },\\n+      \\\"bin\\\": {\\n+        \\\"vite-node\\\": \\\"vite-node.mjs\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\"^18.0.0 || >=20.0.0\\\"\\n+      },\\n+      \\\"funding\\\": {\\n+        \\\"url\\\": \\\"https://opencollective.com/vitest\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/vite-node/node_modules/pathe\\\": {\\n+      \\\"version\\\": \\\"1.1.2\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/pathe/-/pathe-1.1.2.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-whLdWMYL2TwI08hn8/ZqAbrVemu0LNaNNJZX73O6qaIdCTfXutsLhMkjdENX0qhsQ9uIimo4/aQOmXkoon2nDQ==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\"\\n+    },\\n+    \\\"node_modules/vite/node_modules/@esbuild/aix-ppc64\\\": {\\n+      \\\"version\\\": \\\"0.21.5\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@esbuild/aix-ppc64/-/aix-ppc64-0.21.5.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-1SDgH6ZSPTlggy1yI6+Dbkiz8xzpHJEVAlF/AM1tHPLsf5STom9rwtjE4hKAF20FfXXNTFqEYXyJNWh1GiZedQ==\\\",\\n+      \\\"cpu\\\": [\\n+        \\\"ppc64\\\"\\n+      ],\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"optional\\\": true,\\n+      \\\"os\\\": [\\n+        \\\"aix\\\"\\n+      ],\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=12\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/vite/node_modules/@esbuild/android-arm\\\": {\\n+      \\\"version\\\": \\\"0.21.5\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@esbuild/android-arm/-/android-arm-0.21.5.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-vCPvzSjpPHEi1siZdlvAlsPxXl7WbOVUBBAowWug4rJHb68Ox8KualB+1ocNvT5fjv6wpkX6o/iEpbDrf68zcg==\\\",\\n+      \\\"cpu\\\": [\\n+        \\\"arm\\\"\\n+      ],\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"optional\\\": true,\\n+      \\\"os\\\": [\\n+        \\\"android\\\"\\n+      ],\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=12\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/vite/node_modules/@esbuild/android-arm64\\\": {\\n+      \\\"version\\\": \\\"0.21.5\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@esbuild/android-arm64/-/android-arm64-0.21.5.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-c0uX9VAUBQ7dTDCjq+wdyGLowMdtR/GoC2U5IYk/7D1H1JYC0qseD7+11iMP2mRLN9RcCMRcjC4YMclCzGwS/A==\\\",\\n+      \\\"cpu\\\": [\\n+        \\\"arm64\\\"\\n+      ],\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"optional\\\": true,\\n+      \\\"os\\\": [\\n+        \\\"android\\\"\\n+      ],\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=12\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/vite/node_modules/@esbuild/android-x64\\\": {\\n+      \\\"version\\\": \\\"0.21.5\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@esbuild/android-x64/-/android-x64-0.21.5.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-D7aPRUUNHRBwHxzxRvp856rjUHRFW1SdQATKXH2hqA0kAZb1hKmi02OpYRacl0TxIGz/ZmXWlbZgjwWYaCakTA==\\\",\\n+      \\\"cpu\\\": [\\n+        \\\"x64\\\"\\n+      ],\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"optional\\\": true,\\n+      \\\"os\\\": [\\n+        \\\"android\\\"\\n+      ],\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=12\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/vite/node_modules/@esbuild/darwin-arm64\\\": {\\n+      \\\"version\\\": \\\"0.21.5\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@esbuild/darwin-arm64/-/darwin-arm64-0.21.5.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-DwqXqZyuk5AiWWf3UfLiRDJ5EDd49zg6O9wclZ7kUMv2WRFr4HKjXp/5t8JZ11QbQfUS6/cRCKGwYhtNAY88kQ==\\\",\\n+      \\\"cpu\\\": [\\n+        \\\"arm64\\\"\\n+      ],\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"optional\\\": true,\\n+      \\\"os\\\": [\\n+        \\\"darwin\\\"\\n+      ],\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=12\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/vite/node_modules/@esbuild/darwin-x64\\\": {\\n+      \\\"version\\\": \\\"0.21.5\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@esbuild/darwin-x64/-/darwin-x64-0.21.5.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-se/JjF8NlmKVG4kNIuyWMV/22ZaerB+qaSi5MdrXtd6R08kvs2qCN4C09miupktDitvh8jRFflwGFBQcxZRjbw==\\\",\\n+      \\\"cpu\\\": [\\n+        \\\"x64\\\"\\n+      ],\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"optional\\\": true,\\n+      \\\"os\\\": [\\n+        \\\"darwin\\\"\\n+      ],\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=12\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/vite/node_modules/@esbuild/freebsd-arm64\\\": {\\n+      \\\"version\\\": \\\"0.21.5\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@esbuild/freebsd-arm64/-/freebsd-arm64-0.21.5.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-5JcRxxRDUJLX8JXp/wcBCy3pENnCgBR9bN6JsY4OmhfUtIHe3ZW0mawA7+RDAcMLrMIZaf03NlQiX9DGyB8h4g==\\\",\\n+      \\\"cpu\\\": [\\n+        \\\"arm64\\\"\\n+      ],\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"optional\\\": true,\\n+      \\\"os\\\": [\\n+        \\\"freebsd\\\"\\n+      ],\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=12\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/vite/node_modules/@esbuild/freebsd-x64\\\": {\\n+      \\\"version\\\": \\\"0.21.5\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@esbuild/freebsd-x64/-/freebsd-x64-0.21.5.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-J95kNBj1zkbMXtHVH29bBriQygMXqoVQOQYA+ISs0/2l3T9/kj42ow2mpqerRBxDJnmkUDCaQT/dfNXWX/ZZCQ==\\\",\\n+      \\\"cpu\\\": [\\n+        \\\"x64\\\"\\n+      ],\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"optional\\\": true,\\n+      \\\"os\\\": [\\n+        \\\"freebsd\\\"\\n+      ],\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=12\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/vite/node_modules/@esbuild/linux-arm\\\": {\\n+      \\\"version\\\": \\\"0.21.5\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@esbuild/linux-arm/-/linux-arm-0.21.5.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-bPb5AHZtbeNGjCKVZ9UGqGwo8EUu4cLq68E95A53KlxAPRmUyYv2D6F0uUI65XisGOL1hBP5mTronbgo+0bFcA==\\\",\\n+      \\\"cpu\\\": [\\n+        \\\"arm\\\"\\n+      ],\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"optional\\\": true,\\n+      \\\"os\\\": [\\n+        \\\"linux\\\"\\n+      ],\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=12\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/vite/node_modules/@esbuild/linux-arm64\\\": {\\n+      \\\"version\\\": \\\"0.21.5\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@esbuild/linux-arm64/-/linux-arm64-0.21.5.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-ibKvmyYzKsBeX8d8I7MH/TMfWDXBF3db4qM6sy+7re0YXya+K1cem3on9XgdT2EQGMu4hQyZhan7TeQ8XkGp4Q==\\\",\\n+      \\\"cpu\\\": [\\n+        \\\"arm64\\\"\\n+      ],\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"optional\\\": true,\\n+      \\\"os\\\": [\\n+        \\\"linux\\\"\\n+      ],\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=12\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/vite/node_modules/@esbuild/linux-ia32\\\": {\\n+      \\\"version\\\": \\\"0.21.5\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@esbuild/linux-ia32/-/linux-ia32-0.21.5.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-YvjXDqLRqPDl2dvRODYmmhz4rPeVKYvppfGYKSNGdyZkA01046pLWyRKKI3ax8fbJoK5QbxblURkwK/MWY18Tg==\\\",\\n+      \\\"cpu\\\": [\\n+        \\\"ia32\\\"\\n+      ],\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"optional\\\": true,\\n+      \\\"os\\\": [\\n+        \\\"linux\\\"\\n+      ],\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=12\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/vite/node_modules/@esbuild/linux-loong64\\\": {\\n+      \\\"version\\\": \\\"0.21.5\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@esbuild/linux-loong64/-/linux-loong64-0.21.5.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-uHf1BmMG8qEvzdrzAqg2SIG/02+4/DHB6a9Kbya0XDvwDEKCoC8ZRWI5JJvNdUjtciBGFQ5PuBlpEOXQj+JQSg==\\\",\\n+      \\\"cpu\\\": [\\n+        \\\"loong64\\\"\\n+      ],\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"optional\\\": true,\\n+      \\\"os\\\": [\\n+        \\\"linux\\\"\\n+      ],\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=12\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/vite/node_modules/@esbuild/linux-mips64el\\\": {\\n+      \\\"version\\\": \\\"0.21.5\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@esbuild/linux-mips64el/-/linux-mips64el-0.21.5.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-IajOmO+KJK23bj52dFSNCMsz1QP1DqM6cwLUv3W1QwyxkyIWecfafnI555fvSGqEKwjMXVLokcV5ygHW5b3Jbg==\\\",\\n+      \\\"cpu\\\": [\\n+        \\\"mips64el\\\"\\n+      ],\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"optional\\\": true,\\n+      \\\"os\\\": [\\n+        \\\"linux\\\"\\n+      ],\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=12\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/vite/node_modules/@esbuild/linux-ppc64\\\": {\\n+      \\\"version\\\": \\\"0.21.5\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@esbuild/linux-ppc64/-/linux-ppc64-0.21.5.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-1hHV/Z4OEfMwpLO8rp7CvlhBDnjsC3CttJXIhBi+5Aj5r+MBvy4egg7wCbe//hSsT+RvDAG7s81tAvpL2XAE4w==\\\",\\n+      \\\"cpu\\\": [\\n+        \\\"ppc64\\\"\\n+      ],\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"optional\\\": true,\\n+      \\\"os\\\": [\\n+        \\\"linux\\\"\\n+      ],\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=12\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/vite/node_modules/@esbuild/linux-riscv64\\\": {\\n+      \\\"version\\\": \\\"0.21.5\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@esbuild/linux-riscv64/-/linux-riscv64-0.21.5.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-2HdXDMd9GMgTGrPWnJzP2ALSokE/0O5HhTUvWIbD3YdjME8JwvSCnNGBnTThKGEB91OZhzrJ4qIIxk/SBmyDDA==\\\",\\n+      \\\"cpu\\\": [\\n+        \\\"riscv64\\\"\\n+      ],\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"optional\\\": true,\\n+      \\\"os\\\": [\\n+        \\\"linux\\\"\\n+      ],\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=12\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/vite/node_modules/@esbuild/linux-s390x\\\": {\\n+      \\\"version\\\": \\\"0.21.5\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@esbuild/linux-s390x/-/linux-s390x-0.21.5.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-zus5sxzqBJD3eXxwvjN1yQkRepANgxE9lgOW2qLnmr8ikMTphkjgXu1HR01K4FJg8h1kEEDAqDcZQtbrRnB41A==\\\",\\n+      \\\"cpu\\\": [\\n+        \\\"s390x\\\"\\n+      ],\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"optional\\\": true,\\n+      \\\"os\\\": [\\n+        \\\"linux\\\"\\n+      ],\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=12\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/vite/node_modules/@esbuild/linux-x64\\\": {\\n+      \\\"version\\\": \\\"0.21.5\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@esbuild/linux-x64/-/linux-x64-0.21.5.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-1rYdTpyv03iycF1+BhzrzQJCdOuAOtaqHTWJZCWvijKD2N5Xu0TtVC8/+1faWqcP9iBCWOmjmhoH94dH82BxPQ==\\\",\\n+      \\\"cpu\\\": [\\n+        \\\"x64\\\"\\n+      ],\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"optional\\\": true,\\n+      \\\"os\\\": [\\n+        \\\"linux\\\"\\n+      ],\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=12\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/vite/node_modules/@esbuild/netbsd-x64\\\": {\\n+      \\\"version\\\": \\\"0.21.5\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@esbuild/netbsd-x64/-/netbsd-x64-0.21.5.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-Woi2MXzXjMULccIwMnLciyZH4nCIMpWQAs049KEeMvOcNADVxo0UBIQPfSmxB3CWKedngg7sWZdLvLczpe0tLg==\\\",\\n+      \\\"cpu\\\": [\\n+        \\\"x64\\\"\\n+      ],\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"optional\\\": true,\\n+      \\\"os\\\": [\\n+        \\\"netbsd\\\"\\n+      ],\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=12\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/vite/node_modules/@esbuild/openbsd-x64\\\": {\\n+      \\\"version\\\": \\\"0.21.5\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@esbuild/openbsd-x64/-/openbsd-x64-0.21.5.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-HLNNw99xsvx12lFBUwoT8EVCsSvRNDVxNpjZ7bPn947b8gJPzeHWyNVhFsaerc0n3TsbOINvRP2byTZ5LKezow==\\\",\\n+      \\\"cpu\\\": [\\n+        \\\"x64\\\"\\n+      ],\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"optional\\\": true,\\n+      \\\"os\\\": [\\n+        \\\"openbsd\\\"\\n+      ],\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=12\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/vite/node_modules/@esbuild/sunos-x64\\\": {\\n+      \\\"version\\\": \\\"0.21.5\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@esbuild/sunos-x64/-/sunos-x64-0.21.5.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-6+gjmFpfy0BHU5Tpptkuh8+uw3mnrvgs+dSPQXQOv3ekbordwnzTVEb4qnIvQcYXq6gzkyTnoZ9dZG+D4garKg==\\\",\\n+      \\\"cpu\\\": [\\n+        \\\"x64\\\"\\n+      ],\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"optional\\\": true,\\n+      \\\"os\\\": [\\n+        \\\"sunos\\\"\\n+      ],\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=12\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/vite/node_modules/@esbuild/win32-arm64\\\": {\\n+      \\\"version\\\": \\\"0.21.5\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@esbuild/win32-arm64/-/win32-arm64-0.21.5.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-Z0gOTd75VvXqyq7nsl93zwahcTROgqvuAcYDUr+vOv8uHhNSKROyU961kgtCD1e95IqPKSQKH7tBTslnS3tA8A==\\\",\\n+      \\\"cpu\\\": [\\n+        \\\"arm64\\\"\\n+      ],\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"optional\\\": true,\\n+      \\\"os\\\": [\\n+        \\\"win32\\\"\\n+      ],\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=12\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/vite/node_modules/@esbuild/win32-ia32\\\": {\\n+      \\\"version\\\": \\\"0.21.5\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@esbuild/win32-ia32/-/win32-ia32-0.21.5.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-SWXFF1CL2RVNMaVs+BBClwtfZSvDgtL//G/smwAc5oVK/UPu2Gu9tIaRgFmYFFKrmg3SyAjSrElf0TiJ1v8fYA==\\\",\\n+      \\\"cpu\\\": [\\n+        \\\"ia32\\\"\\n+      ],\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"optional\\\": true,\\n+      \\\"os\\\": [\\n+        \\\"win32\\\"\\n+      ],\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=12\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/vite/node_modules/@esbuild/win32-x64\\\": {\\n+      \\\"version\\\": \\\"0.21.5\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/@esbuild/win32-x64/-/win32-x64-0.21.5.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-tQd/1efJuzPC6rCFwEvLtci/xNFcTZknmXs98FYDfGE4wP9ClFV98nyKrzJKVPMhdDnjzLhdUyMX4PsQAPjwIw==\\\",\\n+      \\\"cpu\\\": [\\n+        \\\"x64\\\"\\n+      ],\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"optional\\\": true,\\n+      \\\"os\\\": [\\n+        \\\"win32\\\"\\n+      ],\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=12\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/vite/node_modules/esbuild\\\": {\\n+      \\\"version\\\": \\\"0.21.5\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/esbuild/-/esbuild-0.21.5.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-mg3OPMV4hXywwpoDxu3Qda5xCKQi+vCTZq8S9J/EpkhB2HzKXq4SNFZE3+NK93JYxc8VMSep+lOUSC/RVKaBqw==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"hasInstallScript\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"bin\\\": {\\n+        \\\"esbuild\\\": \\\"bin/esbuild\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=12\\\"\\n+      },\\n+      \\\"optionalDependencies\\\": {\\n+        \\\"@esbuild/aix-ppc64\\\": \\\"0.21.5\\\",\\n+        \\\"@esbuild/android-arm\\\": \\\"0.21.5\\\",\\n+        \\\"@esbuild/android-arm64\\\": \\\"0.21.5\\\",\\n+        \\\"@esbuild/android-x64\\\": \\\"0.21.5\\\",\\n+        \\\"@esbuild/darwin-arm64\\\": \\\"0.21.5\\\",\\n+        \\\"@esbuild/darwin-x64\\\": \\\"0.21.5\\\",\\n+        \\\"@esbuild/freebsd-arm64\\\": \\\"0.21.5\\\",\\n+        \\\"@esbuild/freebsd-x64\\\": \\\"0.21.5\\\",\\n+        \\\"@esbuild/linux-arm\\\": \\\"0.21.5\\\",\\n+        \\\"@esbuild/linux-arm64\\\": \\\"0.21.5\\\",\\n+        \\\"@esbuild/linux-ia32\\\": \\\"0.21.5\\\",\\n+        \\\"@esbuild/linux-loong64\\\": \\\"0.21.5\\\",\\n+        \\\"@esbuild/linux-mips64el\\\": \\\"0.21.5\\\",\\n+        \\\"@esbuild/linux-ppc64\\\": \\\"0.21.5\\\",\\n+        \\\"@esbuild/linux-riscv64\\\": \\\"0.21.5\\\",\\n+        \\\"@esbuild/linux-s390x\\\": \\\"0.21.5\\\",\\n+        \\\"@esbuild/linux-x64\\\": \\\"0.21.5\\\",\\n+        \\\"@esbuild/netbsd-x64\\\": \\\"0.21.5\\\",\\n+        \\\"@esbuild/openbsd-x64\\\": \\\"0.21.5\\\",\\n+        \\\"@esbuild/sunos-x64\\\": \\\"0.21.5\\\",\\n+        \\\"@esbuild/win32-arm64\\\": \\\"0.21.5\\\",\\n+        \\\"@esbuild/win32-ia32\\\": \\\"0.21.5\\\",\\n+        \\\"@esbuild/win32-x64\\\": \\\"0.21.5\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/vitest\\\": {\\n+      \\\"version\\\": \\\"1.6.1\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/vitest/-/vitest-1.6.1.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-Ljb1cnSJSivGN0LqXd/zmDbWEM0RNNg2t1QW/XUhYl/qPqyu7CsqeWtqQXHVaJsecLPuDoak2oJcZN2QoRIOag==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"@vitest/expect\\\": \\\"1.6.1\\\",\\n+        \\\"@vitest/runner\\\": \\\"1.6.1\\\",\\n+        \\\"@vitest/snapshot\\\": \\\"1.6.1\\\",\\n+        \\\"@vitest/spy\\\": \\\"1.6.1\\\",\\n+        \\\"@vitest/utils\\\": \\\"1.6.1\\\",\\n+        \\\"acorn-walk\\\": \\\"^8.3.2\\\",\\n+        \\\"chai\\\": \\\"^4.3.10\\\",\\n+        \\\"debug\\\": \\\"^4.3.4\\\",\\n+        \\\"execa\\\": \\\"^8.0.1\\\",\\n+        \\\"local-pkg\\\": \\\"^0.5.0\\\",\\n+        \\\"magic-string\\\": \\\"^0.30.5\\\",\\n+        \\\"pathe\\\": \\\"^1.1.1\\\",\\n+        \\\"picocolors\\\": \\\"^1.0.0\\\",\\n+        \\\"std-env\\\": \\\"^3.5.0\\\",\\n+        \\\"strip-literal\\\": \\\"^2.0.0\\\",\\n+        \\\"tinybench\\\": \\\"^2.5.1\\\",\\n+        \\\"tinypool\\\": \\\"^0.8.3\\\",\\n+        \\\"vite\\\": \\\"^5.0.0\\\",\\n+        \\\"vite-node\\\": \\\"1.6.1\\\",\\n+        \\\"why-is-node-running\\\": \\\"^2.2.2\\\"\\n+      },\\n+      \\\"bin\\\": {\\n+        \\\"vitest\\\": \\\"vitest.mjs\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\"^18.0.0 || >=20.0.0\\\"\\n+      },\\n+      \\\"funding\\\": {\\n+        \\\"url\\\": \\\"https://opencollective.com/vitest\\\"\\n+      },\\n+      \\\"peerDependencies\\\": {\\n+        \\\"@edge-runtime/vm\\\": \\\"*\\\",\\n+        \\\"@types/node\\\": \\\"^18.0.0 || >=20.0.0\\\",\\n+        \\\"@vitest/browser\\\": \\\"1.6.1\\\",\\n+        \\\"@vitest/ui\\\": \\\"1.6.1\\\",\\n+        \\\"happy-dom\\\": \\\"*\\\",\\n+        \\\"jsdom\\\": \\\"*\\\"\\n+      },\\n+      \\\"peerDependenciesMeta\\\": {\\n+        \\\"@edge-runtime/vm\\\": {\\n+          \\\"optional\\\": true\\n+        },\\n+        \\\"@types/node\\\": {\\n+          \\\"optional\\\": true\\n+        },\\n+        \\\"@vitest/browser\\\": {\\n+          \\\"optional\\\": true\\n+        },\\n+        \\\"@vitest/ui\\\": {\\n+          \\\"optional\\\": true\\n+        },\\n+        \\\"happy-dom\\\": {\\n+          \\\"optional\\\": true\\n+        },\\n+        \\\"jsdom\\\": {\\n+          \\\"optional\\\": true\\n+        }\\n+      }\\n+    },\\n+    \\\"node_modules/vitest/node_modules/pathe\\\": {\\n+      \\\"version\\\": \\\"1.1.2\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/pathe/-/pathe-1.1.2.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-whLdWMYL2TwI08hn8/ZqAbrVemu0LNaNNJZX73O6qaIdCTfXutsLhMkjdENX0qhsQ9uIimo4/aQOmXkoon2nDQ==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\"\\n+    },\\n+    \\\"node_modules/webidl-conversions\\\": {\\n+      \\\"version\\\": \\\"4.0.2\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/webidl-conversions/-/webidl-conversions-4.0.2.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-YQ+BmxuTgd6UXZW3+ICGfyqRyHXVlD5GtQr5+qjiNW7bF0cqrzX500HVXPBOvgXb5YnzDd+h0zqyv61KUD7+Sg==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"BSD-2-Clause\\\"\\n+    },\\n+    \\\"node_modules/whatwg-url\\\": {\\n+      \\\"version\\\": \\\"7.1.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/whatwg-url/-/whatwg-url-7.1.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-WUu7Rg1DroM7oQvGWfOiAK21n74Gg+T4elXEQYkOhtyLeWiJFoOGLXPKI/9gzIie9CtwVLm8wtw6YJdKyxSjeg==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"lodash.sortby\\\": \\\"^4.7.0\\\",\\n+        \\\"tr46\\\": \\\"^1.0.1\\\",\\n+        \\\"webidl-conversions\\\": \\\"^4.0.2\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/which\\\": {\\n+      \\\"version\\\": \\\"2.0.2\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/which/-/which-2.0.2.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"ISC\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"isexe\\\": \\\"^2.0.0\\\"\\n+      },\\n+      \\\"bin\\\": {\\n+        \\\"node-which\\\": \\\"bin/node-which\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">= 8\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/why-is-node-running\\\": {\\n+      \\\"version\\\": \\\"2.3.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/why-is-node-running/-/why-is-node-running-2.3.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-hUrmaWBdVDcxvYqnyh09zunKzROWjbZTiNy8dBEjkS7ehEDQibXJ7XvlmtbwuTclUiIyN+CyXQD4Vmko8fNm8w==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"siginfo\\\": \\\"^2.0.0\\\",\\n+        \\\"stackback\\\": \\\"0.0.2\\\"\\n+      },\\n+      \\\"bin\\\": {\\n+        \\\"why-is-node-running\\\": \\\"cli.js\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=8\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/word-wrap\\\": {\\n+      \\\"version\\\": \\\"1.2.5\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/word-wrap/-/word-wrap-1.2.5.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-BN22B5eaMMI9UMtjrGd5g5eCYPpCPDUy0FJXbYsaT5zYxjFOckS53SQDE3pWkVoWpHXVb3BrYcEN4Twa55B5cA==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=0.10.0\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/wrap-ansi\\\": {\\n+      \\\"version\\\": \\\"8.1.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-8.1.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-si7QWI6zUMq56bESFvagtmzMdGOtoxfR+Sez11Mobfc7tm+VkUckk9bW2UeffTGVUbOksxmSw0AA2gs8g71NCQ==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"ansi-styles\\\": \\\"^6.1.0\\\",\\n+        \\\"string-width\\\": \\\"^5.0.1\\\",\\n+        \\\"strip-ansi\\\": \\\"^7.0.1\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=12\\\"\\n+      },\\n+      \\\"funding\\\": {\\n+        \\\"url\\\": \\\"https://github.com/chalk/wrap-ansi?sponsor=1\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/wrap-ansi-cjs\\\": {\\n+      \\\"name\\\": \\\"wrap-ansi\\\",\\n+      \\\"version\\\": \\\"7.0.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-7.0.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"ansi-styles\\\": \\\"^4.0.0\\\",\\n+        \\\"string-width\\\": \\\"^4.1.0\\\",\\n+        \\\"strip-ansi\\\": \\\"^6.0.0\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=10\\\"\\n+      },\\n+      \\\"funding\\\": {\\n+        \\\"url\\\": \\\"https://github.com/chalk/wrap-ansi?sponsor=1\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/wrap-ansi-cjs/node_modules/emoji-regex\\\": {\\n+      \\\"version\\\": \\\"8.0.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\"\\n+    },\\n+    \\\"node_modules/wrap-ansi-cjs/node_modules/string-width\\\": {\\n+      \\\"version\\\": \\\"4.2.3\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"emoji-regex\\\": \\\"^8.0.0\\\",\\n+        \\\"is-fullwidth-code-point\\\": \\\"^3.0.0\\\",\\n+        \\\"strip-ansi\\\": \\\"^6.0.1\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=8\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/wrap-ansi/node_modules/ansi-regex\\\": {\\n+      \\\"version\\\": \\\"6.1.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/ansi-regex/-/ansi-regex-6.1.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-7HSX4QQb4CspciLpVFwyRe79O3xsIZDDLER21kERQ71oaPodF8jL725AgJMFAYbooIqolJoRLuM81SpeUkpkvA==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=12\\\"\\n+      },\\n+      \\\"funding\\\": {\\n+        \\\"url\\\": \\\"https://github.com/chalk/ansi-regex?sponsor=1\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/wrap-ansi/node_modules/ansi-styles\\\": {\\n+      \\\"version\\\": \\\"6.2.1\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/ansi-styles/-/ansi-styles-6.2.1.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-bN798gFfQX+viw3R7yrGWRqnrN2oRkEkUjjl4JNn4E8GxxbjtG3FbrEIIY3l8/hrwUwIeCZvi4QuOTP4MErVug==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=12\\\"\\n+      },\\n+      \\\"funding\\\": {\\n+        \\\"url\\\": \\\"https://github.com/chalk/ansi-styles?sponsor=1\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/wrap-ansi/node_modules/strip-ansi\\\": {\\n+      \\\"version\\\": \\\"7.1.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/strip-ansi/-/strip-ansi-7.1.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-iq6eVVI64nQQTRYq2KtEg2d2uU7LElhTJwsH4YzIHZshxlgZms/wIc4VoDQTlG/IvVIrBKG06CrZnp0qv7hkcQ==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"dependencies\\\": {\\n+        \\\"ansi-regex\\\": \\\"^6.0.1\\\"\\n+      },\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=12\\\"\\n+      },\\n+      \\\"funding\\\": {\\n+        \\\"url\\\": \\\"https://github.com/chalk/strip-ansi?sponsor=1\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/wrappy\\\": {\\n+      \\\"version\\\": \\\"1.0.2\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS1xUsZ3u7/IQO4wxtcFB4bgpQPRcR3QCvezPcQ==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"ISC\\\"\\n+    },\\n+    \\\"node_modules/yocto-queue\\\": {\\n+      \\\"version\\\": \\\"0.1.0\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/yocto-queue/-/yocto-queue-0.1.0.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-rVksvsnNCdJ/ohGc6xgPwyN8eheCxsiLM8mxuE/t/mOVqJewPuO1miLpTHQiRgTKCLexL4MeAFVagts7HmNZ2Q==\\\",\\n+      \\\"dev\\\": true,\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"engines\\\": {\\n+        \\\"node\\\": \\\">=10\\\"\\n+      },\\n+      \\\"funding\\\": {\\n+        \\\"url\\\": \\\"https://github.com/sponsors/sindresorhus\\\"\\n+      }\\n+    },\\n+    \\\"node_modules/zod\\\": {\\n+      \\\"version\\\": \\\"3.25.76\\\",\\n+      \\\"resolved\\\": \\\"https://registry.npmjs.org/zod/-/zod-3.25.76.tgz\\\",\\n+      \\\"integrity\\\": \\\"sha512-gzUt/qt81nXsFGKIFcC3YnfEAx5NkunCfnDlvuBSSFS02bcXu4Lmea0AFIUwbLWxWPx3d9p8S5QoaujKcNQxcQ==\\\",\\n+      \\\"license\\\": \\\"MIT\\\",\\n+      \\\"funding\\\": {\\n+        \\\"url\\\": \\\"https://github.com/sponsors/colinhacks\\\"\\n+      }\\n+    }\\n+  }\\n+}\\n\"\n+    },\n+    {\n+      \"filepath\": \"packages/orgata-framework/package.json\",\n+      \"oldHash\": \"\",\n+      \"newHash\": \"8d3cb6c5ba8371e34baa9f84826a52305b357a74\",\n+      \"timestamp\": \"2025-07-23T21:15:34.965Z\",\n+      \"changeType\": \"content\",\n+      \"gitDiff\": \"diff --git a/packages/orgata-framework/package.json b/packages/orgata-framework/package.json\\nnew file mode 100644\\nindex 0000000..8d3cb6c\\n--- /dev/null\\n+++ b/packages/orgata-framework/package.json\\n@@ -0,0 +1,56 @@\\n+{\\n+  \\\"name\\\": \\\"@orgata/framework\\\",\\n+  \\\"version\\\": \\\"0.1.0\\\",\\n+  \\\"description\\\": \\\"React-like framework for business process development with complete flexibility\\\",\\n+  \\\"main\\\": \\\"dist/index.js\\\",\\n+  \\\"types\\\": \\\"dist/index.d.ts\\\",\\n+  \\\"scripts\\\": {\\n+    \\\"build\\\": \\\"tsup\\\",\\n+    \\\"dev\\\": \\\"tsup --watch\\\",\\n+    \\\"test\\\": \\\"vitest\\\",\\n+    \\\"test:watch\\\": \\\"vitest --watch\\\",\\n+    \\\"lint\\\": \\\"eslint src --ext .ts\\\",\\n+    \\\"type-check\\\": \\\"tsc --noEmit\\\"\\n+  },\\n+  \\\"keywords\\\": [\\n+    \\\"business-process\\\",\\n+    \\\"workflow\\\",\\n+    \\\"framework\\\",\\n+    \\\"typescript\\\",\\n+    \\\"orgata\\\"\\n+  ],\\n+  \\\"author\\\": \\\"Orgata Team\\\",\\n+  \\\"license\\\": \\\"MIT\\\",\\n+  \\\"dependencies\\\": {\\n+    \\\"@types/node\\\": \\\"^20.0.0\\\",\\n+    \\\"eventemitter3\\\": \\\"^5.0.0\\\",\\n+    \\\"zod\\\": \\\"^3.22.0\\\",\\n+    \\\"immer\\\": \\\"^10.0.0\\\"\\n+  },\\n+  \\\"devDependencies\\\": {\\n+    \\\"typescript\\\": \\\"^5.0.0\\\",\\n+    \\\"vitest\\\": \\\"^1.0.0\\\",\\n+    \\\"tsup\\\": \\\"^8.0.0\\\",\\n+    \\\"eslint\\\": \\\"^8.0.0\\\",\\n+    \\\"@typescript-eslint/eslint-plugin\\\": \\\"^6.0.0\\\",\\n+    \\\"@typescript-eslint/parser\\\": \\\"^6.0.0\\\"\\n+  },\\n+  \\\"tsup\\\": {\\n+    \\\"entry\\\": [\\\"src/index.ts\\\"],\\n+    \\\"format\\\": [\\\"esm\\\", \\\"cjs\\\"],\\n+    \\\"dts\\\": true,\\n+    \\\"clean\\\": true,\\n+    \\\"sourcemap\\\": true\\n+  },\\n+  \\\"exports\\\": {\\n+    \\\".\\\": {\\n+      \\\"types\\\": \\\"./dist/index.d.ts\\\",\\n+      \\\"import\\\": \\\"./dist/index.js\\\",\\n+      \\\"require\\\": \\\"./dist/index.cjs\\\"\\n+    }\\n+  },\\n+  \\\"files\\\": [\\n+    \\\"dist\\\",\\n+    \\\"README.md\\\"\\n+  ]\\n+}\\n\\\\ No newline at end of file\\n\"\n+    },\n+    {\n+      \"filepath\": \"packages/orgata-framework/src/__tests__/Process.test.ts\",\n+      \"oldHash\": \"\",\n+      \"newHash\": \"f0bdb00521f6a19256323e5c5a269fa8703cb0f7\",\n+      \"timestamp\": \"2025-07-23T21:15:35.007Z\",\n+      \"changeType\": \"content\",\n+      \"gitDiff\": \"diff --git a/packages/orgata-framework/src/__tests__/Process.test.ts b/packages/orgata-framework/src/__tests__/Process.test.ts\\nnew file mode 100644\\nindex 0000000..f0bdb00\\n--- /dev/null\\n+++ b/packages/orgata-framework/src/__tests__/Process.test.ts\\n@@ -0,0 +1,333 @@\\n+/**\\n+ * Tests for Process class\\n+ * \\n+ * Verifies core framework functionality including:\\n+ * - Process lifecycle management\\n+ * - Flexible navigation (skip, go back, jump to step)\\n+ * - Immutable state management\\n+ * - Audit trail generation\\n+ */\\n+\\n+import { describe, it, expect, beforeEach } from 'vitest';\\n+import { Process, HumanStep, ProcessStatus, FieldType } from '../index';\\n+import type { ProcessContext, StepContext, StepResult } from '../types';\\n+\\n+// Test Process implementation\\n+class TestProcess extends Process {\\n+  constructor() {\\n+    super({\\n+      name: \\\"Test Process\\\",\\n+      layer: \\\"L0\\\",\\n+      estimatedDuration: \\\"1 hour\\\"\\n+    });\\n+    \\n+    this.addStep(new TestHumanStep('step1', 'Step 1'));\\n+    this.addStep(new TestHumanStep('step2', 'Step 2'));\\n+    this.addStep(new TestHumanStep('step3', 'Step 3'));\\n+  }\\n+  \\n+  async execute(context: ProcessContext) {\\n+    return await this.executeSteps(context);\\n+  }\\n+}\\n+\\n+// Test HumanStep implementation\\n+class TestHumanStep extends HumanStep {\\n+  constructor(id: string, name: string) {\\n+    super({\\n+      id,\\n+      name,\\n+      description: `Test step: ${name}`,\\n+      type: 'human',\\n+      model: {\\n+        fields: [{\\n+          id: 'testField',\\n+          name: 'testField',\\n+          type: FieldType.TEXT,\\n+          label: 'Test Field',\\n+          required: true,\\n+          validation: []\\n+        }],\\n+        layout: { type: 'single-column', columns: 1 },\\n+        validation: { strategy: 'on-submit', showErrorsOn: 'always' },\\n+        metadata: { version: '1.0', generatedFrom: 'test' }\\n+      },\\n+      view: {\\n+        type: 'form',\\n+        props: {},\\n+        styling: { className: 'test-form' },\\n+        behavior: { validation: { realTime: true, debounceMs: 300, showErrors: true } }\\n+      }\\n+    });\\n+  }\\n+  \\n+  protected async collectUserInput(context: StepContext): Promise<any> {\\n+    // Mock user input for testing\\n+    return { testField: `Input for ${this.name}` };\\n+  }\\n+}\\n+\\n+describe('Process', () => {\\n+  let process: TestProcess;\\n+  let mockContext: ProcessContext;\\n+  \\n+  beforeEach(() => {\\n+    process = new TestProcess();\\n+    mockContext = {\\n+      processId: 'test-process',\\n+      userId: 'test-user',\\n+      sessionId: 'test-session',\\n+      environment: 'development',\\n+      businessContext: {\\n+        industry: 'test',\\n+        businessSize: 'small',\\n+        organizationId: 'test-org',\\n+        currentProcesses: new Map(),\\n+        userRole: 'admin'\\n+      },\\n+      permissions: {\\n+        canSkipSteps: true,\\n+        canOverrideValidation: true,\\n+        canModifyProcess: true,\\n+        canViewAuditTrail: true,\\n+        allowedActions: ['all']\\n+      },\\n+      preferences: {\\n+        uiTheme: 'light',\\n+        language: 'en',\\n+        timezone: 'UTC',\\n+        notificationSettings: {\\n+          email: true,\\n+          inApp: true,\\n+          frequency: 'immediate'\\n+        }\\n+      }\\n+    };\\n+  });\\n+\\n+  describe('Process Lifecycle', () => {\\n+    it('should initialize with correct status', () => {\\n+      expect(process.getState().status).toBe(ProcessStatus.NOT_STARTED);\\n+      expect(process.isRunning()).toBe(false);\\n+      expect(process.isCompleted()).toBe(false);\\n+    });\\n+\\n+    it('should start process correctly', async () => {\\n+      await process.start(mockContext);\\n+      \\n+      expect(process.getState().status).toBe(ProcessStatus.RUNNING);\\n+      expect(process.isRunning()).toBe(true);\\n+      expect(process.getState().currentStepId).toBe('step1');\\n+    });\\n+\\n+    it('should pause and resume process', async () => {\\n+      await process.start(mockContext);\\n+      \\n+      process.pause('Testing pause functionality');\\n+      expect(process.getState().status).toBe(ProcessStatus.PAUSED);\\n+      expect(process.isRunning()).toBe(false);\\n+      \\n+      await process.resume();\\n+      expect(process.getState().status).toBe(ProcessStatus.RUNNING);\\n+      expect(process.isRunning()).toBe(true);\\n+    });\\n+\\n+    it('should stop process', async () => {\\n+      await process.start(mockContext);\\n+      \\n+      process.stop('Testing stop functionality');\\n+      expect(process.getState().status).toBe(ProcessStatus.CANCELLED);\\n+      expect(process.isRunning()).toBe(false);\\n+    });\\n+  });\\n+\\n+  describe('Step Management', () => {\\n+    it('should have correct steps in order', () => {\\n+      const steps = process.getSteps();\\n+      expect(steps).toHaveLength(3);\\n+      expect(steps[0].id).toBe('step1');\\n+      expect(steps[1].id).toBe('step2');\\n+      expect(steps[2].id).toBe('step3');\\n+    });\\n+\\n+    it('should get step by ID', () => {\\n+      const step = process.getStep('step2');\\n+      expect(step).toBeDefined();\\n+      expect(step?.name).toBe('Step 2');\\n+    });\\n+\\n+    it('should return undefined for non-existent step', () => {\\n+      const step = process.getStep('non-existent');\\n+      expect(step).toBeUndefined();\\n+    });\\n+  });\\n+\\n+  describe('Flexible Navigation', () => {\\n+    beforeEach(async () => {\\n+      await process.start(mockContext);\\n+    });\\n+\\n+    it('should allow navigation to specific step', async () => {\\n+      await process.goToStep('step3', 'Testing navigation');\\n+      \\n+      expect(process.getState().currentStepId).toBe('step3');\\n+      \\n+      const auditTrail = process.getAuditTrail();\\n+      expect(auditTrail).toContainEqual(\\n+        expect.objectContaining({\\n+          action: expect.objectContaining({\\n+            type: 'step_navigation'\\n+          })\\n+        })\\n+      );\\n+    });\\n+\\n+    it('should allow going back steps', async () => {\\n+      // Navigate forward first\\n+      await process.goToStep('step3');\\n+      \\n+      // Then go back\\n+      await process.goBack(2);\\n+      \\n+      expect(process.getState().currentStepId).toBe('step1');\\n+    });\\n+\\n+    it('should allow skipping steps with manual data', async () => {\\n+      const manualData = { email: 'test@example.com', source: 'manual' };\\n+      \\n+      await process.skipStep('step2', 'Already have this data', manualData);\\n+      \\n+      expect(process.getState().isStepSkipped('step2')).toBe(true);\\n+      \\n+      const auditTrail = process.getAuditTrail();\\n+      expect(auditTrail).toContainEqual(\\n+        expect.objectContaining({\\n+          action: expect.objectContaining({\\n+            type: 'exception'\\n+          })\\n+        })\\n+      );\\n+    });\\n+\\n+    it('should validate manual data for skipped steps', () => {\\n+      const validData = { testField: 'valid data' };\\n+      const invalidData = {};\\n+      \\n+      const validResult = process.validateManualData('step1', validData);\\n+      expect(validResult.valid).toBe(true);\\n+      \\n+      const invalidResult = process.validateManualData('step1', invalidData);\\n+      expect(invalidResult.valid).toBe(false);\\n+    });\\n+  });\\n+\\n+  describe('State Management', () => {\\n+    beforeEach(async () => {\\n+      await process.start(mockContext);\\n+    });\\n+\\n+    it('should maintain immutable state', () => {\\n+      const originalState = process.getState();\\n+      \\n+      process.pause('Test');\\n+      \\n+      const newState = process.getState();\\n+      expect(originalState).not.toBe(newState); // Different objects\\n+      expect(originalState.status).toBe(ProcessStatus.RUNNING);\\n+      expect(newState.status).toBe(ProcessStatus.PAUSED);\\n+    });\\n+\\n+    it('should track completion percentage', async () => {\\n+      expect(process.getCompletionPercentage()).toBe(0);\\n+      \\n+      // Simulate completing steps by skipping them\\n+      await process.skipStep('step1', 'Test completion', { testField: 'data' });\\n+      await process.skipStep('step2', 'Test completion', { testField: 'data' });\\n+      \\n+      // Should show some progress (exact calculation depends on how skipped steps are counted)\\n+      const percentage = process.getCompletionPercentage();\\n+      expect(percentage).toBeGreaterThanOrEqual(0);\\n+      expect(percentage).toBeLessThanOrEqual(100);\\n+    });\\n+\\n+    it('should provide complete audit trail', async () => {\\n+      await process.goToStep('step2', 'Navigation test');\\n+      await process.skipStep('step3', 'Skip test');\\n+      process.pause('Pause test');\\n+      \\n+      const auditTrail = process.getAuditTrail();\\n+      expect(auditTrail.length).toBeGreaterThan(0);\\n+      \\n+      // Should have events for navigation, skip, and pause\\n+      const eventTypes = auditTrail.map(entry => entry.action.type);\\n+      expect(eventTypes).toContain('step_navigation');\\n+      expect(eventTypes).toContain('exception');\\n+      expect(eventTypes).toContain('status_change');\\n+    });\\n+  });\\n+\\n+  describe('Error Handling', () => {\\n+    it('should throw error when starting already running process', async () => {\\n+      await process.start(mockContext);\\n+      \\n+      await expect(process.start(mockContext)).rejects.toThrow(\\n+        'Process cannot be started. Current status: running'\\n+      );\\n+    });\\n+\\n+    it('should throw error when navigating to non-existent step', async () => {\\n+      await process.start(mockContext);\\n+      \\n+      await expect(process.goToStep('non-existent')).rejects.toThrow(\\n+        \\\"Step 'non-existent' not found\\\"\\n+      );\\n+    });\\n+\\n+    it('should throw error when going back too far', async () => {\\n+      await process.start(mockContext);\\n+      \\n+      await expect(process.goBack(5)).rejects.toThrow(\\n+        'Cannot go back further than process start'\\n+      );\\n+    });\\n+  });\\n+\\n+  describe('Framework Philosophy Compliance', () => {\\n+    beforeEach(async () => {\\n+      await process.start(mockContext);\\n+    });\\n+\\n+    it('should never constrain - all steps can be skipped', async () => {\\n+      // Test that every step can be skipped\\n+      for (const step of process.getSteps()) {\\n+        expect(step.canSkip('Testing framework philosophy')).toBe(true);\\n+      }\\n+    });\\n+\\n+    it('should allow navigation to any step', () => {\\n+      // Test that navigation to any step is allowed\\n+      for (const step of process.getSteps()) {\\n+        expect(process.getState().canGoToStep(step.id)).toBe(true);\\n+      }\\n+    });\\n+\\n+    it('should maintain complete history - never rewrite', async () => {\\n+      const initialHistoryLength = process.getState().history.length;\\n+      \\n+      await process.goToStep('step2');\\n+      await process.goToStep('step1'); // Go back\\n+      await process.goToStep('step3'); // Go forward again\\n+      \\n+      const finalHistoryLength = process.getState().history.length;\\n+      \\n+      // Should have added events, never removed them\\n+      expect(finalHistoryLength).toBeGreaterThan(initialHistoryLength);\\n+      \\n+      // Should be able to trace all navigation events\\n+      const navigationEvents = process.getState().history.filter(\\n+        event => event.type === 'step_navigation'\\n+      );\\n+      expect(navigationEvents.length).toBe(3);\\n+    });\\n+  });\\n+});\\n\\\\ No newline at end of file\\n\"\n+    },\n+    {\n+      \"filepath\": \"packages/orgata-framework/src/core/Process.ts\",\n+      \"oldHash\": \"\",\n+      \"newHash\": \"2cb0acf42459b61ae955287d0fcaa0444fbd51be\",\n+      \"timestamp\": \"2025-07-23T21:15:35.047Z\",\n+      \"changeType\": \"content\",\n+      \"gitDiff\": \"diff --git a/packages/orgata-framework/src/core/Process.ts b/packages/orgata-framework/src/core/Process.ts\\nnew file mode 100644\\nindex 0000000..2cb0acf\\n--- /dev/null\\n+++ b/packages/orgata-framework/src/core/Process.ts\\n@@ -0,0 +1,553 @@\\n+/**\\n+ * Base Process class for Orgata Framework\\n+ * \\n+ * Implements the core process execution logic with complete flexibility,\\n+ * immutable state management, and intelligent override capabilities.\\n+ * \\n+ * Based on design specification:\\n+ * - Framework Architecture: ../../design-docs/008-orgata-framework/ORGATA_FRAMEWORK_ARCHITECTURE.md\\n+ * - API Specification: ../../design-docs/008-orgata-framework/FRAMEWORK_API_SPECIFICATION.md\\n+ */\\n+\\n+import { EventEmitter } from 'eventemitter3';\\n+import { ProcessStatus } from '../types';\\n+import type {\\n+  ProcessConfig,\\n+  ProcessContext,\\n+  ProcessResult,\\n+  StepResult,\\n+  ValidationResult,\\n+  OverrideRequest,\\n+  OverrideResult,\\n+  AuditEntry\\n+} from '../types';\\n+import type { Step } from './Step';\\n+import { ProcessState } from '../state/ProcessState';\\n+\\n+export abstract class Process extends EventEmitter {\\n+  readonly id: string;\\n+  readonly name: string;\\n+  readonly config: ProcessConfig;\\n+  protected steps: Map<string, Step>;\\n+  protected state: ProcessState;\\n+  protected stepOrder: string[];\\n+\\n+  constructor(config: ProcessConfig) {\\n+    super();\\n+    \\n+    this.id = this.generateId();\\n+    this.name = config.name;\\n+    this.config = config;\\n+    this.steps = new Map();\\n+    this.stepOrder = [];\\n+    \\n+    // Initialize with empty state\\n+    this.state = ProcessState.create(this.id);\\n+  }\\n+\\n+  // =============================================================================\\n+  // Abstract Methods (must be implemented by subclasses)\\n+  // =============================================================================\\n+\\n+  /**\\n+   * Main execution entry point - implemented by generated process classes\\n+   */\\n+  abstract execute(context: ProcessContext): Promise<ProcessResult>;\\n+\\n+  // =============================================================================\\n+  // Step Management\\n+  // =============================================================================\\n+\\n+  /**\\n+   * Add a step to the process\\n+   */\\n+  addStep(step: Step): void {\\n+    if (this.steps.has(step.id)) {\\n+      throw new Error(`Step with id '${step.id}' already exists`);\\n+    }\\n+    \\n+    this.steps.set(step.id, step);\\n+    this.stepOrder.push(step.id);\\n+    \\n+    this.emit('step:added', step);\\n+  }\\n+\\n+  /**\\n+   * Remove a step from the process\\n+   */\\n+  removeStep(stepId: string): void {\\n+    if (!this.steps.has(stepId)) {\\n+      throw new Error(`Step with id '${stepId}' not found`);\\n+    }\\n+    \\n+    this.steps.delete(stepId);\\n+    this.stepOrder = this.stepOrder.filter(id => id !== stepId);\\n+    \\n+    this.emit('step:removed', stepId);\\n+  }\\n+\\n+  /**\\n+   * Get a specific step by ID\\n+   */\\n+  getStep(stepId: string): Step | undefined {\\n+    return this.steps.get(stepId);\\n+  }\\n+\\n+  /**\\n+   * Get all steps in order\\n+   */\\n+  getSteps(): Step[] {\\n+    return this.stepOrder.map(id => this.steps.get(id)!).filter(Boolean);\\n+  }\\n+\\n+  /**\\n+   * Get step IDs in execution order\\n+   */\\n+  getStepOrder(): string[] {\\n+    return [...this.stepOrder];\\n+  }\\n+\\n+  // =============================================================================\\n+  // Process Lifecycle Management\\n+  // =============================================================================\\n+\\n+  /**\\n+   * Start process execution\\n+   */\\n+  async start(initialContext?: ProcessContext): Promise<void> {\\n+    if (this.state.status !== ProcessStatus.NOT_STARTED) {\\n+      throw new Error(`Process cannot be started. Current status: ${this.state.status}`);\\n+    }\\n+\\n+    this.state = this.state.withStatus(ProcessStatus.RUNNING);\\n+    \\n+    if (this.stepOrder.length > 0) {\\n+      this.state = this.state.withCurrentStep(this.stepOrder[0]);\\n+    }\\n+\\n+    this.emit('process:started', { \\n+      processId: this.id, \\n+      context: initialContext,\\n+      timestamp: new Date()\\n+    });\\n+  }\\n+\\n+  /**\\n+   * Pause process execution\\n+   */\\n+  pause(reason?: string): void {\\n+    if (this.state.status !== ProcessStatus.RUNNING) {\\n+      throw new Error(`Process cannot be paused. Current status: ${this.state.status}`);\\n+    }\\n+\\n+    this.state = this.state.withStatus(ProcessStatus.PAUSED);\\n+    \\n+    this.emit('process:paused', { \\n+      processId: this.id, \\n+      reason,\\n+      timestamp: new Date()\\n+    });\\n+  }\\n+\\n+  /**\\n+   * Resume process execution\\n+   */\\n+  async resume(): Promise<void> {\\n+    if (this.state.status !== ProcessStatus.PAUSED) {\\n+      throw new Error(`Process cannot be resumed. Current status: ${this.state.status}`);\\n+    }\\n+\\n+    this.state = this.state.withStatus(ProcessStatus.RUNNING);\\n+    \\n+    this.emit('process:resumed', { \\n+      processId: this.id,\\n+      timestamp: new Date()\\n+    });\\n+  }\\n+\\n+  /**\\n+   * Stop process execution\\n+   */\\n+  stop(reason?: string): void {\\n+    if (this.state.status === ProcessStatus.COMPLETED || \\n+        this.state.status === ProcessStatus.CANCELLED) {\\n+      return; // Already stopped\\n+    }\\n+\\n+    this.state = this.state.withStatus(ProcessStatus.CANCELLED);\\n+    \\n+    this.emit('process:stopped', { \\n+      processId: this.id, \\n+      reason,\\n+      timestamp: new Date()\\n+    });\\n+  }\\n+\\n+  // =============================================================================\\n+  // Flexible Navigation (Core Framework Feature)\\n+  // =============================================================================\\n+\\n+  /**\\n+   * Navigate to a specific step\\n+   * Maintains immutable history - never rewrites past\\n+   */\\n+  async goToStep(stepId: string, reason?: string): Promise<void> {\\n+    if (!this.steps.has(stepId)) {\\n+      throw new Error(`Step '${stepId}' not found`);\\n+    }\\n+\\n+    if (!this.state.canGoToStep(stepId)) {\\n+      throw new Error(`Cannot navigate to step '${stepId}' in current state`);\\n+    }\\n+\\n+    // Create navigation event (preserves history)\\n+    this.state = this.state.withStepNavigation(stepId, reason || 'User navigation');\\n+    \\n+    this.emit('step:navigation', {\\n+      fromStep: this.state.currentStepId,\\n+      toStep: stepId,\\n+      reason,\\n+      timestamp: new Date()\\n+    });\\n+  }\\n+\\n+  /**\\n+   * Skip a step with optional manual data provision\\n+   * Core flexibility feature - users can always skip steps\\n+   */\\n+  async skipStep(stepId: string, reason: string, manualData?: any): Promise<void> {\\n+    if (!this.steps.has(stepId)) {\\n+      throw new Error(`Step '${stepId}' not found`);\\n+    }\\n+\\n+    const step = this.steps.get(stepId)!;\\n+    \\n+    // Validate manual data if provided\\n+    if (manualData) {\\n+      const validation = this.validateManualData(stepId, manualData);\\n+      if (!validation.valid) {\\n+        this.emit('validation:warnings', {\\n+          stepId,\\n+          warnings: validation.errors,\\n+          proceedAnyway: true\\n+        });\\n+      }\\n+    }\\n+\\n+    // Create skip event with manual data\\n+    this.state = this.state.withStepSkip(stepId, reason, manualData);\\n+    \\n+    this.emit('step:skip', {\\n+      stepId,\\n+      reason,\\n+      manualData,\\n+      timestamp: new Date()\\n+    });\\n+\\n+    // Move to next step if this was current step\\n+    if (this.state.currentStepId === stepId) {\\n+      const nextStepId = this.getNextStepId(stepId);\\n+      if (nextStepId) {\\n+        this.state = this.state.withCurrentStep(nextStepId);\\n+      }\\n+    }\\n+  }\\n+\\n+  /**\\n+   * Go back to previous steps\\n+   * Replays history forward from that point\\n+   */\\n+  async goBack(steps: number = 1): Promise<void> {\\n+    if (steps < 1) {\\n+      throw new Error('Steps must be positive number');\\n+    }\\n+\\n+    const currentIndex = this.getCurrentStepIndex();\\n+    if (currentIndex < steps) {\\n+      throw new Error('Cannot go back further than process start');\\n+    }\\n+\\n+    const targetIndex = currentIndex - steps;\\n+    const targetStepId = this.stepOrder[targetIndex];\\n+    \\n+    await this.goToStep(targetStepId, `Go back ${steps} step(s)`);\\n+  }\\n+\\n+  // =============================================================================\\n+  // State Management and Queries\\n+  // =============================================================================\\n+\\n+  /**\\n+   * Get current step\\n+   */\\n+  getCurrentStep(): Step | null {\\n+    if (!this.state.currentStepId) {\\n+      return null;\\n+    }\\n+    return this.steps.get(this.state.currentStepId) || null;\\n+  }\\n+\\n+  /**\\n+   * Get current process state (immutable)\\n+   */\\n+  getState(): ProcessState {\\n+    return this.state;\\n+  }\\n+\\n+  /**\\n+   * Get complete audit trail\\n+   */\\n+  getAuditTrail(): AuditEntry[] {\\n+    return this.state.getAuditTrail();\\n+  }\\n+\\n+  /**\\n+   * Check if process is currently running\\n+   */\\n+  isRunning(): boolean {\\n+    return this.state.status === ProcessStatus.RUNNING;\\n+  }\\n+\\n+  /**\\n+   * Check if process is completed\\n+   */\\n+  isCompleted(): boolean {\\n+    return this.state.status === ProcessStatus.COMPLETED;\\n+  }\\n+\\n+  /**\\n+   * Get completion percentage (0-100)\\n+   */\\n+  getCompletionPercentage(): number {\\n+    const totalSteps = this.stepOrder.length;\\n+    if (totalSteps === 0) return 100;\\n+    \\n+    const completedSteps = this.stepOrder.filter(stepId => \\n+      this.state.isStepCompleted(stepId)\\n+    ).length;\\n+    \\n+    return Math.round((completedSteps / totalSteps) * 100);\\n+  }\\n+\\n+  // =============================================================================\\n+  // Override and Flexibility System\\n+  // =============================================================================\\n+\\n+  /**\\n+   * Handle override requests (delegated to FlexibilityAgent)\\n+   */\\n+  async requestOverride(request: OverrideRequest): Promise<OverrideResult> {\\n+    // This will be implemented when we add the FlexibilityAgent\\n+    // For now, return a basic response\\n+    return {\\n+      approved: false,\\n+      implementation: {\\n+        type: 'not_implemented',\\n+        changes: {},\\n+        instructions: 'Override system not yet implemented'\\n+      },\\n+      consequences: {\\n+        riskLevel: 'low',\\n+        missingData: [],\\n+        affectedSteps: [],\\n+        suggestedMitigations: [],\\n+        dataRequirements: []\\n+      },\\n+      auditEntry: {\\n+        id: this.generateId(),\\n+        timestamp: new Date(),\\n+        processId: this.id,\\n+        stepId: request.stepId,\\n+        userId: request.currentContext.userId,\\n+        action: {\\n+          type: 'override_request',\\n+          description: request.userMessage,\\n+          automated: false\\n+        },\\n+        details: {\\n+          before: null,\\n+          after: null,\\n+          metadata: { request }\\n+        },\\n+        impact: {\\n+          scope: 'step',\\n+          severity: 'info',\\n+          categories: ['override']\\n+        }\\n+      }\\n+    };\\n+  }\\n+\\n+  /**\\n+   * Validate manual data for step skipping\\n+   */\\n+  validateManualData(stepId: string, data: any): ValidationResult {\\n+    const step = this.steps.get(stepId);\\n+    if (!step) {\\n+      return {\\n+        valid: false,\\n+        errors: [{\\n+          code: 'STEP_NOT_FOUND',\\n+          message: `Step '${stepId}' not found`,\\n+          severity: 'error'\\n+        }]\\n+      };\\n+    }\\n+\\n+    // Delegate to step's validation logic\\n+    return step.validate(data);\\n+  }\\n+\\n+  // =============================================================================\\n+  // Process Execution Helpers\\n+  // =============================================================================\\n+\\n+  /**\\n+   * Execute all steps in sequence (framework-provided implementation)\\n+   * Used by generated process classes\\n+   */\\n+  protected async executeSteps(context: ProcessContext): Promise<ProcessResult> {\\n+    const startTime = new Date();\\n+    const completedSteps: string[] = [];\\n+    const exceptions: any[] = [];\\n+    \\n+    try {\\n+      await this.start(context);\\n+      \\n+      for (const stepId of this.stepOrder) {\\n+        if (this.state.isStepSkipped(stepId)) {\\n+          continue; // Skip this step\\n+        }\\n+        \\n+        const step = this.steps.get(stepId)!;\\n+        \\n+        try {\\n+          this.emit('step:start', { stepId, step, context });\\n+          \\n+          const stepContext = this.buildStepContext(stepId, context);\\n+          const result = await step.execute(stepContext);\\n+          \\n+          if (result.success) {\\n+            this.state = this.state.withStepData(stepId, {\\n+              stepId,\\n+              data: result.data,\\n+              timestamp: new Date(),\\n+              source: 'user',\\n+              validated: true\\n+            });\\n+            \\n+            completedSteps.push(stepId);\\n+            this.emit('step:complete', { stepId, step, result });\\n+          } else {\\n+            this.emit('step:error', { stepId, step, result });\\n+            throw new Error(`Step '${stepId}' failed: ${result.errors?.map(e => e.message).join(', ')}`);\\n+          }\\n+          \\n+        } catch (error) {\\n+          this.emit('step:exception', { stepId, step, error });\\n+          exceptions.push({\\n+            stepId,\\n+            error: error instanceof Error ? error.message : String(error),\\n+            timestamp: new Date()\\n+          });\\n+          \\n+          // For now, stop on error - could be made configurable\\n+          break;\\n+        }\\n+      }\\n+      \\n+      this.state = this.state.withStatus(ProcessStatus.COMPLETED);\\n+      \\n+      return {\\n+        success: exceptions.length === 0,\\n+        processId: this.id,\\n+        completedSteps,\\n+        finalData: this.collectFinalData(),\\n+        metadata: {\\n+          startedAt: startTime,\\n+          completedAt: new Date(),\\n+          duration: Date.now() - startTime.getTime(),\\n+          executionMode: 'sequential',\\n+          version: '1.0.0'\\n+        },\\n+        auditTrail: this.getAuditTrail(),\\n+        exceptions: exceptions.length > 0 ? exceptions : undefined\\n+      };\\n+      \\n+    } catch (error) {\\n+      this.state = this.state.withStatus(ProcessStatus.FAILED);\\n+      \\n+      return {\\n+        success: false,\\n+        processId: this.id,\\n+        completedSteps,\\n+        finalData: this.collectFinalData(),\\n+        metadata: {\\n+          startedAt: startTime,\\n+          completedAt: new Date(),\\n+          duration: Date.now() - startTime.getTime(),\\n+          executionMode: 'sequential',\\n+          version: '1.0.0'\\n+        },\\n+        auditTrail: this.getAuditTrail(),\\n+        exceptions: [\\n+          ...exceptions,\\n+          {\\n+            error: error instanceof Error ? error.message : String(error),\\n+            timestamp: new Date()\\n+          }\\n+        ]\\n+      };\\n+    }\\n+  }\\n+\\n+  // =============================================================================\\n+  // Private Helper Methods\\n+  // =============================================================================\\n+\\n+  private buildStepContext(stepId: string, processContext: ProcessContext): any {\\n+    const step = this.steps.get(stepId)!;\\n+    \\n+    return {\\n+      ...processContext,\\n+      stepId,\\n+      stepType: step.type,\\n+      inputData: this.state.getStepData(stepId)?.data || {},\\n+      previousStepResults: this.state.stepData,\\n+      requiredOutputs: [], // TODO: Extract from step definition\\n+      validationRules: [], // TODO: Extract from step definition  \\n+      startTime: new Date()\\n+    };\\n+  }\\n+\\n+  private collectFinalData(): any {\\n+    const finalData: Record<string, any> = {};\\n+    \\n+    for (const [stepId, stepData] of this.state.stepData) {\\n+      if (stepData.validated) {\\n+        finalData[stepId] = stepData.data;\\n+      }\\n+    }\\n+    \\n+    return finalData;\\n+  }\\n+\\n+  private getCurrentStepIndex(): number {\\n+    if (!this.state.currentStepId) {\\n+      return -1;\\n+    }\\n+    return this.stepOrder.indexOf(this.state.currentStepId);\\n+  }\\n+\\n+  private getNextStepId(currentStepId: string): string | null {\\n+    const currentIndex = this.stepOrder.indexOf(currentStepId);\\n+    if (currentIndex < 0 || currentIndex >= this.stepOrder.length - 1) {\\n+      return null;\\n+    }\\n+    return this.stepOrder[currentIndex + 1];\\n+  }\\n+\\n+  private generateId(): string {\\n+    return Date.now().toString(36) + Math.random().toString(36).substring(2);\\n+  }\\n+}\\n\\\\ No newline at end of file\\n\"\n+    },\n+    {\n+      \"filepath\": \"packages/orgata-framework/src/core/Step.ts\",\n+      \"oldHash\": \"\",\n+      \"newHash\": \"37203135db2dd3ed1ef8ed9aeab9bb73cabf4eab\",\n+      \"timestamp\": \"2025-07-23T21:15:35.087Z\",\n+      \"changeType\": \"content\",\n+      \"gitDiff\": \"diff --git a/packages/orgata-framework/src/core/Step.ts b/packages/orgata-framework/src/core/Step.ts\\nnew file mode 100644\\nindex 0000000..3720313\\n--- /dev/null\\n+++ b/packages/orgata-framework/src/core/Step.ts\\n@@ -0,0 +1,641 @@\\n+/**\\n+ * Base Step class and specialized step implementations for Orgata Framework\\n+ * \\n+ * Implements the three core step types (Human, Agent, Algorithm) with\\n+ * complete flexibility and override capabilities.\\n+ * \\n+ * Based on design specification:\\n+ * - Framework Architecture: ../../design-docs/008-orgata-framework/ORGATA_FRAMEWORK_ARCHITECTURE.md\\n+ * - API Specification: ../../design-docs/008-orgata-framework/FRAMEWORK_API_SPECIFICATION.md\\n+ */\\n+\\n+import type {\\n+  StepConfig,\\n+  HumanStepConfig,\\n+  AgentStepConfig,\\n+  AlgorithmStepConfig,\\n+  StepContext,\\n+  StepResult,\\n+  StepType,\\n+  ValidationResult,\\n+  InputRequirement,\\n+  AuditEntry,\\n+  FormModel,\\n+  ComponentDefinition,\\n+  ValidationRules,\\n+  AgentPrompt,\\n+  AgentContext,\\n+  AgentConstraints,\\n+  AgentResponse,\\n+  AlgorithmImplementation,\\n+  AlgorithmParameters,\\n+  AlgorithmInput,\\n+  AlgorithmOutput\\n+} from '../types';\\n+\\n+// =============================================================================\\n+// Base Step Class\\n+// =============================================================================\\n+\\n+export abstract class Step {\\n+  readonly id: string;\\n+  readonly name: string;\\n+  readonly type: StepType;\\n+  readonly config: StepConfig;\\n+\\n+  constructor(config: StepConfig) {\\n+    this.id = config.id;\\n+    this.name = config.name;\\n+    this.type = config.type;\\n+    this.config = config;\\n+  }\\n+\\n+  // =============================================================================\\n+  // Abstract Methods (must be implemented by subclasses)\\n+  // =============================================================================\\n+\\n+  /**\\n+   * Execute the step with given context\\n+   */\\n+  abstract execute(context: StepContext): Promise<StepResult>;\\n+\\n+  // =============================================================================\\n+  // Validation and Preparation\\n+  // =============================================================================\\n+\\n+  /**\\n+   * Validate step input data\\n+   */\\n+  validate(input: any): ValidationResult {\\n+    // Base validation - override in subclasses for specific validation\\n+    return {\\n+      valid: true,\\n+      errors: []\\n+    };\\n+  }\\n+\\n+  /**\\n+   * Prepare step context from process context\\n+   */\\n+  prepareContext(processContext: any): StepContext {\\n+    return {\\n+      ...processContext,\\n+      stepId: this.id,\\n+      stepType: this.type,\\n+      inputData: {},\\n+      previousStepResults: new Map(),\\n+      requiredOutputs: this.getRequiredOutputs(),\\n+      validationRules: this.getValidationRules(),\\n+      startTime: new Date()\\n+    };\\n+  }\\n+\\n+  // =============================================================================\\n+  // Flexibility and Override Support\\n+  // =============================================================================\\n+\\n+  /**\\n+   * Check if this step can be skipped with given reason\\n+   */\\n+  canSkip(reason: string): boolean {\\n+    // Default: all steps can be skipped (framework philosophy: never constrain)\\n+    return true;\\n+  }\\n+\\n+  /**\\n+   * Get required inputs for this step\\n+   */\\n+  getRequiredInputs(): InputRequirement[] {\\n+    // Override in subclasses to specify required inputs\\n+    return [];\\n+  }\\n+\\n+  /**\\n+   * Check if manual data can substitute for step execution\\n+   */\\n+  acceptManualData(data: any): boolean {\\n+    // Default: accept manual data if it contains required fields\\n+    const requiredInputs = this.getRequiredInputs();\\n+    return requiredInputs.every(input => \\n+      !input.required || (data && data[input.name] !== undefined)\\n+    );\\n+  }\\n+\\n+  // =============================================================================\\n+  // Audit and Tracking\\n+  // =============================================================================\\n+\\n+  /**\\n+   * Create audit entry for step actions\\n+   */\\n+  createAuditEntry(action: string, data: any): AuditEntry {\\n+    return {\\n+      id: this.generateId(),\\n+      timestamp: new Date(),\\n+      processId: '', // Will be filled by Process\\n+      stepId: this.id,\\n+      userId: '', // Will be filled from context\\n+      action: {\\n+        type: action,\\n+        description: `Step ${this.name}: ${action}`,\\n+        automated: false\\n+      },\\n+      details: {\\n+        before: null,\\n+        after: data,\\n+        metadata: {\\n+          stepType: this.type,\\n+          stepName: this.name\\n+        }\\n+      },\\n+      impact: {\\n+        scope: 'step',\\n+        severity: 'info',\\n+        categories: ['step_execution']\\n+      }\\n+    };\\n+  }\\n+\\n+  // =============================================================================\\n+  // Protected Helper Methods\\n+  // =============================================================================\\n+\\n+  protected getRequiredOutputs(): any[] {\\n+    // Override in subclasses\\n+    return [];\\n+  }\\n+\\n+  protected getValidationRules(): any[] {\\n+    // Override in subclasses\\n+    return [];\\n+  }\\n+\\n+  protected generateId(): string {\\n+    return Date.now().toString(36) + Math.random().toString(36).substring(2);\\n+  }\\n+\\n+  protected calculateDuration(startTime: Date): number {\\n+    return Date.now() - startTime.getTime();\\n+  }\\n+}\\n+\\n+// =============================================================================\\n+// Human Step - UI-based user interaction\\n+// =============================================================================\\n+\\n+export class HumanStep extends Step {\\n+  readonly model: FormModel;\\n+  readonly view: ComponentDefinition;\\n+  readonly validation: ValidationRules;\\n+\\n+  constructor(config: HumanStepConfig) {\\n+    super(config);\\n+    this.model = config.model;\\n+    this.view = config.view;\\n+    this.validation = config.validation || { fields: {}, custom: [] };\\n+  }\\n+\\n+  async execute(context: StepContext): Promise<StepResult> {\\n+    try {\\n+      // Framework will handle UI rendering and data collection\\n+      const userInput = await this.collectUserInput(context);\\n+      \\n+      // Validate user input\\n+      const validationResult = this.validateInput(userInput);\\n+      if (!validationResult.valid) {\\n+        return {\\n+          success: false,\\n+          data: userInput,\\n+          metadata: {\\n+            completedAt: new Date(),\\n+            duration: this.calculateDuration(context.startTime)\\n+          },\\n+          errors: validationResult.errors\\n+        };\\n+      }\\n+\\n+      // Process the validated input\\n+      const processedData = await this.processUserInput(userInput, context);\\n+\\n+      return {\\n+        success: true,\\n+        data: processedData,\\n+        metadata: {\\n+          completedAt: new Date(),\\n+          userAgent: context.userAgent,\\n+          duration: this.calculateDuration(context.startTime)\\n+        }\\n+      };\\n+\\n+    } catch (error) {\\n+      return {\\n+        success: false,\\n+        data: null,\\n+        metadata: {\\n+          completedAt: new Date(),\\n+          duration: this.calculateDuration(context.startTime)\\n+        },\\n+        errors: [{\\n+          code: 'EXECUTION_ERROR',\\n+          message: error instanceof Error ? error.message : String(error),\\n+          severity: 'error'\\n+        }]\\n+      };\\n+    }\\n+  }\\n+\\n+  // =============================================================================\\n+  // UI-specific Methods\\n+  // =============================================================================\\n+\\n+  /**\\n+   * Render UI and collect user input\\n+   * This will be implemented by the framework's UI rendering system\\n+   */\\n+  protected async collectUserInput(context: StepContext): Promise<any> {\\n+    // Placeholder - actual implementation will depend on UI framework integration\\n+    // For now, return empty object\\n+    return {};\\n+  }\\n+\\n+  /**\\n+   * Generate alternative UI when standard form is too restrictive\\n+   */\\n+  generateAlternativeUI(constraints?: any): ComponentDefinition {\\n+    // Return a more flexible UI component\\n+    return {\\n+      type: 'flexible-form',\\n+      props: {\\n+        allowFreeForm: true,\\n+        originalModel: this.model,\\n+        constraints\\n+      },\\n+      styling: {\\n+        className: 'alternative-ui'\\n+      },\\n+      behavior: {\\n+        validation: {\\n+          realTime: false,\\n+          debounceMs: 500,\\n+          showErrors: true\\n+        }\\n+      }\\n+    };\\n+  }\\n+\\n+  /**\\n+   * Validate user input against form model and custom rules\\n+   */\\n+  protected validateInput(input: any): ValidationResult {\\n+    const errors: any[] = [];\\n+\\n+    // Validate required fields\\n+    for (const field of this.model.fields) {\\n+      if (field.required && (!input || input[field.name] === undefined || input[field.name] === '')) {\\n+        errors.push({\\n+          field: field.name,\\n+          code: 'REQUIRED_FIELD',\\n+          message: `${field.label} is required`,\\n+          severity: 'error'\\n+        });\\n+      }\\n+\\n+      // Validate field-specific rules\\n+      if (input && input[field.name] !== undefined) {\\n+        for (const validation of field.validation) {\\n+          if (!this.validateFieldValue(input[field.name], validation)) {\\n+            errors.push({\\n+              field: field.name,\\n+              code: validation.type.toUpperCase(),\\n+              message: validation.message,\\n+              severity: 'error'\\n+            });\\n+          }\\n+        }\\n+      }\\n+    }\\n+\\n+    // Apply custom validation rules\\n+    for (const rule of this.validation.custom) {\\n+      // TODO: Implement custom validation logic\\n+    }\\n+\\n+    return {\\n+      valid: errors.length === 0,\\n+      errors\\n+    };\\n+  }\\n+\\n+  /**\\n+   * Process user input (override for custom business logic)\\n+   */\\n+  protected async processUserInput(input: any, context: StepContext): Promise<any> {\\n+    // Default: return input as-is\\n+    // Override in generated step classes for custom processing\\n+    return input;\\n+  }\\n+\\n+  private validateFieldValue(value: any, validation: any): boolean {\\n+    switch (validation.type) {\\n+      case 'min':\\n+        return typeof value === 'number' ? value >= validation.value : value.length >= validation.value;\\n+      case 'max':\\n+        return typeof value === 'number' ? value <= validation.value : value.length <= validation.value;\\n+      case 'email':\\n+        return /^[^\\\\s@]+@[^\\\\s@]+\\\\.[^\\\\s@]+$/.test(value);\\n+      case 'url':\\n+        try {\\n+          new URL(value);\\n+          return true;\\n+        } catch {\\n+          return false;\\n+        }\\n+      case 'pattern':\\n+        return new RegExp(validation.value).test(value);\\n+      default:\\n+        return true;\\n+    }\\n+  }\\n+}\\n+\\n+// =============================================================================\\n+// Agent Step - AI-powered processing\\n+// =============================================================================\\n+\\n+export class AgentStep extends Step {\\n+  readonly prompt: AgentPrompt;\\n+  readonly context: AgentContext;\\n+  readonly constraints: AgentConstraints;\\n+\\n+  constructor(config: AgentStepConfig) {\\n+    super(config);\\n+    this.prompt = config.prompt;\\n+    this.context = config.context;\\n+    this.constraints = config.constraints || {\\n+      timeout: 30000,\\n+      retryAttempts: 3,\\n+      fallbackToHuman: true\\n+    };\\n+  }\\n+\\n+  async execute(context: StepContext): Promise<StepResult> {\\n+    try {\\n+      // Build contextual prompt\\n+      const enrichedPrompt = await this.buildContextualPrompt(context);\\n+      \\n+      // Execute AI agent\\n+      const agentResponse = await this.executeAgent(enrichedPrompt, this.context);\\n+      \\n+      // Validate agent output\\n+      const validationResult = this.validateAgentOutput(agentResponse);\\n+      if (!validationResult.valid) {\\n+        return {\\n+          success: false,\\n+          data: agentResponse,\\n+          metadata: {\\n+            completedAt: new Date(),\\n+            duration: this.calculateDuration(context.startTime),\\n+            requiresHumanReview: true,\\n+            confidence: agentResponse.confidence\\n+          },\\n+          errors: validationResult.errors\\n+        };\\n+      }\\n+\\n+      // Post-process agent output\\n+      const processedData = await this.postProcessOutput(agentResponse, context);\\n+\\n+      return {\\n+        success: true,\\n+        data: processedData,\\n+        metadata: {\\n+          agentConfidence: agentResponse.confidence,\\n+          reasoning: agentResponse.reasoning,\\n+          completedAt: new Date(),\\n+          duration: this.calculateDuration(context.startTime),\\n+          requiresReview: agentResponse.confidence < 0.8\\n+        }\\n+      };\\n+\\n+    } catch (error) {\\n+      return {\\n+        success: false,\\n+        data: null,\\n+        metadata: {\\n+          completedAt: new Date(),\\n+          duration: this.calculateDuration(context.startTime),\\n+          requiresHumanReview: true\\n+        },\\n+        errors: [{\\n+          code: 'AGENT_ERROR',\\n+          message: error instanceof Error ? error.message : String(error),\\n+          severity: 'error'\\n+        }]\\n+      };\\n+    }\\n+  }\\n+\\n+  // =============================================================================\\n+  // AI-specific Methods\\n+  // =============================================================================\\n+\\n+  /**\\n+   * Build prompt with current context data\\n+   */\\n+  protected async buildContextualPrompt(context: StepContext): Promise<string> {\\n+    const contextData = this.extractRelevantContext(context);\\n+    \\n+    return this.prompt.userPrompt.replace(/\\\\{\\\\{([^}]+)\\\\}\\\\}/g, (match, key) => {\\n+      return contextData[key] || match;\\n+    });\\n+  }\\n+\\n+  /**\\n+   * Execute AI agent (placeholder - will integrate with actual AI service)\\n+   */\\n+  protected async executeAgent(prompt: string, agentContext: AgentContext): Promise<AgentResponse> {\\n+    // Placeholder implementation\\n+    // This will be replaced with actual AI service integration\\n+    return {\\n+      content: 'AI agent response placeholder',\\n+      confidence: 0.85,\\n+      reasoning: 'This is a placeholder response',\\n+      structuredData: {},\\n+      suggestedActions: [],\\n+      requiresHumanReview: false\\n+    };\\n+  }\\n+\\n+  /**\\n+   * Validate agent output\\n+   */\\n+  protected validateAgentOutput(output: AgentResponse): ValidationResult {\\n+    const errors: any[] = [];\\n+\\n+    if (!output.content && !output.structuredData) {\\n+      errors.push({\\n+        code: 'NO_OUTPUT',\\n+        message: 'Agent produced no usable output',\\n+        severity: 'error'\\n+      });\\n+    }\\n+\\n+    if (output.confidence < 0.1) {\\n+      errors.push({\\n+        code: 'LOW_CONFIDENCE',\\n+        message: 'Agent confidence is too low',\\n+        severity: 'warning'\\n+      });\\n+    }\\n+\\n+    return {\\n+      valid: errors.filter(e => e.severity === 'error').length === 0,\\n+      errors\\n+    };\\n+  }\\n+\\n+  /**\\n+   * Extract relevant context from previous steps\\n+   */\\n+  protected extractRelevantContext(context: StepContext): Record<string, any> {\\n+    // TODO: Implement intelligent context extraction\\n+    return {\\n+      processContext: context.businessContext\\n+    };\\n+  }\\n+\\n+  /**\\n+   * Post-process agent output (override for custom logic)\\n+   */\\n+  protected async postProcessOutput(response: AgentResponse, context: StepContext): Promise<any> {\\n+    // Default: return structured data or parsed content\\n+    return response.structuredData || response.content;\\n+  }\\n+}\\n+\\n+// =============================================================================\\n+// Algorithm Step - Code-based processing\\n+// =============================================================================\\n+\\n+export class AlgorithmStep extends Step {\\n+  readonly implementation: AlgorithmImplementation;\\n+  readonly parameters: AlgorithmParameters;\\n+\\n+  constructor(config: AlgorithmStepConfig) {\\n+    super(config);\\n+    this.implementation = config.implementation;\\n+    this.parameters = config.parameters || {};\\n+  }\\n+\\n+  async execute(context: StepContext): Promise<StepResult> {\\n+    try {\\n+      // Extract required inputs\\n+      const algorithmInput = this.extractInputs(context);\\n+      \\n+      // Validate inputs\\n+      const inputValidation = this.validateInputs(algorithmInput);\\n+      if (!inputValidation.valid) {\\n+        return {\\n+          success: false,\\n+          data: algorithmInput,\\n+          metadata: {\\n+            completedAt: new Date(),\\n+            duration: this.calculateDuration(context.startTime)\\n+          },\\n+          errors: inputValidation.errors\\n+        };\\n+      }\\n+\\n+      // Execute algorithm\\n+      const result = await this.executeAlgorithm(algorithmInput);\\n+      \\n+      // Validate outputs\\n+      const outputValidation = this.validateOutputs(result);\\n+      if (!outputValidation.valid) {\\n+        return {\\n+          success: false,\\n+          data: result,\\n+          metadata: {\\n+            completedAt: new Date(),\\n+            duration: this.calculateDuration(context.startTime),\\n+            requiresManualReview: true\\n+          },\\n+          errors: outputValidation.errors\\n+        };\\n+      }\\n+\\n+      return {\\n+        success: true,\\n+        data: result,\\n+        metadata: {\\n+          algorithmVersion: this.implementation.version,\\n+          executionTime: this.calculateDuration(context.startTime),\\n+          completedAt: new Date()\\n+        }\\n+      };\\n+\\n+    } catch (error) {\\n+      return {\\n+        success: false,\\n+        data: null,\\n+        metadata: {\\n+          completedAt: new Date(),\\n+          duration: this.calculateDuration(context.startTime),\\n+          requiresManualIntervention: true,\\n+          error: error instanceof Error ? error.message : String(error)\\n+        },\\n+        errors: [{\\n+          code: 'ALGORITHM_ERROR',\\n+          message: error instanceof Error ? error.message : String(error),\\n+          severity: 'error'\\n+        }]\\n+      };\\n+    }\\n+  }\\n+\\n+  // =============================================================================\\n+  // Algorithm-specific Methods\\n+  // =============================================================================\\n+\\n+  /**\\n+   * Extract algorithm inputs from context\\n+   */\\n+  protected extractInputs(context: StepContext): AlgorithmInput {\\n+    // TODO: Implement based on step configuration\\n+    // For now, return basic context data\\n+    return {\\n+      stepContext: context.inputData,\\n+      parameters: this.parameters\\n+    };\\n+  }\\n+\\n+  /**\\n+   * Execute the algorithm (override in generated classes)\\n+   */\\n+  protected async executeAlgorithm(input: AlgorithmInput): Promise<AlgorithmOutput> {\\n+    // Default implementation - override in generated step classes\\n+    throw new Error('Algorithm implementation required');\\n+  }\\n+\\n+  /**\\n+   * Validate algorithm inputs\\n+   */\\n+  protected validateInputs(input: AlgorithmInput): ValidationResult {\\n+    // Basic validation - override for specific requirements\\n+    return {\\n+      valid: true,\\n+      errors: []\\n+    };\\n+  }\\n+\\n+  /**\\n+   * Validate algorithm outputs\\n+   */\\n+  protected validateOutputs(output: AlgorithmOutput): ValidationResult {\\n+    // Basic validation - override for specific requirements\\n+    return {\\n+      valid: true,\\n+      errors: []\\n+    };\\n+  }\\n+}\\n\\\\ No newline at end of file\\n\"\n+    },\n+    {\n+      \"filepath\": \"packages/orgata-framework/src/index.ts\",\n+      \"oldHash\": \"\",\n+      \"newHash\": \"b5180c194cfe7afa2d44c191270f227c4eef6d93\",\n+      \"timestamp\": \"2025-07-23T21:15:35.127Z\",\n+      \"changeType\": \"content\",\n+      \"gitDiff\": \"diff --git a/packages/orgata-framework/src/index.ts b/packages/orgata-framework/src/index.ts\\nnew file mode 100644\\nindex 0000000..b5180c1\\n--- /dev/null\\n+++ b/packages/orgata-framework/src/index.ts\\n@@ -0,0 +1,166 @@\\n+/**\\n+ * Orgata Framework - React-like framework for business processes\\n+ * \\n+ * Main entry point for the @orgata/framework package.\\n+ * Exports all core classes, types, and utilities.\\n+ * \\n+ * Based on design specification:\\n+ * - Framework Architecture: ../design-docs/008-orgata-framework/ORGATA_FRAMEWORK_ARCHITECTURE.md\\n+ * - API Specification: ../design-docs/008-orgata-framework/FRAMEWORK_API_SPECIFICATION.md\\n+ */\\n+\\n+// =============================================================================\\n+// Core Classes\\n+// =============================================================================\\n+\\n+export { Process } from './core/Process';\\n+export { Step, HumanStep, AgentStep, AlgorithmStep } from './core/Step';\\n+\\n+// =============================================================================\\n+// State Management\\n+// =============================================================================\\n+\\n+export { ProcessState } from './state/ProcessState';\\n+export {\\n+  StepDataEvent,\\n+  StepNavigationEvent,\\n+  StepSkippedEvent,\\n+  StatusChangeEvent,\\n+  ExceptionEvent\\n+} from './state/ProcessState';\\n+\\n+// =============================================================================\\n+// Types and Interfaces\\n+// =============================================================================\\n+\\n+export type {\\n+  // Core Configuration Types\\n+  ProcessConfig,\\n+  StepConfig,\\n+  HumanStepConfig,\\n+  AgentStepConfig,\\n+  AlgorithmStepConfig,\\n+\\n+  // Context and Execution Types\\n+  ProcessContext,\\n+  StepContext,\\n+  BusinessContext,\\n+  UserPermissions,\\n+  UserPreferences,\\n+\\n+  // Result Types\\n+  ProcessResult,\\n+  StepResult,\\n+  ProcessMetadata,\\n+  StepMetadata,\\n+  StepError,\\n+  StepWarning,\\n+\\n+  // Form and UI Types\\n+  FormModel,\\n+  FormField,\\n+  FieldValidation,\\n+  FieldOption,\\n+  ConditionalLogic,\\n+  LayoutConfig,\\n+  ValidationConfig,\\n+  ComponentDefinition,\\n+  ComponentProps,\\n+  ComponentStyling,\\n+  ComponentBehavior,\\n+\\n+  // AI Agent Types\\n+  AgentPrompt,\\n+  AgentContext,\\n+  AgentResponse,\\n+  AgentConstraints,\\n+  PromptContext,\\n+  PromptConstraints,\\n+  BusinessData,\\n+\\n+  // Algorithm Types\\n+  AlgorithmImplementation,\\n+  AlgorithmParameters,\\n+  AlgorithmInput,\\n+  AlgorithmOutput,\\n+\\n+  // State Management Types\\n+  StepData,\\n+  ProcessEvent,\\n+  ProcessException,\\n+  ExceptionImpact,\\n+  ExceptionResolution,\\n+\\n+  // Validation Types\\n+  ValidationResult,\\n+  ValidationError,\\n+  ValidationWarning,\\n+  ValidationRule,\\n+  ValidationCondition,\\n+\\n+  // Override and Flexibility Types\\n+  OverrideRequest,\\n+  OverrideResult,\\n+  OverrideImplementation,\\n+  ConsequenceAnalysis,\\n+  DataRequirement,\\n+\\n+  // Audit Types\\n+  AuditEntry,\\n+  AuditAction,\\n+  AuditDetails,\\n+  AuditImpact,\\n+\\n+  // Utility Types\\n+  OutputRequirement,\\n+  InputRequirement,\\n+  UIConstraints,\\n+  StepExecutor,\\n+  ValidationFunction,\\n+  EventHandler\\n+} from './types';\\n+\\n+// =============================================================================\\n+// Enums\\n+// =============================================================================\\n+\\n+export {\\n+  ProcessStatus,\\n+  StepType,\\n+  FieldType,\\n+  OverrideType,\\n+  ExceptionType\\n+} from './types';\\n+\\n+// =============================================================================\\n+// Re-exports\\n+// =============================================================================\\n+\\n+export { EventEmitter } from './types';\\n+\\n+// =============================================================================\\n+// Framework Version and Metadata\\n+// =============================================================================\\n+\\n+export const FRAMEWORK_VERSION = '0.1.0';\\n+export const FRAMEWORK_NAME = '@orgata/framework';\\n+\\n+export const FRAMEWORK_METADATA = {\\n+  name: FRAMEWORK_NAME,\\n+  version: FRAMEWORK_VERSION,\\n+  description: 'React-like framework for business processes with complete flexibility',\\n+  philosophy: 'Facilitate, Never Constrain',\\n+  features: [\\n+    'Immutable state management with event sourcing',\\n+    'Complete audit trail and exception tracking',\\n+    'AI-powered flexibility and override system',\\n+    'Never rewrite history - forward-only updates',\\n+    'Universal step skipping with manual data provision',\\n+    'Three specialized step types: Human, Agent, Algorithm'\\n+  ],\\n+  designDocs: [\\n+    '../design-docs/008-orgata-framework/ORGATA_FRAMEWORK_ARCHITECTURE.md',\\n+    '../design-docs/008-orgata-framework/FRAMEWORK_API_SPECIFICATION.md',\\n+    '../design-docs/008-orgata-framework/IMPLEMENTATION_PLAN.md'\\n+  ]\\n+} as const;\\n\\\\ No newline at end of file\\n\"\n+    },\n+    {\n+      \"filepath\": \"packages/orgata-framework/src/state/ProcessState.ts\",\n+      \"oldHash\": \"\",\n+      \"newHash\": \"62e692279dd34636c05593e673072a7ff6d29637\",\n+      \"timestamp\": \"2025-07-23T21:15:35.165Z\",\n+      \"changeType\": \"content\",\n+      \"gitDiff\": \"diff --git a/packages/orgata-framework/src/state/ProcessState.ts b/packages/orgata-framework/src/state/ProcessState.ts\\nnew file mode 100644\\nindex 0000000..62e6922\\n--- /dev/null\\n+++ b/packages/orgata-framework/src/state/ProcessState.ts\\n@@ -0,0 +1,541 @@\\n+/**\\n+ * Immutable ProcessState with Event Sourcing for Orgata Framework\\n+ * \\n+ * Implements the core \\\"never rewrite history\\\" principle with event-sourced\\n+ * state management and complete audit trail capabilities.\\n+ * \\n+ * Based on design specification:\\n+ * - Framework Architecture: ../../design-docs/008-orgata-framework/ORGATA_FRAMEWORK_ARCHITECTURE.md\\n+ * - Implementation Plan: ../../design-docs/008-orgata-framework/IMPLEMENTATION_PLAN.md\\n+ */\\n+\\n+import { produce, immerable } from 'immer';\\n+import { ProcessStatus } from '../types';\\n+import type {\\n+  ProcessEvent,\\n+  ProcessException,\\n+  StepData,\\n+  AuditEntry,\\n+  ValidationResult,\\n+  DataRequirement\\n+} from '../types';\\n+import { ProcessEventBase } from '../types';\\n+\\n+// =============================================================================\\n+// Core ProcessState Class (Immutable)\\n+// =============================================================================\\n+\\n+export class ProcessState {\\n+  [immerable] = true;\\n+  readonly processId: string;\\n+  readonly currentStepId: string | null;\\n+  readonly status: ProcessStatus;\\n+  readonly stepData: ReadonlyMap<string, StepData>;\\n+  readonly history: readonly ProcessEvent[];\\n+  readonly exceptions: readonly ProcessException[];\\n+  readonly startedAt: Date;\\n+  readonly lastUpdatedAt: Date;\\n+\\n+  private constructor(\\n+    processId: string,\\n+    currentStepId: string | null = null,\\n+    status: ProcessStatus = ProcessStatus.NOT_STARTED,\\n+    stepData: ReadonlyMap<string, StepData> = new Map(),\\n+    history: readonly ProcessEvent[] = [],\\n+    exceptions: readonly ProcessException[] = [],\\n+    startedAt: Date = new Date(),\\n+    lastUpdatedAt: Date = new Date()\\n+  ) {\\n+    this.processId = processId;\\n+    this.currentStepId = currentStepId;\\n+    this.status = status;\\n+    this.stepData = stepData;\\n+    this.history = history;\\n+    this.exceptions = exceptions;\\n+    this.startedAt = startedAt;\\n+    this.lastUpdatedAt = lastUpdatedAt;\\n+  }\\n+\\n+  // =============================================================================\\n+  // Factory Methods\\n+  // =============================================================================\\n+\\n+  /**\\n+   * Create new ProcessState\\n+   */\\n+  static create(processId: string): ProcessState {\\n+    const now = new Date();\\n+    return new ProcessState(processId, null, ProcessStatus.NOT_STARTED, new Map(), [], [], now, now);\\n+  }\\n+\\n+  // =============================================================================\\n+  // State Queries\\n+  // =============================================================================\\n+\\n+  /**\\n+   * Get step data by ID\\n+   */\\n+  getStepData(stepId: string): StepData | undefined {\\n+    return this.stepData.get(stepId);\\n+  }\\n+\\n+  /**\\n+   * Get step history for specific step\\n+   */\\n+  getStepHistory(stepId: string): ProcessEvent[] {\\n+    return this.history.filter(event => \\n+      'stepId' in event && event.stepId === stepId\\n+    );\\n+  }\\n+\\n+  /**\\n+   * Check if step is completed\\n+   */\\n+  isStepCompleted(stepId: string): boolean {\\n+    const stepData = this.stepData.get(stepId);\\n+    return stepData?.validated === true;\\n+  }\\n+\\n+  /**\\n+   * Check if step is skipped\\n+   */\\n+  isStepSkipped(stepId: string): boolean {\\n+    return this.history.some(event => \\n+      event.type === 'step_skipped' && \\n+      'stepId' in event && \\n+      event.stepId === stepId\\n+    );\\n+  }\\n+\\n+  /**\\n+   * Get complete audit trail\\n+   */\\n+  getAuditTrail(): AuditEntry[] {\\n+    return this.history.map(event => this.eventToAuditEntry(event));\\n+  }\\n+\\n+  // =============================================================================\\n+  // Navigation Helpers\\n+  // =============================================================================\\n+\\n+  /**\\n+   * Check if can navigate to specific step\\n+   */\\n+  canGoToStep(stepId: string): boolean {\\n+    // Framework philosophy: maximum flexibility\\n+    // Users can always navigate to any step\\n+    return true;\\n+  }\\n+\\n+  /**\\n+   * Check if can skip specific step\\n+   */\\n+  canSkipStep(stepId: string): boolean {\\n+    // Framework philosophy: users can always skip steps\\n+    return true;\\n+  }\\n+\\n+  /**\\n+   * Get next step (implementation dependent on step order)\\n+   */\\n+  getNextStep(): string | null {\\n+    // This would be implemented based on process definition\\n+    return null;\\n+  }\\n+\\n+  /**\\n+   * Get previous step (implementation dependent on step order)\\n+   */\\n+  getPreviousStep(): string | null {\\n+    // This would be implemented based on process definition\\n+    return null;\\n+  }\\n+\\n+  // =============================================================================\\n+  // Validation\\n+  // =============================================================================\\n+\\n+  /**\\n+   * Validate step data against requirements\\n+   */\\n+  validateStepData(stepId: string, data: any): ValidationResult {\\n+    // Basic validation - can be extended\\n+    return {\\n+      valid: true,\\n+      errors: []\\n+    };\\n+  }\\n+\\n+  /**\\n+   * Check data requirements for step\\n+   */\\n+  checkDataRequirements(stepId: string): DataRequirement[] {\\n+    // TODO: Implement based on step definitions\\n+    return [];\\n+  }\\n+\\n+  // =============================================================================\\n+  // Immutable State Transitions\\n+  // =============================================================================\\n+\\n+  /**\\n+   * Create new state with step data\\n+   */\\n+  withStepData(stepId: string, data: StepData): ProcessState {\\n+    const event = new StepDataEvent(\\n+      this.generateEventId(),\\n+      this.processId,\\n+      new Date(),\\n+      stepId,\\n+      data\\n+    );\\n+\\n+    return this.applyEvent(event);\\n+  }\\n+\\n+  /**\\n+   * Create new state with current step\\n+   */\\n+  withCurrentStep(stepId: string): ProcessState {\\n+    const event = new StepNavigationEvent(\\n+      this.generateEventId(),\\n+      this.processId,\\n+      new Date(),\\n+      stepId,\\n+      'navigation'\\n+    );\\n+\\n+    return this.applyEvent(event);\\n+  }\\n+\\n+  /**\\n+   * Create new state with step navigation\\n+   */\\n+  withStepNavigation(stepId: string, reason: string): ProcessState {\\n+    const event = new StepNavigationEvent(\\n+      this.generateEventId(),\\n+      this.processId,\\n+      new Date(),\\n+      stepId,\\n+      reason\\n+    );\\n+\\n+    return this.applyEvent(event);\\n+  }\\n+\\n+  /**\\n+   * Create new state with step skip\\n+   */\\n+  withStepSkip(stepId: string, reason: string, manualData?: any): ProcessState {\\n+    const event = new StepSkippedEvent(\\n+      this.generateEventId(),\\n+      this.processId,\\n+      new Date(),\\n+      stepId,\\n+      reason,\\n+      manualData\\n+    );\\n+\\n+    return this.applyEvent(event);\\n+  }\\n+\\n+  /**\\n+   * Create new state with exception\\n+   */\\n+  withException(exception: ProcessException): ProcessState {\\n+    const event = new ExceptionEvent(\\n+      this.generateEventId(),\\n+      this.processId,\\n+      new Date(),\\n+      exception\\n+    );\\n+\\n+    return this.applyEvent(event);\\n+  }\\n+\\n+  /**\\n+   * Create new state with status\\n+   */\\n+  withStatus(status: ProcessStatus): ProcessState {\\n+    const event = new StatusChangeEvent(\\n+      this.generateEventId(),\\n+      this.processId,\\n+      new Date(),\\n+      status\\n+    );\\n+\\n+    return this.applyEvent(event);\\n+  }\\n+\\n+  // =============================================================================\\n+  // Event Sourcing Implementation\\n+  // =============================================================================\\n+\\n+  /**\\n+   * Apply event to create new immutable state\\n+   */\\n+  private applyEvent(event: ProcessEvent): ProcessState {\\n+    const newHistory = [...this.history, event];\\n+    \\n+    return produce(this, draft => {\\n+      // Apply event-specific changes\\n+      if (event instanceof StepDataEvent) {\\n+        draft.stepData.set(event.stepId, event.data);\\n+      } else if (event instanceof StepNavigationEvent) {\\n+        draft.currentStepId = event.stepId;\\n+      } else if (event instanceof StatusChangeEvent) {\\n+        draft.status = event.status;\\n+      } else if (event instanceof ExceptionEvent) {\\n+        draft.exceptions.push(event.exception);\\n+      }\\n+      \\n+      draft.history = newHistory;\\n+      draft.lastUpdatedAt = event.timestamp;\\n+    });\\n+  }\\n+\\n+  /**\\n+   * Convert event to audit entry\\n+   */\\n+  private eventToAuditEntry(event: ProcessEvent): AuditEntry {\\n+    return {\\n+      id: event.id,\\n+      timestamp: event.timestamp,\\n+      processId: event.processId,\\n+      stepId: 'stepId' in event ? (event as any).stepId : undefined,\\n+      userId: event.userId || 'system',\\n+      action: {\\n+        type: event.type,\\n+        description: this.getEventDescription(event),\\n+        automated: true\\n+      },\\n+      details: {\\n+        before: null,\\n+        after: this.getEventData(event),\\n+        metadata: { eventType: event.type }\\n+      },\\n+      impact: {\\n+        scope: 'step',\\n+        severity: 'info',\\n+        categories: [event.type]\\n+      }\\n+    };\\n+  }\\n+\\n+  private getEventDescription(event: ProcessEvent): string {\\n+    switch (event.type) {\\n+      case 'step_data':\\n+        return `Step data updated`;\\n+      case 'step_navigation':\\n+        return `Navigated to step`;\\n+      case 'step_skipped':\\n+        return `Step skipped`;\\n+      case 'status_change':\\n+        return `Process status changed`;\\n+      case 'exception':\\n+        return `Exception occurred`;\\n+      default:\\n+        return `Process event: ${event.type}`;\\n+    }\\n+  }\\n+\\n+  private getEventData(event: ProcessEvent): any {\\n+    if (event instanceof StepDataEvent) {\\n+      return event.data;\\n+    } else if (event instanceof StepNavigationEvent) {\\n+      return { stepId: event.stepId, reason: event.reason };\\n+    } else if (event instanceof StepSkippedEvent) {\\n+      return { stepId: event.stepId, reason: event.reason, manualData: event.manualData };\\n+    } else if (event instanceof StatusChangeEvent) {\\n+      return { status: event.status };\\n+    } else if (event instanceof ExceptionEvent) {\\n+      return event.exception;\\n+    }\\n+    return null;\\n+  }\\n+\\n+  private generateEventId(): string {\\n+    return Date.now().toString(36) + Math.random().toString(36).substring(2);\\n+  }\\n+}\\n+\\n+// =============================================================================\\n+// Process Event Implementations\\n+// =============================================================================\\n+\\n+export class StepDataEvent extends ProcessEventBase {\\n+  readonly id: string;\\n+  readonly processId: string;\\n+  readonly timestamp: Date;\\n+  readonly userId?: string;\\n+  readonly type = 'step_data';\\n+  readonly stepId: string;\\n+  readonly data: StepData;\\n+\\n+  constructor(\\n+    id: string,\\n+    processId: string,\\n+    timestamp: Date,\\n+    stepId: string,\\n+    data: StepData,\\n+    userId?: string\\n+  ) {\\n+    super();\\n+    this.id = id;\\n+    this.processId = processId;\\n+    this.timestamp = timestamp;\\n+    this.stepId = stepId;\\n+    this.data = data;\\n+    this.userId = userId;\\n+  }\\n+\\n+  apply(state: ProcessState): ProcessState {\\n+    return state.withStepData(this.stepId, this.data);\\n+  }\\n+}\\n+\\n+export class StepNavigationEvent extends ProcessEventBase {\\n+  readonly id: string;\\n+  readonly processId: string;\\n+  readonly timestamp: Date;\\n+  readonly userId?: string;\\n+  readonly type = 'step_navigation';\\n+  readonly stepId: string;\\n+  readonly reason: string;\\n+  readonly data: { stepId: string; reason: string };\\n+\\n+  constructor(\\n+    id: string,\\n+    processId: string,\\n+    timestamp: Date,\\n+    stepId: string,\\n+    reason: string,\\n+    userId?: string\\n+  ) {\\n+    super();\\n+    this.id = id;\\n+    this.processId = processId;\\n+    this.timestamp = timestamp;\\n+    this.stepId = stepId;\\n+    this.reason = reason;\\n+    this.userId = userId;\\n+    this.data = { stepId, reason };\\n+  }\\n+\\n+  apply(state: ProcessState): ProcessState {\\n+    return state.withCurrentStep(this.stepId);\\n+  }\\n+}\\n+\\n+export class StepSkippedEvent extends ProcessEventBase {\\n+  readonly id: string;\\n+  readonly processId: string;\\n+  readonly timestamp: Date;\\n+  readonly userId?: string;\\n+  readonly type = 'step_skipped';\\n+  readonly stepId: string;\\n+  readonly reason: string;\\n+  readonly manualData?: any;\\n+  readonly data: { stepId: string; reason: string; manualData?: any };\\n+\\n+  constructor(\\n+    id: string,\\n+    processId: string,\\n+    timestamp: Date,\\n+    stepId: string,\\n+    reason: string,\\n+    manualData?: any,\\n+    userId?: string\\n+  ) {\\n+    super();\\n+    this.id = id;\\n+    this.processId = processId;\\n+    this.timestamp = timestamp;\\n+    this.stepId = stepId;\\n+    this.reason = reason;\\n+    this.manualData = manualData;\\n+    this.userId = userId;\\n+    this.data = { stepId, reason, manualData };\\n+  }\\n+\\n+  apply(state: ProcessState): ProcessState {\\n+    // Create exception record for the skip\\n+    const exception: ProcessException = {\\n+      id: this.id,\\n+      type: 'STEP_SKIPPED' as any,\\n+      stepId: this.stepId,\\n+      timestamp: this.timestamp,\\n+      userId: this.userId || 'unknown',\\n+      reason: this.reason,\\n+      impact: {\\n+        severity: 'low',\\n+        affectedSteps: [],\\n+        estimatedDelay: 0,\\n+        riskFactors: ['manual_data_provided']\\n+      },\\n+      auditTrail: []\\n+    };\\n+\\n+    return state.withException(exception);\\n+  }\\n+}\\n+\\n+export class StatusChangeEvent extends ProcessEventBase {\\n+  readonly id: string;\\n+  readonly processId: string;\\n+  readonly timestamp: Date;\\n+  readonly userId?: string;\\n+  readonly type = 'status_change';\\n+  readonly status: ProcessStatus;\\n+  readonly data: { status: ProcessStatus };\\n+\\n+  constructor(\\n+    id: string,\\n+    processId: string,\\n+    timestamp: Date,\\n+    status: ProcessStatus,\\n+    userId?: string\\n+  ) {\\n+    super();\\n+    this.id = id;\\n+    this.processId = processId;\\n+    this.timestamp = timestamp;\\n+    this.status = status;\\n+    this.userId = userId;\\n+    this.data = { status };\\n+  }\\n+\\n+  apply(state: ProcessState): ProcessState {\\n+    return state.withStatus(this.status);\\n+  }\\n+}\\n+\\n+export class ExceptionEvent extends ProcessEventBase {\\n+  readonly id: string;\\n+  readonly processId: string;\\n+  readonly timestamp: Date;\\n+  readonly userId?: string;\\n+  readonly type = 'exception';\\n+  readonly exception: ProcessException;\\n+  readonly data: { exception: ProcessException };\\n+\\n+  constructor(\\n+    id: string,\\n+    processId: string,\\n+    timestamp: Date,\\n+    exception: ProcessException,\\n+    userId?: string\\n+  ) {\\n+    super();\\n+    this.id = id;\\n+    this.processId = processId;\\n+    this.timestamp = timestamp;\\n+    this.exception = exception;\\n+    this.userId = userId;\\n+    this.data = { exception };\\n+  }\\n+\\n+  apply(state: ProcessState): ProcessState {\\n+    return state.withException(this.exception);\\n+  }\\n+}\\n\\\\ No newline at end of file\\n\"\n+    },\n+    {\n+      \"filepath\": \"packages/orgata-framework/src/types/index.ts\",\n+      \"oldHash\": \"\",\n+      \"newHash\": \"2c8222be7f70d2d6898d6990665b02e73dce0dc2\",\n+      \"timestamp\": \"2025-07-23T21:15:35.203Z\",\n+      \"changeType\": \"content\",\n+      \"gitDiff\": \"diff --git a/packages/orgata-framework/src/types/index.ts b/packages/orgata-framework/src/types/index.ts\\nnew file mode 100644\\nindex 0000000..2c8222b\\n--- /dev/null\\n+++ b/packages/orgata-framework/src/types/index.ts\\n@@ -0,0 +1,664 @@\\n+/**\\n+ * Core types for Orgata Framework\\n+ * \\n+ * Based on design specification:\\n+ * - Framework API Specification: ../../design-docs/008-orgata-framework/FRAMEWORK_API_SPECIFICATION.md\\n+ */\\n+\\n+import { EventEmitter } from 'eventemitter3';\\n+\\n+// =============================================================================\\n+// Core Enums and Primitives\\n+// =============================================================================\\n+\\n+export enum ProcessStatus {\\n+  NOT_STARTED = 'not_started',\\n+  RUNNING = 'running', \\n+  PAUSED = 'paused',\\n+  COMPLETED = 'completed',\\n+  FAILED = 'failed',\\n+  CANCELLED = 'cancelled'\\n+}\\n+\\n+export enum StepType {\\n+  HUMAN = 'human',\\n+  AGENT = 'agent', \\n+  ALGORITHM = 'algorithm'\\n+}\\n+\\n+export enum FieldType {\\n+  TEXT = 'text',\\n+  EMAIL = 'email',\\n+  NUMBER = 'number',\\n+  DATE = 'date',\\n+  TEXTAREA = 'textarea',\\n+  SELECT = 'select',\\n+  MULTISELECT = 'multiselect',\\n+  CHECKBOX = 'checkbox',\\n+  RADIO = 'radio',\\n+  FILE_UPLOAD = 'file_upload',\\n+  CURRENCY = 'currency',\\n+  PHONE = 'phone',\\n+  URL = 'url',\\n+  JSON = 'json',\\n+  CUSTOM = 'custom'\\n+}\\n+\\n+export enum OverrideType {\\n+  SKIP_STEP = 'skip_step',\\n+  MODIFY_UI = 'modify_ui',\\n+  CHANGE_DATA = 'change_data', \\n+  ALTER_FLOW = 'alter_flow',\\n+  BYPASS_VALIDATION = 'bypass_validation'\\n+}\\n+\\n+export enum ExceptionType {\\n+  STEP_SKIPPED = 'step_skipped',\\n+  VALIDATION_OVERRIDDEN = 'validation_overridden',\\n+  MANUAL_DATA_PROVIDED = 'manual_data_provided',\\n+  FLOW_MODIFIED = 'flow_modified',\\n+  UI_BYPASSED = 'ui_bypassed'\\n+}\\n+\\n+// =============================================================================\\n+// Configuration Interfaces\\n+// =============================================================================\\n+\\n+export interface ProcessConfig {\\n+  name: string;\\n+  description?: string;\\n+  layer: 'L0' | 'L1' | 'L2';\\n+  estimatedDuration?: string;\\n+  metadata?: Record<string, any>;\\n+  validation?: ProcessValidation;\\n+  permissions?: ProcessPermissions;\\n+}\\n+\\n+export interface StepConfig {\\n+  id: string;\\n+  name: string;\\n+  description: string;\\n+  type: StepType;\\n+  metadata?: Record<string, any>;\\n+}\\n+\\n+export interface HumanStepConfig extends StepConfig {\\n+  model: FormModel;\\n+  view: ComponentDefinition;\\n+  validation?: ValidationRules;\\n+}\\n+\\n+export interface AgentStepConfig extends StepConfig {\\n+  prompt: AgentPrompt;\\n+  context: AgentContext;\\n+  constraints?: AgentConstraints;\\n+}\\n+\\n+export interface AlgorithmStepConfig extends StepConfig {\\n+  implementation: AlgorithmImplementation;\\n+  parameters?: AlgorithmParameters;\\n+}\\n+\\n+// =============================================================================\\n+// Context and Execution Interfaces\\n+// =============================================================================\\n+\\n+export interface ProcessContext {\\n+  processId: string;\\n+  userId: string;\\n+  sessionId: string;\\n+  environment: 'development' | 'staging' | 'production';\\n+  businessContext: BusinessContext;\\n+  permissions: UserPermissions;\\n+  preferences: UserPreferences;\\n+}\\n+\\n+export interface StepContext extends ProcessContext {\\n+  stepId: string;\\n+  stepType: StepType;\\n+  inputData: any;\\n+  previousStepResults: Map<string, StepResult>;\\n+  requiredOutputs: OutputRequirement[];\\n+  validationRules: ValidationRule[];\\n+  startTime: Date;\\n+  userAgent?: string;\\n+}\\n+\\n+export interface BusinessContext {\\n+  industry: string;\\n+  businessSize: 'solo' | 'small' | 'medium' | 'enterprise';\\n+  organizationId: string;\\n+  currentProcesses: Map<string, any>;\\n+  userRole: string;\\n+}\\n+\\n+export interface UserPermissions {\\n+  canSkipSteps: boolean;\\n+  canOverrideValidation: boolean;\\n+  canModifyProcess: boolean;\\n+  canViewAuditTrail: boolean;\\n+  allowedActions: string[];\\n+}\\n+\\n+export interface UserPreferences {\\n+  uiTheme: 'light' | 'dark';\\n+  language: string;\\n+  timezone: string;\\n+  notificationSettings: NotificationSettings;\\n+}\\n+\\n+export interface NotificationSettings {\\n+  email: boolean;\\n+  inApp: boolean;\\n+  frequency: 'immediate' | 'hourly' | 'daily';\\n+}\\n+\\n+// =============================================================================\\n+// Result and Response Interfaces  \\n+// =============================================================================\\n+\\n+export interface ProcessResult {\\n+  success: boolean;\\n+  processId: string;\\n+  completedSteps: string[];\\n+  finalData: any;\\n+  metadata: ProcessMetadata;\\n+  auditTrail: AuditEntry[];\\n+  exceptions?: ProcessException[];\\n+}\\n+\\n+export interface StepResult {\\n+  success: boolean;\\n+  data: any;\\n+  metadata: StepMetadata;\\n+  nextStepId?: string;\\n+  errors?: StepError[];\\n+  warnings?: StepWarning[];\\n+}\\n+\\n+export interface ProcessMetadata {\\n+  startedAt: Date;\\n+  completedAt?: Date;\\n+  duration?: number;\\n+  executionMode: string;\\n+  version: string;\\n+}\\n+\\n+export interface StepMetadata {\\n+  completedAt: Date;\\n+  duration?: number;\\n+  userAgent?: string;\\n+  overrides?: OverrideRecord[];\\n+  \\n+  // Agent-specific metadata\\n+  requiresHumanReview?: boolean;\\n+  agentConfidence?: number;\\n+  reasoning?: string;\\n+  confidence?: number;\\n+  requiresReview?: boolean;\\n+  \\n+  // Algorithm-specific metadata\\n+  requiresManualReview?: boolean;\\n+  algorithmVersion?: string;\\n+  executionTime?: number;\\n+  requiresManualIntervention?: boolean;\\n+  error?: string;\\n+}\\n+\\n+export interface StepError {\\n+  code: string;\\n+  message: string;\\n+  field?: string;\\n+  severity: 'error' | 'warning' | 'info';\\n+}\\n+\\n+export interface StepWarning {\\n+  code: string;\\n+  message: string;\\n+  suggestion?: string;\\n+}\\n+\\n+// =============================================================================\\n+// Form and UI Interfaces\\n+// =============================================================================\\n+\\n+export interface FormModel {\\n+  fields: FormField[];\\n+  layout: LayoutConfig;\\n+  validation: ValidationConfig;\\n+  metadata: FormMetadata;\\n+}\\n+\\n+export interface FormField {\\n+  id: string;\\n+  name: string;\\n+  type: FieldType;\\n+  label: string;\\n+  placeholder?: string;\\n+  helpText?: string;\\n+  required: boolean;\\n+  validation: FieldValidation[];\\n+  defaultValue?: any;\\n+  options?: FieldOption[];\\n+  conditionalLogic?: ConditionalLogic;\\n+}\\n+\\n+export interface FieldValidation {\\n+  type: string;\\n+  value?: any;\\n+  message: string;\\n+}\\n+\\n+export interface FieldOption {\\n+  value: string;\\n+  label: string;\\n+  disabled?: boolean;\\n+}\\n+\\n+export interface ConditionalLogic {\\n+  condition: string;\\n+  action: 'show' | 'hide' | 'require' | 'disable';\\n+  dependsOn: string[];\\n+}\\n+\\n+export interface LayoutConfig {\\n+  type: string;\\n+  columns: number;\\n+  sections?: LayoutSection[];\\n+}\\n+\\n+export interface LayoutSection {\\n+  title: string;\\n+  fields: string[];\\n+  collapsible?: boolean;\\n+}\\n+\\n+export interface ValidationConfig {\\n+  strategy: 'on-submit' | 'on-blur' | 'real-time';\\n+  showErrorsOn: 'always' | 'after-submit' | 'after-interaction';\\n+}\\n+\\n+export interface FormMetadata {\\n+  version: string;\\n+  generatedFrom: string;\\n+  customizations?: Record<string, any>;\\n+}\\n+\\n+export interface ComponentDefinition {\\n+  type: string;\\n+  props: ComponentProps;\\n+  children?: ComponentDefinition[];\\n+  styling?: ComponentStyling;\\n+  behavior?: ComponentBehavior;\\n+}\\n+\\n+export interface ComponentProps {\\n+  [key: string]: any;\\n+}\\n+\\n+export interface ComponentStyling {\\n+  className?: string;\\n+  style?: Record<string, any>;\\n+  theme?: string;\\n+}\\n+\\n+export interface ComponentBehavior {\\n+  onClick?: string;\\n+  onChange?: string;\\n+  onSubmit?: string;\\n+  validation?: ValidationBehavior;\\n+}\\n+\\n+export interface ValidationBehavior {\\n+  realTime: boolean;\\n+  debounceMs: number;\\n+  showErrors: boolean;\\n+}\\n+\\n+// =============================================================================\\n+// AI Agent Interfaces\\n+// =============================================================================\\n+\\n+export interface AgentPrompt {\\n+  systemPrompt: string;\\n+  userPrompt: string;\\n+  context: PromptContext;\\n+  constraints: PromptConstraints;\\n+  examples?: PromptExample[];\\n+}\\n+\\n+export interface PromptContext {\\n+  businessDomain: string;\\n+  expectedFormat: string;\\n+  qualityCriteria: string[];\\n+}\\n+\\n+export interface PromptConstraints {\\n+  maxTokens: number;\\n+  temperature: number;\\n+  requireStructuredOutput: boolean;\\n+}\\n+\\n+export interface PromptExample {\\n+  input: string;\\n+  output: string;\\n+  explanation: string;\\n+}\\n+\\n+export interface AgentContext {\\n+  processContext: ProcessContext;\\n+  stepContext: StepContext;\\n+  businessData: BusinessData;\\n+  previousResults: AgentResult[];\\n+  availableTools: AgentTool[];\\n+}\\n+\\n+export interface BusinessData {\\n+  [key: string]: any;\\n+}\\n+\\n+export interface AgentResult {\\n+  stepId: string;\\n+  result: any;\\n+  confidence: number;\\n+  timestamp: Date;\\n+}\\n+\\n+export interface AgentTool {\\n+  name: string;\\n+  description: string;\\n+  parameters: ToolParameter[];\\n+}\\n+\\n+export interface ToolParameter {\\n+  name: string;\\n+  type: string;\\n+  required: boolean;\\n+  description: string;\\n+}\\n+\\n+export interface AgentResponse {\\n+  content: string;\\n+  confidence: number;\\n+  reasoning: string;\\n+  structuredData?: any;\\n+  suggestedActions?: SuggestedAction[];\\n+  requiresHumanReview: boolean;\\n+}\\n+\\n+export interface SuggestedAction {\\n+  type: string;\\n+  description: string;\\n+  confidence: number;\\n+}\\n+\\n+export interface AgentConstraints {\\n+  timeout: number;\\n+  retryAttempts: number;\\n+  fallbackToHuman: boolean;\\n+}\\n+\\n+// =============================================================================\\n+// Algorithm Interfaces\\n+// =============================================================================\\n+\\n+export interface AlgorithmImplementation {\\n+  type: string;\\n+  config: Record<string, any>;\\n+  version: string;\\n+}\\n+\\n+export interface AlgorithmParameters {\\n+  [key: string]: any;\\n+}\\n+\\n+export interface AlgorithmInput {\\n+  [key: string]: any;\\n+}\\n+\\n+export interface AlgorithmOutput {\\n+  [key: string]: any;\\n+}\\n+\\n+// =============================================================================\\n+// State Management Interfaces\\n+// =============================================================================\\n+\\n+export interface StepData {\\n+  stepId: string;\\n+  data: any;\\n+  timestamp: Date;\\n+  source: 'user' | 'agent' | 'algorithm' | 'manual';\\n+  validated: boolean;\\n+}\\n+\\n+export interface ProcessEvent {\\n+  id: string;\\n+  processId: string;\\n+  timestamp: Date;\\n+  userId?: string;\\n+  type: string;\\n+  data: any;\\n+}\\n+\\n+export interface ProcessException {\\n+  id: string;\\n+  type: ExceptionType;\\n+  stepId: string;\\n+  timestamp: Date;\\n+  userId: string;\\n+  reason: string;\\n+  impact: ExceptionImpact;\\n+  resolution?: ExceptionResolution;\\n+  auditTrail: AuditEntry[];\\n+}\\n+\\n+export interface ExceptionImpact {\\n+  severity: 'low' | 'medium' | 'high' | 'critical';\\n+  affectedSteps: string[];\\n+  estimatedDelay: number;\\n+  riskFactors: string[];\\n+}\\n+\\n+export interface ExceptionResolution {\\n+  strategy: string;\\n+  implementedBy: string;\\n+  timestamp: Date;\\n+  effectiveness: number;\\n+}\\n+\\n+// =============================================================================\\n+// Validation Interfaces\\n+// =============================================================================\\n+\\n+export interface ValidationResult {\\n+  valid: boolean;\\n+  errors: ValidationError[];\\n+  warnings?: ValidationWarning[];\\n+}\\n+\\n+export interface ValidationError {\\n+  field?: string;\\n+  code: string;\\n+  message: string;\\n+  severity: 'error' | 'warning' | 'info';\\n+}\\n+\\n+export interface ValidationWarning {\\n+  field?: string;\\n+  code: string;\\n+  message: string;\\n+  suggestion?: string;\\n+}\\n+\\n+export interface ValidationRule {\\n+  type: string;\\n+  field?: string;\\n+  condition: ValidationCondition;\\n+  message: string;\\n+  severity: 'error' | 'warning' | 'info';\\n+}\\n+\\n+export interface ValidationCondition {\\n+  operator: string;\\n+  value: any;\\n+  field?: string;\\n+}\\n+\\n+export interface ProcessValidation {\\n+  requireAllSteps: boolean;\\n+  allowSkipping: boolean;\\n+  customRules: ValidationRule[];\\n+}\\n+\\n+export interface ProcessPermissions {\\n+  execute: string[];\\n+  modify: string[];\\n+  view: string[];\\n+  audit: string[];\\n+}\\n+\\n+export interface ValidationRules {\\n+  fields: Record<string, FieldValidation[]>;\\n+  custom: ValidationRule[];\\n+}\\n+\\n+// =============================================================================\\n+// Override and Flexibility Interfaces\\n+// =============================================================================\\n+\\n+export interface OverrideRequest {\\n+  type: OverrideType;\\n+  stepId: string;\\n+  userMessage: string;\\n+  currentContext: ProcessContext;\\n+  proposedChange?: any;\\n+}\\n+\\n+export interface OverrideResult {\\n+  approved: boolean;\\n+  implementation: OverrideImplementation;\\n+  consequences: ConsequenceAnalysis;\\n+  auditEntry: AuditEntry;\\n+  alternatives?: OverrideAlternative[];\\n+}\\n+\\n+export interface OverrideImplementation {\\n+  type: string;\\n+  changes: Record<string, any>;\\n+  instructions: string;\\n+}\\n+\\n+export interface ConsequenceAnalysis {\\n+  riskLevel: 'low' | 'medium' | 'high' | 'critical';\\n+  missingData: string[];\\n+  affectedSteps: string[];\\n+  suggestedMitigations: string[];\\n+  dataRequirements: DataRequirement[];\\n+}\\n+\\n+export interface DataRequirement {\\n+  field: string;\\n+  type: string;\\n+  required: boolean;\\n+  description: string;\\n+  source?: string;\\n+}\\n+\\n+export interface OverrideAlternative {\\n+  description: string;\\n+  implementation: OverrideImplementation;\\n+  riskLevel: 'low' | 'medium' | 'high';\\n+}\\n+\\n+export interface OverrideRecord {\\n+  type: OverrideType;\\n+  timestamp: Date;\\n+  reason: string;\\n+  implementation: string;\\n+}\\n+\\n+// =============================================================================\\n+// Audit and Tracking Interfaces\\n+// =============================================================================\\n+\\n+export interface AuditEntry {\\n+  id: string;\\n+  timestamp: Date;\\n+  processId: string;\\n+  stepId?: string;\\n+  userId: string;\\n+  action: AuditAction;\\n+  details: AuditDetails;\\n+  impact: AuditImpact;\\n+}\\n+\\n+export interface AuditAction {\\n+  type: string;\\n+  description: string;\\n+  automated: boolean;\\n+}\\n+\\n+export interface AuditDetails {\\n+  before?: any;\\n+  after?: any;\\n+  metadata: Record<string, any>;\\n+}\\n+\\n+export interface AuditImpact {\\n+  scope: 'step' | 'process' | 'system';\\n+  severity: 'info' | 'warning' | 'error' | 'critical';\\n+  categories: string[];\\n+}\\n+\\n+// =============================================================================\\n+// Requirement Interfaces\\n+// =============================================================================\\n+\\n+export interface OutputRequirement {\\n+  name: string;\\n+  type: string;\\n+  required: boolean;\\n+  description: string;\\n+  validation?: ValidationRule[];\\n+}\\n+\\n+export interface InputRequirement {\\n+  name: string;\\n+  type: string;\\n+  required: boolean;\\n+  source: string;\\n+  transformation?: string;\\n+}\\n+\\n+export interface UIConstraints {\\n+  allowFreeForm: boolean;\\n+  skipValidation: boolean;\\n+  maxFields?: number;\\n+  requiredFields: string[];\\n+}\\n+\\n+// =============================================================================\\n+// Utility Types\\n+// =============================================================================\\n+\\n+export type StepExecutor = (context: StepContext) => Promise<StepResult>;\\n+export type ValidationFunction = (data: any) => ValidationResult;\\n+export type EventHandler = (event: ProcessEvent) => void;\\n+\\n+// =============================================================================\\n+// Abstract Base Classes (for implementation)\\n+// =============================================================================\\n+\\n+export abstract class ProcessEventBase {\\n+  abstract readonly id: string;\\n+  abstract readonly processId: string;\\n+  abstract readonly timestamp: Date;\\n+  abstract readonly userId?: string;\\n+  abstract readonly type: string;\\n+  \\n+  abstract apply(state: any): any;\\n+}\\n+\\n+// Re-export EventEmitter for convenience\\n+export { EventEmitter };\\n\\\\ No newline at end of file\\n\"\n+    },\n+    {\n+      \"filepath\": \"packages/orgata-framework/tsconfig.json\",\n+      \"oldHash\": \"\",\n+      \"newHash\": \"bbaa0df718a2e40d0546a4f072a99a960b6a91bd\",\n+      \"timestamp\": \"2025-07-23T21:15:35.244Z\",\n+      \"changeType\": \"content\",\n+      \"gitDiff\": \"diff --git a/packages/orgata-framework/tsconfig.json b/packages/orgata-framework/tsconfig.json\\nnew file mode 100644\\nindex 0000000..bbaa0df\\n--- /dev/null\\n+++ b/packages/orgata-framework/tsconfig.json\\n@@ -0,0 +1,34 @@\\n+{\\n+  \\\"compilerOptions\\\": {\\n+    \\\"target\\\": \\\"ES2022\\\",\\n+    \\\"module\\\": \\\"ESNext\\\",\\n+    \\\"moduleResolution\\\": \\\"bundler\\\",\\n+    \\\"lib\\\": [\\\"ES2022\\\"],\\n+    \\\"declaration\\\": true,\\n+    \\\"declarationMap\\\": true,\\n+    \\\"sourceMap\\\": true,\\n+    \\\"outDir\\\": \\\"./dist\\\",\\n+    \\\"rootDir\\\": \\\"./src\\\",\\n+    \\\"strict\\\": true,\\n+    \\\"esModuleInterop\\\": true,\\n+    \\\"skipLibCheck\\\": true,\\n+    \\\"forceConsistentCasingInFileNames\\\": true,\\n+    \\\"resolveJsonModule\\\": true,\\n+    \\\"allowSyntheticDefaultImports\\\": true,\\n+    \\\"experimentalDecorators\\\": true,\\n+    \\\"emitDecoratorMetadata\\\": true,\\n+    \\\"baseUrl\\\": \\\"./src\\\",\\n+    \\\"paths\\\": {\\n+      \\\"@/*\\\": [\\\"./*\\\"]\\n+    }\\n+  },\\n+  \\\"include\\\": [\\n+    \\\"src/**/*\\\"\\n+  ],\\n+  \\\"exclude\\\": [\\n+    \\\"node_modules\\\",\\n+    \\\"dist\\\",\\n+    \\\"**/*.test.ts\\\",\\n+    \\\"**/*.spec.ts\\\"\\n+  ]\\n+}\\n\\\\ No newline at end of file\\n\"\n+    },\n+    {\n+      \"filepath\": \"packages/orgata-framework/vitest.config.ts\",\n+      \"oldHash\": \"\",\n+      \"newHash\": \"23d8eb5960889f33c090e1919e6a0471075c1b5e\",\n+      \"timestamp\": \"2025-07-23T21:15:35.288Z\",\n+      \"changeType\": \"content\",\n+      \"gitDiff\": \"diff --git a/packages/orgata-framework/vitest.config.ts b/packages/orgata-framework/vitest.config.ts\\nnew file mode 100644\\nindex 0000000..23d8eb5\\n--- /dev/null\\n+++ b/packages/orgata-framework/vitest.config.ts\\n@@ -0,0 +1,14 @@\\n+import { defineConfig } from 'vitest/config';\\n+import path from 'path';\\n+\\n+export default defineConfig({\\n+  test: {\\n+    globals: true,\\n+    environment: 'node',\\n+  },\\n+  resolve: {\\n+    alias: {\\n+      '@': path.resolve(__dirname, './src'),\\n+    },\\n+  },\\n+});\\n\\\\ No newline at end of file\\n\"\n+    },\n+    {\n+      \"filepath\": \"compiler/src/cli/index.ts\",\n+      \"oldHash\": \"\",\n+      \"newHash\": \"\",\n+      \"timestamp\": \"2025-07-23T21:15:34.509Z\",\n+      \"changeType\": \"content\",\n+      \"gitDiff\": \"diff --git a/compiler/src/cli/index.ts b/compiler/src/cli/index.ts\\nindex ac62dc2..b2b8232 100644\\n--- a/compiler/src/cli/index.ts\\n+++ b/compiler/src/cli/index.ts\\n@@ -27,6 +27,7 @@ import { ValidateCommand } from './commands/validate';\\n import { AnalyzeCommand } from './commands/analyze';\\n import { WatchCommand } from './commands/watch';\\n import createGenerateRuntimeCommand from './commands/generate-runtime';\\n+import createGenerateFrameworkCommand from './commands/generate-framework';\\n import chalk from 'chalk';\\n \\n const program = new Command();\\n@@ -200,6 +201,9 @@ program\\n // Generate Runtime command\\n program.addCommand(createGenerateRuntimeCommand());\\n \\n+// Generate Framework command\\n+program.addCommand(createGenerateFrameworkCommand());\\n+\\n // Global error handling\\n process.on('uncaughtException', (error) => {\\n   console.error(chalk.red('Uncaught Exception:'), error.message);\\n\"\n+    },\n+    {\n+      \"filepath\": \"packages/orgata-framework/package.json\",\n+      \"oldHash\": \"\",\n+      \"newHash\": \"\",\n+      \"timestamp\": \"2025-07-23T21:15:34.522Z\",\n+      \"changeType\": \"content\",\n+      \"gitDiff\": \"diff --git a/packages/orgata-framework/package.json b/packages/orgata-framework/package.json\\nindex 8d3cb6c..11db81d 100644\\n--- a/packages/orgata-framework/package.json\\n+++ b/packages/orgata-framework/package.json\\n@@ -45,8 +45,8 @@\\n   \\\"exports\\\": {\\n     \\\".\\\": {\\n       \\\"types\\\": \\\"./dist/index.d.ts\\\",\\n-      \\\"import\\\": \\\"./dist/index.js\\\",\\n-      \\\"require\\\": \\\"./dist/index.cjs\\\"\\n+      \\\"import\\\": \\\"./dist/index.mjs\\\",\\n+      \\\"require\\\": \\\"./dist/index.js\\\"\\n     }\\n   },\\n   \\\"files\\\": [\\n\"\n+    }\n+  ],\n+  \"results\": [\n+    {\n+      \"classification\": \"required\",\n+      \"confidence\": 0,\n+      \"reasoning\": \"LLM analysis unavailable - manual review required\",\n+      \"contradictions\": [\n+        \"LLM analysis failed: LLM client not configured\"\n+      ],\n+      \"requiresReview\": true,\n+      \"metadata\": {\n+        \"sourceFile\": \"packages/orgata-framework/README.md\",\n+        \"targetFile\": \"design-docs/008-orgata-framework/ORGATA_FRAMEWORK_ARCHITECTURE.md\",\n+        \"timestamp\": \"2025-07-23T21:15:35.292Z\",\n+        \"llmModel\": \"gpt-4\"\n+      }\n+    },\n+    {\n+      \"classification\": \"required\",\n+      \"confidence\": 0,\n+      \"reasoning\": \"LLM analysis unavailable - manual review required\",\n+      \"contradictions\": [\n+        \"LLM analysis failed: LLM client not configured\"\n+      ],\n+      \"requiresReview\": true,\n+      \"metadata\": {\n+        \"sourceFile\": \"packages/orgata-framework/package.json\",\n+        \"targetFile\": \"design-docs/008-orgata-framework/FRAMEWORK_API_SPECIFICATION.md\",\n+        \"timestamp\": \"2025-07-23T21:15:35.293Z\",\n+        \"llmModel\": \"gpt-4\"\n+      }\n+    },\n+    {\n+      \"classification\": \"required\",\n+      \"confidence\": 0,\n+      \"reasoning\": \"LLM analysis unavailable - manual review required\",\n+      \"contradictions\": [\n+        \"LLM analysis failed: LLM client not configured\"\n+      ],\n+      \"requiresReview\": true,\n+      \"metadata\": {\n+        \"sourceFile\": \"packages/orgata-framework/src/core/Process.ts\",\n+        \"targetFile\": \"design-docs/008-orgata-framework/ORGATA_FRAMEWORK_ARCHITECTURE.md\",\n+        \"timestamp\": \"2025-07-23T21:15:35.293Z\",\n+        \"llmModel\": \"gpt-4\"\n+      }\n+    },\n+    {\n+      \"classification\": \"required\",\n+      \"confidence\": 0,\n+      \"reasoning\": \"LLM analysis unavailable - manual review required\",\n+      \"contradictions\": [\n+        \"LLM analysis failed: LLM client not configured\"\n+      ],\n+      \"requiresReview\": true,\n+      \"metadata\": {\n+        \"sourceFile\": \"packages/orgata-framework/src/core/Step.ts\",\n+        \"targetFile\": \"design-docs/008-orgata-framework/FRAMEWORK_API_SPECIFICATION.md\",\n+        \"timestamp\": \"2025-07-23T21:15:35.293Z\",\n+        \"llmModel\": \"gpt-4\"\n+      }\n+    },\n+    {\n+      \"classification\": \"required\",\n+      \"confidence\": 0,\n+      \"reasoning\": \"LLM analysis unavailable - manual review required\",\n+      \"contradictions\": [\n+        \"LLM analysis failed: LLM client not configured\"\n+      ],\n+      \"requiresReview\": true,\n+      \"metadata\": {\n+        \"sourceFile\": \"packages/orgata-framework/src/index.ts\",\n+        \"targetFile\": \"design-docs/008-orgata-framework/FRAMEWORK_API_SPECIFICATION.md\",\n+        \"timestamp\": \"2025-07-23T21:15:35.294Z\",\n+        \"llmModel\": \"gpt-4\"\n+      }\n+    },\n+    {\n+      \"classification\": \"required\",\n+      \"confidence\": 0,\n+      \"reasoning\": \"LLM analysis unavailable - manual review required\",\n+      \"contradictions\": [\n+        \"LLM analysis failed: LLM client not configured\"\n+      ],\n+      \"requiresReview\": true,\n+      \"metadata\": {\n+        \"sourceFile\": \"packages/orgata-framework/src/state/ProcessState.ts\",\n+        \"targetFile\": \"design-docs/008-orgata-framework/ORGATA_FRAMEWORK_ARCHITECTURE.md\",\n+        \"timestamp\": \"2025-07-23T21:15:35.295Z\",\n+        \"llmModel\": \"gpt-4\"\n+      }\n+    },\n+    {\n+      \"classification\": \"required\",\n+      \"confidence\": 0,\n+      \"reasoning\": \"LLM analysis unavailable - manual review required\",\n+      \"contradictions\": [\n+        \"LLM analysis failed: LLM client not configured\"\n+      ],\n+      \"requiresReview\": true,\n+      \"metadata\": {\n+        \"sourceFile\": \"packages/orgata-framework/src/types/index.ts\",\n+        \"targetFile\": \"design-docs/008-orgata-framework/FRAMEWORK_API_SPECIFICATION.md\",\n+        \"timestamp\": \"2025-07-23T21:15:35.295Z\",\n+        \"llmModel\": \"gpt-4\"\n+      }\n+    },\n+    {\n+      \"classification\": \"required\",\n+      \"confidence\": 0,\n+      \"reasoning\": \"LLM analysis unavailable - manual review required\",\n+      \"contradictions\": [\n+        \"LLM analysis failed: LLM client not configured\"\n+      ],\n+      \"requiresReview\": true,\n+      \"metadata\": {\n+        \"sourceFile\": \"packages/orgata-framework/package.json\",\n+        \"targetFile\": \"design-docs/008-orgata-framework/FRAMEWORK_API_SPECIFICATION.md\",\n+        \"timestamp\": \"2025-07-23T21:15:35.295Z\",\n+        \"llmModel\": \"gpt-4\"\n+      }\n+    }\n+  ],\n+  \"autoApplied\": 0,\n+  \"reviewed\": 8,\n+  \"rejected\": 0,\n+  \"mode\": \"in_place\"\n+}\n\\ No newline at end of file\n"
    },
    {
      "filepath": "README.md",
      "oldHash": "",
      "newHash": "6c5f4186683b0ee9d1f1d0fc60e1c3837d7701ad",
      "timestamp": "2025-07-23T21:16:41.042Z",
      "changeType": "content",
      "gitDiff": "diff --git a/README.md b/README.md\nnew file mode 100644\nindex 0000000..6c5f418\n--- /dev/null\n+++ b/README.md\n@@ -0,0 +1,388 @@\n+# BUSY Language - Business Organizations as Code\n+\n+**Transform business processes into executable, type-safe code with complete flexibility and AI-powered assistance.**\n+\n+[![TypeScript](https://img.shields.io/badge/TypeScript-007ACC?logo=typescript&logoColor=white)](#)\n+[![React](https://img.shields.io/badge/React-20232A?logo=react&logoColor=61DAFB)](#)\n+[![Node.js](https://img.shields.io/badge/Node.js-43853D?logo=node.js&logoColor=white)](#)\n+\n+---\n+\n+## 🌟 **Vision: Business Processes as Code**\n+\n+BUSY enables organizations to define, execute, and evolve their business processes through code—bringing software engineering principles to business operations with complete human flexibility.\n+\n+### **Core Philosophy: \"Facilitate, Never Constrain\"**\n+\n+- **Complete User Control**: Skip any step, provide manual data, or override any automation\n+- **AI-Powered Assistance**: Intelligent support with human oversight and escape hatches  \n+- **Immutable Audit Trail**: Every action tracked with event sourcing—never rewrite history\n+- **Type-Safe Business Logic**: Full TypeScript support with IDE integration and compile-time validation\n+\n+---\n+\n+## 🏗️ **System Architecture**\n+\n+The BUSY ecosystem consists of four integrated components that work together to transform business descriptions into executable organizational systems:\n+\n+### **1. BUSY Language** - Domain-Specific Language\n+```yaml\n+# Example: inquiry-to-booking.busy\n+playbook:\n+  name: \"inquiry-to-booking\"\n+  description: \"Convert inquiries into confirmed bookings\"\n+  steps:\n+    - name: \"qualify_lead\"\n+      description: \"Assess fit and qualification criteria\"\n+      execution_type: \"human\"\n+      ui_type: \"form\"\n+```\n+\n+**Key Features:**\n+- **Human-Readable YAML**: Business processes described in intuitive format\n+- **Layer-First Architecture**: L0 (Operational), L1 (Management), L2 (Strategic) separation\n+- **Type Safety**: Schema validation with comprehensive error reporting\n+- **Git Integration**: Version control for business process evolution\n+\n+### **2. BUSY Compiler** - Translation Engine\n+```bash\n+# Transform BUSY files into TypeScript framework code\n+busy-check generate-framework ./business-processes/ -o ./generated-processes/\n+```\n+\n+**Compilation Pipeline:**\n+```\n+BUSY Files → Lexer/Parser → AST → Semantic Analysis → \n+Content Analysis → Code Generation → TypeScript Framework Code\n+```\n+\n+**Output Capabilities:**\n+- **TypeScript Framework Code**: Production-ready business process implementations\n+- **React Applications**: Full web UIs for process execution  \n+- **Database Schemas**: State management and audit trail persistence\n+- **AI Agent Configurations**: Intelligent automation with human oversight\n+\n+### **3. Orgata Framework** - React-Like Business Process Framework\n+```typescript\n+// Generated TypeScript code using Orgata Framework\n+export class InquiryToBookingProcess extends Process {\n+  constructor() {\n+    super({\n+      name: \"inquiry-to-booking\",\n+      description: \"Convert inquiries into confirmed bookings\"\n+    });\n+    \n+    this.addStep(new QualifyLeadStep());\n+    this.addStep(new ScheduleConsultationStep());\n+    // ... additional steps\n+  }\n+}\n+```\n+\n+**Framework Features:**\n+- **Process Classes**: Complete business process implementations with type safety\n+- **Step Types**: HumanStep (UI forms), AgentStep (AI processing), AlgorithmStep (automation)\n+- **Immutable State**: Event sourcing with ProcessState—complete audit trail\n+- **Universal Flexibility**: Skip any step, go back, provide manual data at any point\n+\n+### **4. Orgata Runtime** - Process Execution Engine\n+```typescript\n+const process = new InquiryToBookingProcess();\n+const result = await process.execute(context);\n+\n+// Framework Philosophy: Users maintain complete control\n+await process.skipStep('qualify_lead', 'Already qualified', { qualified: true });\n+await process.goBack(2); // Go back 2 steps and proceed forward\n+```\n+\n+**Runtime Capabilities:**\n+- **Web-Based UI**: Interactive forms for human steps with customization\n+- **AI Agent Orchestration**: Context assembly and intelligent processing\n+- **Exception Handling**: Process state freezing with governance-based resolution\n+- **Client Folder System**: Human-readable artifacts and communication\n+\n+---\n+\n+## 💼 **Business Value Proposition**\n+\n+### **For Business Leaders**\n+- **Process Transparency**: Every business process defined as readable code\n+- **Audit Compliance**: Complete, immutable trail of all business decisions\n+- **Rapid Evolution**: Change business processes through code deployment\n+- **Risk Management**: AI-powered analysis of process deviations and impacts\n+\n+### **For Operations Teams**  \n+- **Flexible Execution**: Never blocked—can skip steps, provide manual data, or override automation\n+- **Intelligent Assistance**: AI helps with complex decisions while maintaining human control\n+- **Exception Management**: Clear escalation paths with automated governance\n+- **Performance Analytics**: Data-driven insights into process efficiency\n+\n+### **For Developers**\n+- **Type-Safe Business Logic**: Full TypeScript support with IDE integration\n+- **Framework Architecture**: React-like patterns for business process development  \n+- **Extensible Platform**: Plugin architecture for custom step types and integrations\n+- **Professional Tooling**: Comprehensive compiler, linting, testing, and debugging\n+\n+---\n+\n+## 🚀 **Quick Start**\n+\n+### **1. Install the BUSY Compiler**\n+```bash\n+npm install -g @busy-lang/compiler\n+```\n+\n+### **2. Create Your First Business Process**\n+```yaml\n+# business-process.busy\n+version: \"1.0.0\"\n+metadata:\n+  name: \"Customer Onboarding\"\n+  description: \"Streamlined customer onboarding process\"\n+  layer: \"L0\"\n+\n+playbook:\n+  name: \"customer-onboarding\"\n+  description: \"Complete customer onboarding workflow\"\n+  steps:\n+    - name: \"collect_information\"\n+      description: \"Gather customer details and requirements\"\n+      execution_type: \"human\"\n+      ui_type: \"form\"\n+    \n+    - name: \"verify_eligibility\"  \n+      description: \"Verify customer eligibility and compliance\"\n+      execution_type: \"agent\"\n+    \n+    - name: \"setup_account\"\n+      description: \"Create customer account and initial configuration\"\n+      execution_type: \"algorithmic\"\n+```\n+\n+### **3. Generate TypeScript Framework Code**\n+```bash\n+busy-check generate-framework ./business-processes/ -o ./generated-processes/\n+```\n+\n+### **4. Use the Generated Code**\n+```typescript\n+import { CustomerOnboardingProcess } from './generated-processes';\n+\n+const process = new CustomerOnboardingProcess();\n+const context = {\n+  processId: 'onboarding-001',\n+  userId: 'user-123',\n+  businessContext: { industry: 'fintech', size: 'startup' },\n+  permissions: { canSkipSteps: true, canOverrideValidation: true }\n+};\n+\n+const result = await process.execute(context);\n+```\n+\n+---\n+\n+## 🧠 **Key Technical Concepts**\n+\n+### **Layer-First Architecture**\n+- **L0 (Operational)**: Day-to-day business processes and task execution\n+- **L1 (Management)**: Process coordination, resource allocation, and performance monitoring  \n+- **L2 (Strategic)**: Long-term planning, governance, and organizational alignment\n+\n+### **Immutable State Management**\n+```typescript\n+// All process changes tracked through events—never rewrite history\n+class ProcessState {\n+  readonly history: ProcessEvent[];           // Complete event log\n+  readonly currentStep: string;               // Current execution state\n+  readonly stepData: Map<string, StepData>;   // All step outputs\n+  readonly exceptions: ProcessException[];    // Tracked deviations\n+}\n+```\n+\n+### **Three Step Types**\n+```typescript\n+// Human interaction with flexible UI\n+class HumanStep extends Step {\n+  model: FormModel;      // Generated form fields\n+  view: ComponentDef;    // UI component configuration\n+  // Users can always skip or provide manual data\n+}\n+\n+// AI-powered analysis and decision making\n+class AgentStep extends Step {  \n+  prompt: AgentPrompt;   // AI system and user prompts\n+  context: AgentContext; // Business context for AI\n+  // Always includes human review capability\n+}\n+\n+// Automated processing with override capability  \n+class AlgorithmStep extends Step {\n+  implementation: AlgorithmConfig; // Code or service integration\n+  parameters: AlgorithmParams;     // Configuration parameters\n+  // Users can always provide manual results\n+}\n+```\n+\n+### **AI-Powered Flexibility**\n+- **Content Analysis**: Automatic field generation from business process descriptions\n+- **Exception Analysis**: AI evaluates impact of process deviations and suggests mitigations\n+- **Context Assembly**: Intelligent data flow between steps with relevance scoring\n+- **Escape Hatches**: AI helps users work around constraints while maintaining audit trail\n+\n+---\n+\n+## 📁 **Project Structure**\n+\n+```\n+busy-lang/\n+├── compiler/                 # BUSY language compiler and CLI tools\n+│   ├── src/cli/             # Command-line interface (validate, analyze, generate-framework)\n+│   ├── src/core/            # Scanner, parser, AST builder\n+│   ├── src/analysis/        # Semantic analysis and validation\n+│   ├── src/generators/      # Code generation (framework, runtime, database)\n+│   └── docs/                # Compiler documentation\n+├── packages/\n+│   └── orgata-framework/    # TypeScript framework for business processes\n+│       ├── src/core/        # Process, Step classes\n+│       ├── src/state/       # Immutable state management\n+│       └── src/types/       # Complete type definitions\n+├── examples/                # Real-world business process examples  \n+│   └── solo-photography-business/\n+├── design-docs/             # Comprehensive architecture documentation\n+│   ├── 001-initial-specification/\n+│   ├── 008-orgata-framework/    # Latest framework architecture\n+│   └── ARCHITECTURE_OVERVIEW.md\n+├── knit/                    # Dependency reconciliation system\n+├── orgata-ide/              # Web-based IDE for business process development\n+└── generated-framework-test/ # Example generated framework code\n+```\n+\n+---\n+\n+## 🛠️ **Development Tools**\n+\n+### **BUSY Compiler Commands**\n+```bash\n+# Validate business process definitions\n+busy-check validate ./business-processes/\n+\n+# Comprehensive analysis with quality metrics\n+busy-check analyze ./business-processes/ --detailed\n+\n+# Generate TypeScript framework code  \n+busy-check generate-framework ./business-processes/ -o ./output/\n+\n+# Generate full React application\n+busy-check generate-runtime ./business-processes/ -o ./app/\n+\n+# Watch for changes and validate continuously\n+busy-check watch ./business-processes/\n+```\n+\n+### **Framework Development**\n+```bash\n+# Install framework for generated code\n+npm install @orgata/framework\n+\n+# Build generated business processes\n+cd generated-processes/\n+npm run build\n+\n+# Run tests on business process logic\n+npm run test\n+\n+# Lint generated TypeScript code\n+npm run lint\n+```\n+\n+---\n+\n+## 🎯 **Use Cases**\n+\n+### **Enterprise Operations**\n+- **Customer Onboarding**: Multi-step workflows with compliance checks\n+- **Procurement Processes**: Vendor selection with approval workflows\n+- **Quality Assurance**: Systematic testing and validation procedures\n+- **Incident Response**: Structured escalation with automated notifications\n+\n+### **Professional Services**\n+- **Client Engagement**: From inquiry to project delivery\n+- **Project Management**: Milestone tracking with stakeholder communication\n+- **Compliance Reporting**: Audit trail generation and regulatory submission\n+- **Knowledge Management**: Process documentation with version control\n+\n+### **Creative Industries**  \n+- **Production Workflows**: From concept to final delivery\n+- **Client Communication**: Structured touchpoints and feedback collection\n+- **Resource Coordination**: Equipment, location, and team scheduling\n+- **Portfolio Management**: Project tracking and outcome analysis\n+\n+---\n+\n+## 🔧 **Advanced Features**\n+\n+### **Knit System** - Dependency Reconciliation\n+```bash\n+# Automatically track dependencies between business processes\n+knit reconcile --all-dependencies\n+```\n+- **Cross-Process Dependencies**: Automatic detection and reconciliation\n+- **Version Management**: Track changes across related business processes  \n+- **Impact Analysis**: Understand downstream effects of process modifications\n+\n+### **Business Intelligence Integration**\n+- **Performance Metrics**: Built-in analytics for process efficiency\n+- **Exception Analysis**: Pattern recognition in process deviations\n+- **Resource Optimization**: Data-driven insights for resource allocation\n+- **Predictive Analytics**: AI-powered forecasting of process outcomes\n+\n+### **Multi-Tenant Architecture**\n+- **Organization Isolation**: Secure separation of business processes\n+- **Role-Based Access**: Granular permissions for process execution\n+- **Audit Compliance**: Comprehensive logging for regulatory requirements\n+- **Scalable Infrastructure**: From single-user to enterprise deployment\n+\n+---\n+\n+## 📚 **Documentation**\n+\n+- **[Language Reference](./compiler/docs/BUSY_LANGUAGE_REFERENCE.md)** - Complete BUSY syntax and semantics\n+- **[Framework API](./packages/orgata-framework/README.md)** - TypeScript framework documentation  \n+- **[Architecture Overview](./design-docs/ARCHITECTURE_OVERVIEW.md)** - System design and component interaction\n+- **[Getting Started Guide](./examples/README.md)** - Tutorial with real-world examples\n+- **[Compiler Documentation](./compiler/docs/README.md)** - Development tools and advanced usage\n+\n+---\n+\n+## 🤝 **Contributing**\n+\n+We welcome contributions to the BUSY ecosystem! Please see our [Contributing Guidelines](./CONTRIBUTING.md) for details on:\n+\n+- **Code Standards**: TypeScript, testing, and documentation requirements\n+- **Design Process**: RFC process for major features and architectural changes  \n+- **Development Workflow**: Git flow, testing, and review procedures\n+- **Community Guidelines**: Code of conduct and communication expectations\n+\n+---\n+\n+## 📄 **License**\n+\n+BUSY Language is open source software licensed under the [MIT License](./LICENSE).\n+\n+---\n+\n+## 🎉 **Latest Achievement**\n+\n+**🚀 Framework Transformation Complete!** We've successfully transformed from YAML string generation to a complete React-like TypeScript framework. BUSY files now compile to professional TypeScript code that provides:\n+\n+- ✅ **Complete User Flexibility** - Skip steps, provide manual data, go back to any point\n+- ✅ **Type-Safe Business Logic** - Full TypeScript support with IDE integration  \n+- ✅ **Immutable State Management** - Event sourcing with complete audit trail\n+- ✅ **AI-Powered Intelligence** - Smart assistance with human oversight\n+- ✅ **Production Ready** - Generated code compiles and runs successfully\n+\n+**Try it now:** `busy-check generate-framework ./examples/solo-photography-business/L0/client-operations/playbooks/`\n+\n+---\n+\n+*Built with ❤️ for organizations that want to bring software engineering excellence to their business processes.*\n\\ No newline at end of file\n"
    },
    {
      "filepath": "compiler/src/cli/commands/generate-framework.ts",
      "oldHash": "",
      "newHash": "cfe3885030badd12bc94d27a90b229eeee5e7c0c",
      "timestamp": "2025-07-23T21:16:41.086Z",
      "changeType": "content",
      "gitDiff": "diff --git a/compiler/src/cli/commands/generate-framework.ts b/compiler/src/cli/commands/generate-framework.ts\nnew file mode 100644\nindex 0000000..cfe3885\n--- /dev/null\n+++ b/compiler/src/cli/commands/generate-framework.ts\n@@ -0,0 +1,147 @@\n+import { Command } from 'commander';\n+import { promises as fs } from 'fs';\n+import path from 'path';\n+import { generateFramework } from '../../generators/framework-generator';\n+import { Analyzer } from '../../analysis/analyzer';\n+import { Scanner } from '../../core/scanner';\n+import { Parser } from '../../core/parser';\n+import { ASTBuilder } from '../../ast/builder';\n+import { DEFAULT_CONFIG } from '../../config/types';\n+import type { AnalysisResult } from '../../analysis/types';\n+import type { CompilerConfig } from '../../config/types';\n+\n+export function createGenerateFrameworkCommand(): Command {\n+  const command = new Command('generate-framework');\n+  \n+  command\n+    .description('Generate TypeScript framework code from BUSY files using Orgata Framework')\n+    .argument('<input-path>', 'Path to directory containing BUSY files')\n+    .option('-o, --output <path>', 'Output directory for generated framework code', './generated-framework')\n+    .option('-p, --package-name <name>', 'Package name for generated code', 'orgata-business-process')\n+    .option('--overwrite', 'Overwrite existing files in output directory')\n+    .option('--include-tests', 'Generate test files for framework code')\n+    .action(async (inputPath: string, options: any) => {\n+      try {\n+        console.log('🚀 Generating Orgata Framework Code from BUSY files...\\n');\n+        \n+        // Use default configuration\n+        const config = DEFAULT_CONFIG;\n+        \n+        // Analyze BUSY files\n+        console.log('🔍 Analyzing BUSY files...');\n+        const analysisResult = await analyzeFiles(inputPath, config);\n+        \n+        // Check for errors\n+        if (analysisResult.report.errors.length > 0) {\n+          console.error('❌ Analysis errors found:');\n+          analysisResult.report.errors.forEach(error => {\n+            console.error(`  - ${error.message} (${error.location})`);\n+          });\n+          \n+          console.error('\\n💡 Fix these errors before generating framework code.');\n+          process.exit(1);\n+        }\n+        \n+        // Check for warnings\n+        if (analysisResult.report.warnings.length > 0) {\n+          console.warn('⚠️  Analysis warnings:');\n+          analysisResult.report.warnings.forEach(warning => {\n+            console.warn(`  - ${warning.message} (${warning.location})`);\n+          });\n+        }\n+        \n+        // Validate we have at least one playbook\n+        if (analysisResult.ast.symbols.playbooks.size === 0) {\n+          console.error('❌ No playbooks found in BUSY files.');\n+          console.error('💡 At least one playbook is required to generate framework code.');\n+          process.exit(1);\n+        }\n+        \n+        console.log(`\\n📊 Analysis Summary:`);\n+        console.log(`  - Teams: ${analysisResult.ast.symbols.teams.size}`);\n+        console.log(`  - Roles: ${analysisResult.ast.symbols.roles.size}`);\n+        console.log(`  - Playbooks: ${analysisResult.ast.symbols.playbooks.size}`);\n+        console.log(`  - Documents: ${analysisResult.ast.symbols.documents.size}`);\n+        console.log(`  - Tasks: ${analysisResult.ast.symbols.tasks.size}`);\n+        \n+        console.log('\\n⚡ Generating TypeScript framework code...');\n+        \n+        // Generate framework code\n+        const generationResult = await generateFramework(analysisResult, {\n+          outputPath: path.resolve(options.output),\n+          packageName: options.packageName,\n+          overwrite: options.overwrite,\n+          includeTests: options.includeTests\n+        });\n+        \n+        console.log('\\n🎉 Framework code generation completed successfully!');\n+        console.log(`\\n📁 Generated files in: ${path.resolve(options.output)}`);\n+        console.log('\\n📋 Generated Components:');\n+        console.log(`   • ${generationResult.processClasses} Process classes`);\n+        console.log(`   • ${generationResult.stepClasses} Step classes`);\n+        console.log(`   • ${generationResult.humanSteps} Human steps (with UI)`);\n+        console.log(`   • ${generationResult.algorithmSteps} Algorithm steps`);\n+        console.log(`   • ${generationResult.agentSteps} Agent steps`);\n+        \n+        console.log('\\n🔧 Next Steps:');\n+        console.log('   1. npm install @orgata/framework');\n+        console.log('   2. Review generated TypeScript code');\n+        console.log('   3. Implement TODO items in algorithm/agent steps');\n+        console.log('   4. Customize UI components as needed');\n+        console.log('   5. Test with your business processes');\n+        \n+        console.log('\\n🌟 Framework Philosophy: \"Facilitate, Never Constrain\"');\n+        console.log('   - Users can skip any step and provide manual data');\n+        console.log('   - Complete audit trail of all actions');\n+        console.log('   - Immutable state with event sourcing');\n+        console.log('   - AI assistance with human oversight');\n+        \n+      } catch (error: any) {\n+        console.error('❌ Framework generation failed:', error.message);\n+        if (error.stack) {\n+          console.error('\\n🔍 Stack trace:');\n+          console.error(error.stack);\n+        }\n+        process.exit(1);\n+      }\n+    });\n+  \n+  return command;\n+}\n+\n+/**\n+ * Analyze BUSY files from a directory\n+ */\n+async function analyzeFiles(inputPath: string, config: CompilerConfig): Promise<AnalysisResult> {\n+  // Step 1: Scan files\n+  const scanner = new Scanner(config);\n+  const scanResult = await scanner.scan(inputPath);\n+  \n+  if (scanResult.files.length === 0) {\n+    throw new Error('No BUSY files found in directory');\n+  }\n+  \n+  // Step 2: Parse files\n+  const parser = new Parser(config);\n+  const parseResult = await parser.parse(scanResult);\n+  \n+  if (parseResult.parseErrors.length > 0) {\n+    throw new Error(`Parse errors: ${parseResult.parseErrors.map(e => e.error.message).join(', ')}`);\n+  }\n+  \n+  // Step 3: Build AST\n+  const astBuilder = new ASTBuilder();\n+  const buildResult = await astBuilder.build(parseResult);\n+  \n+  if (buildResult.errors.length > 0) {\n+    throw new Error(`AST build errors: ${buildResult.errors.map(e => e.message).join(', ')}`);\n+  }\n+  \n+  // Step 4: Run analysis\n+  const analyzer = new Analyzer();\n+  const result = await analyzer.analyze(buildResult.ast);\n+  \n+  return result;\n+}\n+\n+export default createGenerateFrameworkCommand;\n\\ No newline at end of file\n"
    },
    {
      "filepath": "compiler/src/cli/index.ts",
      "oldHash": "ac62dc29dcfbb51fbf6a8b438eb7394bf9b3ac68",
      "newHash": "b2b8232d853bd5f2ef716d82853712ccdb42bdfb",
      "timestamp": "2025-07-23T21:16:41.128Z",
      "changeType": "content",
      "gitDiff": "diff --git a/compiler/src/cli/index.ts b/compiler/src/cli/index.ts\nindex ac62dc2..b2b8232 100644\n--- a/compiler/src/cli/index.ts\n+++ b/compiler/src/cli/index.ts\n@@ -27,6 +27,7 @@ import { ValidateCommand } from './commands/validate';\n import { AnalyzeCommand } from './commands/analyze';\n import { WatchCommand } from './commands/watch';\n import createGenerateRuntimeCommand from './commands/generate-runtime';\n+import createGenerateFrameworkCommand from './commands/generate-framework';\n import chalk from 'chalk';\n \n const program = new Command();\n@@ -200,6 +201,9 @@ program\n // Generate Runtime command\n program.addCommand(createGenerateRuntimeCommand());\n \n+// Generate Framework command\n+program.addCommand(createGenerateFrameworkCommand());\n+\n // Global error handling\n process.on('uncaughtException', (error) => {\n   console.error(chalk.red('Uncaught Exception:'), error.message);\n"
    },
    {
      "filepath": "compiler/src/generators/framework-generator.ts",
      "oldHash": "",
      "newHash": "7f99344edb7c02d71d79167fe07e207e1405b40e",
      "timestamp": "2025-07-23T21:16:41.171Z",
      "changeType": "content",
      "gitDiff": "diff --git a/compiler/src/generators/framework-generator.ts b/compiler/src/generators/framework-generator.ts\nnew file mode 100644\nindex 0000000..7f99344\n--- /dev/null\n+++ b/compiler/src/generators/framework-generator.ts\n@@ -0,0 +1,638 @@\n+import { AnalysisResult } from '../analysis/types';\n+import { promises as fs } from 'fs';\n+import path from 'path';\n+\n+export interface FrameworkGenerationOptions {\n+  outputPath: string;\n+  packageName: string;\n+  overwrite: boolean;\n+  includeTests: boolean;\n+}\n+\n+export interface FrameworkGenerationResult {\n+  processClasses: number;\n+  stepClasses: number;\n+  humanSteps: number;\n+  algorithmSteps: number;\n+  agentSteps: number;\n+}\n+\n+export class FrameworkGenerator {\n+  constructor(private options: FrameworkGenerationOptions) {}\n+\n+  async generateFramework(analysisResult: AnalysisResult): Promise<FrameworkGenerationResult> {\n+    console.log('🚀 Starting Orgata Framework Code Generation...');\n+    console.log(`📁 Output Path: ${this.options.outputPath}`);\n+    console.log(`📦 Package Name: ${this.options.packageName}`);\n+    \n+    // Ensure output directory exists\n+    if (this.options.overwrite) {\n+      await fs.rm(this.options.outputPath, { recursive: true, force: true });\n+    }\n+    await fs.mkdir(this.options.outputPath, { recursive: true });\n+    \n+    // Create directory structure\n+    await this.createDirectoryStructure();\n+    \n+    // Generate package.json\n+    await this.generatePackageJson();\n+    \n+    // Generate TypeScript configuration\n+    await this.generateTsConfig();\n+    \n+    // Process each playbook\n+    const result: FrameworkGenerationResult = {\n+      processClasses: 0,\n+      stepClasses: 0,\n+      humanSteps: 0,\n+      algorithmSteps: 0,\n+      agentSteps: 0\n+    };\n+    \n+    for (const [playbookId, playbook] of analysisResult.ast.symbols.playbooks) {\n+      console.log(`\\n📖 Processing playbook: ${playbook.name}`);\n+      \n+      const playbookResult = await this.generatePlaybookCode(playbook);\n+      \n+      result.processClasses += playbookResult.processClasses;\n+      result.stepClasses += playbookResult.stepClasses;\n+      result.humanSteps += playbookResult.humanSteps;\n+      result.algorithmSteps += playbookResult.algorithmSteps;\n+      result.agentSteps += playbookResult.agentSteps;\n+    }\n+    \n+    // Generate index files\n+    await this.generateIndexFiles(analysisResult);\n+    \n+    // Generate README\n+    await this.generateReadme(analysisResult, result);\n+    \n+    console.log('\\n✅ Framework generation completed!');\n+    return result;\n+  }\n+  \n+  private async createDirectoryStructure(): Promise<void> {\n+    const dirs = [\n+      'src',\n+      'src/processes',\n+      'src/steps',\n+      'src/types',\n+      'src/__tests__'\n+    ];\n+    \n+    for (const dir of dirs) {\n+      await fs.mkdir(path.join(this.options.outputPath, dir), { recursive: true });\n+    }\n+  }\n+  \n+  private async generatePackageJson(): Promise<void> {\n+    const packageJson = {\n+      name: this.options.packageName,\n+      version: '1.0.0',\n+      description: 'Generated business process framework code from BUSY files',\n+      main: 'dist/index.js',\n+      types: 'dist/index.d.ts',\n+      scripts: {\n+        build: 'tsc',\n+        dev: 'tsc --watch',\n+        test: 'jest',\n+        lint: 'eslint src --ext .ts'\n+      },\n+      dependencies: {\n+        '@orgata/framework': '0.1.0'\n+      },\n+      devDependencies: {\n+        typescript: '^5.0.0',\n+        '@types/node': '^20.0.0',\n+        jest: '^29.0.0',\n+        '@types/jest': '^29.0.0',\n+        'ts-jest': '^29.0.0',\n+        eslint: '^8.0.0',\n+        '@typescript-eslint/eslint-plugin': '^6.0.0',\n+        '@typescript-eslint/parser': '^6.0.0'\n+      },\n+      keywords: [\n+        'business-process',\n+        'orgata-framework',\n+        'typescript',\n+        'workflow'\n+      ],\n+      author: 'Generated by BUSY Compiler',\n+      license: 'MIT'\n+    };\n+    \n+    await fs.writeFile(\n+      path.join(this.options.outputPath, 'package.json'),\n+      JSON.stringify(packageJson, null, 2)\n+    );\n+  }\n+  \n+  private async generateTsConfig(): Promise<void> {\n+    const tsConfig = {\n+      compilerOptions: {\n+        target: 'ES2020',\n+        module: 'commonjs',\n+        lib: ['ES2020'],\n+        outDir: './dist',\n+        rootDir: './src',\n+        strict: true,\n+        esModuleInterop: true,\n+        skipLibCheck: true,\n+        forceConsistentCasingInFileNames: true,\n+        declaration: true,\n+        declarationMap: true,\n+        sourceMap: true\n+      },\n+      include: ['src/**/*'],\n+      exclude: ['node_modules', 'dist']\n+    };\n+    \n+    await fs.writeFile(\n+      path.join(this.options.outputPath, 'tsconfig.json'),\n+      JSON.stringify(tsConfig, null, 2)\n+    );\n+  }\n+  \n+  private async generatePlaybookCode(playbook: any): Promise<FrameworkGenerationResult> {\n+    const result: FrameworkGenerationResult = {\n+      processClasses: 0,\n+      stepClasses: 0,\n+      humanSteps: 0,\n+      algorithmSteps: 0,\n+      agentSteps: 0\n+    };\n+    \n+    // Generate process class\n+    const processCode = this.generateProcessClass(playbook);\n+    const processFileName = this.toKebabCase(playbook.name) + '-process.ts';\n+    await fs.writeFile(\n+      path.join(this.options.outputPath, 'src/processes', processFileName),\n+      processCode\n+    );\n+    result.processClasses++;\n+    \n+    // Generate step classes\n+    if (playbook.node.steps) {\n+      for (const step of playbook.node.steps) {\n+        const stepType = this.determineStepType(step);\n+        const stepCode = this.generateStepClass(step, stepType);\n+        const stepFileName = this.toKebabCase(step.name) + '-step.ts';\n+        \n+        await fs.writeFile(\n+          path.join(this.options.outputPath, 'src/steps', stepFileName),\n+          stepCode\n+        );\n+        \n+        result.stepClasses++;\n+        if (stepType === 'human') result.humanSteps++;\n+        else if (stepType === 'algorithm') result.algorithmSteps++;\n+        else if (stepType === 'agent') result.agentSteps++;\n+      }\n+    }\n+    \n+    return result;\n+  }\n+  \n+  private generateProcessClass(playbook: any): string {\n+    const className = this.toPascalCase(playbook.name);\n+    const stepImports = playbook.node.steps?.map((step: any) => \n+      `import { ${this.toPascalCase(step.name)}Step } from '../steps/${this.toKebabCase(step.name)}-step';`\n+    ).join('\\n') || '';\n+    \n+    return `/**\n+ * ${playbook.name} Process\n+ * \n+ * Generated from: ${playbook.name}.busy\n+ * Description: ${playbook.node.description || 'Business process implementation'}\n+ * \n+ * 🔗 Design Source: ../../design-docs/008-orgata-framework/ORGATA_FRAMEWORK_ARCHITECTURE.md\n+ */\n+\n+import { Process, ProcessConfig, ProcessContext, ProcessResult } from '@orgata/framework';\n+${stepImports}\n+\n+export class ${className}Process extends Process {\n+  constructor() {\n+    super({\n+      name: \"${playbook.name}\",\n+      description: \"${playbook.node.description || 'Business process implementation'}\",\n+      layer: \"L0\",\n+      metadata: {\n+        generatedFrom: \"${playbook.name}.busy\",\n+        generatedAt: \"${new Date().toISOString()}\",\n+        busyVersion: \"1.0.0\"\n+      }\n+    });\n+    \n+    // Add all steps in sequence\n+${playbook.node.steps?.map((step: any) => \n+  `    this.addStep(new ${this.toPascalCase(step.name)}Step());`\n+).join('\\n') || '    // No steps defined'}\n+  }\n+  \n+  async execute(context: ProcessContext): Promise<ProcessResult> {\n+    // Framework handles step-by-step execution with complete flexibility\n+    // Users can skip steps, go back, or provide manual data at any point\n+    return await this.executeSteps(context);\n+  }\n+}`;\n+  }\n+  \n+  private generateStepClass(step: any, stepType: 'human' | 'agent' | 'algorithm'): string {\n+    const className = this.toPascalCase(step.name);\n+    \n+    switch (stepType) {\n+      case 'human':\n+        return this.generateHumanStep(step, className);\n+      case 'agent':\n+        return this.generateAgentStep(step, className);\n+      case 'algorithm':\n+        return this.generateAlgorithmStep(step, className);\n+      default:\n+        throw new Error(`Unknown step type: ${stepType}`);\n+    }\n+  }\n+  \n+  private generateHumanStep(step: any, className: string): string {\n+    const fields = this.generateFieldsForStep(step);\n+    \n+    return `/**\n+ * ${step.name} - ${step.description}\n+ * \n+ * Human interaction step with flexible UI and complete override capabilities.\n+ * \n+ * 🔗 Design Source: ../../design-docs/008-orgata-framework/FRAMEWORK_API_SPECIFICATION.md\n+ */\n+\n+import { HumanStep, HumanStepConfig, StepContext, StepResult, FieldType, StepType } from '@orgata/framework';\n+\n+export class ${className}Step extends HumanStep {\n+  constructor() {\n+    super({\n+      id: '${step.name}',\n+      name: '${step.name.replace(/_/g, ' ').replace(/\\b\\w/g, (l: string) => l.toUpperCase())}',\n+      description: '${step.description}',\n+      type: StepType.HUMAN,\n+      model: {\n+        fields: [\n+${fields.map(field => this.renderField(field)).join(',\\n')}\n+        ],\n+        layout: {\n+          type: 'single-column',\n+          columns: 1\n+        },\n+        validation: {\n+          strategy: 'on-blur',\n+          showErrorsOn: 'after-interaction'\n+        },\n+        metadata: {\n+          version: '1.0.0',\n+          generatedFrom: '${step.name}.busy'\n+        }\n+      },\n+      view: {\n+        type: 'form',\n+        props: {\n+          allowFreeForm: true,  // Framework philosophy: never constrain\n+          showSkipOption: true,\n+          enableManualDataEntry: true\n+        },\n+        styling: {\n+          className: 'orgata-human-step-form'\n+        },\n+        behavior: {\n+          validation: {\n+            realTime: false,\n+            debounceMs: 500,\n+            showErrors: true\n+          }\n+        }\n+      }\n+    });\n+  }\n+  \n+  // Override to add custom business logic if needed\n+  protected async processUserInput(input: any, context: StepContext): Promise<any> {\n+    // TODO: Implement business logic based on: ${step.description}\n+    return input;\n+  }\n+}`;\n+  }\n+  \n+  private generateAgentStep(step: any, className: string): string {\n+    return `/**\n+ * ${step.name} - ${step.description}\n+ * \n+ * AI Agent step with intelligent processing and human review capability.\n+ * \n+ * 🔗 Design Source: ../../design-docs/008-orgata-framework/FRAMEWORK_API_SPECIFICATION.md\n+ */\n+\n+import { AgentStep, AgentStepConfig, StepContext, StepResult, AgentResponse, AlgorithmInput, AlgorithmOutput, StepType } from '@orgata/framework';\n+\n+export class ${className}Step extends AgentStep {\n+  constructor() {\n+    super({\n+      id: '${step.name}',\n+      name: '${step.name.replace(/_/g, ' ').replace(/\\b\\w/g, (l: string) => l.toUpperCase())}',\n+      description: '${step.description}',\n+      type: StepType.AGENT,\n+      prompt: {\n+        systemPrompt: \\`You are an expert assistant helping with ${step.description.toLowerCase()}. \n+        Provide thorough analysis and actionable recommendations.\\`,\n+        userPrompt: \\`Please ${step.description.toLowerCase()} based on the provided context: {{context}}\\`,\n+        context: {\n+          businessDomain: 'business-process',\n+          expectedFormat: 'structured_data',\n+          qualityCriteria: ['accuracy', 'completeness', 'actionability']\n+        },\n+        constraints: {\n+          maxTokens: 1000,\n+          temperature: 0.3,\n+          requireStructuredOutput: true\n+        }\n+      },\n+      context: {} as any, // TODO: Implement proper AgentContext\n+      constraints: {\n+        timeout: 30000,\n+        retryAttempts: 3,\n+        fallbackToHuman: true  // Framework philosophy: always provide escape hatch\n+      }\n+    });\n+  }\n+  \n+  protected extractRelevantContext(context: StepContext): Record<string, any> {\n+    // TODO: Extract relevant data for ${step.description}\n+    return {\n+      context: JSON.stringify(context.inputData),\n+      businessContext: context.businessContext\n+    };\n+  }\n+}`;\n+  }\n+  \n+  private generateAlgorithmStep(step: any, className: string): string {\n+    return `/**\n+ * ${step.name} - ${step.description}\n+ * \n+ * Algorithm step with automated processing and manual override capability.\n+ * \n+ * 🔗 Design Source: ../../design-docs/008-orgata-framework/FRAMEWORK_API_SPECIFICATION.md\n+ */\n+\n+import { AlgorithmStep, AlgorithmStepConfig, StepContext, StepResult, AlgorithmInput, AlgorithmOutput, StepType } from '@orgata/framework';\n+\n+export class ${className}Step extends AlgorithmStep {\n+  constructor() {\n+    super({\n+      id: '${step.name}',\n+      name: '${step.name.replace(/_/g, ' ').replace(/\\b\\w/g, (l: string) => l.toUpperCase())}',\n+      description: '${step.description}',\n+      type: StepType.ALGORITHM,\n+      implementation: {\n+        type: '${step.algorithm || 'custom'}',\n+        version: '1.0.0',\n+        config: {\n+          timeout: 30000,\n+          retryAttempts: 3\n+        }\n+      },\n+      parameters: {}\n+    });\n+  }\n+  \n+  protected async executeAlgorithm(input: AlgorithmInput): Promise<AlgorithmOutput> {\n+    // TODO: Implement algorithm for: ${step.description}\n+    // \n+    // Algorithm type: ${step.algorithm || 'custom'}\n+    // Estimated duration: ${step.estimated_duration || 'unknown'}\n+    //\n+    // Framework ensures users can always override this with manual data\n+    \n+    throw new Error('Algorithm implementation required for ${step.name}');\n+  }\n+  \n+  protected extractInputs(context: StepContext): AlgorithmInput {\n+    // TODO: Extract required inputs from previous steps\n+    return {\n+      stepContext: context.inputData,\n+      parameters: this.parameters\n+    };\n+  }\n+}`;\n+  }\n+  \n+  private generateFieldsForStep(step: any): any[] {\n+    // Simple field generation based on step content\n+    // In a real implementation, this would use AI/ML to analyze step descriptions\n+    const fields: any[] = [];\n+    \n+    const description = step.description?.toLowerCase() || '';\n+    \n+    // Pattern-based field generation\n+    if (description.includes('name') || description.includes('contact')) {\n+      fields.push({ name: 'contactName', type: 'TEXT', label: 'Contact Name', required: true });\n+    }\n+    \n+    if (description.includes('email')) {\n+      fields.push({ name: 'email', type: 'EMAIL', label: 'Email Address', required: true });\n+    }\n+    \n+    if (description.includes('phone')) {\n+      fields.push({ name: 'phone', type: 'PHONE', label: 'Phone Number', required: false });\n+    }\n+    \n+    if (description.includes('date') || description.includes('schedule')) {\n+      fields.push({ name: 'date', type: 'DATE', label: 'Date', required: true });\n+    }\n+    \n+    if (description.includes('notes') || description.includes('comment')) {\n+      fields.push({ name: 'notes', type: 'TEXTAREA', label: 'Notes', required: false });\n+    }\n+    \n+    // Default field if none detected\n+    if (fields.length === 0) {\n+      fields.push({ name: 'data', type: 'TEXTAREA', label: 'Step Data', required: false });\n+    }\n+    \n+    return fields;\n+  }\n+  \n+  private renderField(field: any): string {\n+    return `          {\n+            id: '${field.name}',\n+            name: '${field.name}',\n+            type: FieldType.${field.type},\n+            label: '${field.label}',\n+            required: ${field.required},\n+            validation: []\n+          }`;\n+  }\n+  \n+  private determineStepType(step: any): 'human' | 'agent' | 'algorithm' {\n+    // Use execution_type from BUSY file if available\n+    if (step.execution_type === 'human') return 'human';\n+    if (step.execution_type === 'algorithmic') return 'algorithm';\n+    \n+    // Infer from description patterns\n+    const description = step.description?.toLowerCase() || '';\n+    \n+    // AI/analysis tasks\n+    if (description.includes('assess') || description.includes('analyze') || \n+        description.includes('evaluate') || description.includes('review')) {\n+      return step.execution_type === 'human' ? 'human' : 'agent';\n+    }\n+    \n+    // Automated tasks\n+    if (description.includes('generate') || description.includes('process') || \n+        description.includes('send') || description.includes('calculate')) {\n+      return 'algorithm';\n+    }\n+    \n+    // Default to human for interactive tasks\n+    return step.execution_type === 'human' ? 'human' : 'algorithm';\n+  }\n+  \n+  private async generateIndexFiles(analysisResult: AnalysisResult): Promise<void> {\n+    const playbooks = Array.from(analysisResult.ast.symbols.playbooks.values());\n+    \n+    // Main index.ts\n+    const mainIndex = `/**\n+ * Generated Business Process Framework Code\n+ * \n+ * 🔗 Design Source: ../../design-docs/008-orgata-framework/ORGATA_FRAMEWORK_ARCHITECTURE.md\n+ */\n+\n+// Process exports\n+${playbooks.map(playbook => \n+  `export { ${this.toPascalCase(playbook.name)}Process } from './processes/${this.toKebabCase(playbook.name)}-process';`\n+).join('\\n')}\n+\n+// Step exports\n+${playbooks.flatMap(playbook => \n+  playbook.node.steps?.map((step: any) => \n+    `export { ${this.toPascalCase(step.name)}Step } from './steps/${this.toKebabCase(step.name)}-step';`\n+  ) || []\n+).join('\\n')}\n+\n+// Metadata\n+export const GENERATED_METADATA = {\n+  generatedAt: '${new Date().toISOString()}',\n+  frameworkVersion: '0.1.0',\n+  processCount: ${playbooks.length},\n+  busySources: [${playbooks.map(p => `'${p.name}.busy'`).join(', ')}]\n+};`;\n+    \n+    await fs.writeFile(path.join(this.options.outputPath, 'src/index.ts'), mainIndex);\n+  }\n+  \n+  private async generateReadme(analysisResult: AnalysisResult, result: FrameworkGenerationResult): Promise<void> {\n+    const playbooks = Array.from(analysisResult.ast.symbols.playbooks.values());\n+    \n+    const readme = `# ${this.options.packageName}\n+\n+Generated business process framework code from BUSY files using the Orgata Framework.\n+\n+## Overview\n+\n+This package contains TypeScript framework code that implements business processes with complete flexibility and user control.\n+\n+## Generated Components\n+\n+- **${result.processClasses} Process Classes**: Complete business process implementations\n+- **${result.stepClasses} Step Classes**: Individual step implementations\n+  - ${result.humanSteps} Human Steps (with generated UI forms)\n+  - ${result.algorithmSteps} Algorithm Steps (automated processing)\n+  - ${result.agentSteps} Agent Steps (AI-powered analysis)\n+\n+## Processes\n+\n+${playbooks.map(playbook => `### ${playbook.name}\n+- **Description**: ${playbook.node.description || 'Business process implementation'}\n+- **Steps**: ${playbook.node.steps?.length || 0}\n+- **Layer**: L0`).join('\\n\\n')}\n+\n+## Usage\n+\n+\\`\\`\\`typescript\n+import { ${playbooks.map(p => this.toPascalCase(p.name) + 'Process').join(', ')} } from '${this.options.packageName}';\n+import { ProcessContext } from '@orgata/framework';\n+\n+// Create process instance\n+const process = new ${this.toPascalCase(playbooks[0]?.name || 'Example')}Process();\n+\n+// Execute with context\n+const context: ProcessContext = {\n+  processId: 'process-001',\n+  userId: 'user-123',\n+  sessionId: 'session-456',\n+  environment: 'production',\n+  businessContext: {\n+    industry: 'your-industry',\n+    businessSize: 'small',\n+    organizationId: 'org-123'\n+  },\n+  permissions: {\n+    canSkipSteps: true,\n+    canOverrideValidation: true,\n+    canModifyProcess: false,\n+    canViewAuditTrail: true\n+  }\n+};\n+\n+const result = await process.execute(context);\n+\\`\\`\\`\n+\n+## Framework Philosophy: \"Facilitate, Never Constrain\"\n+\n+This generated code follows the Orgata Framework principles:\n+\n+- **Complete Flexibility**: Users can skip any step and provide manual data\n+- **Immutable State**: All changes tracked with event sourcing\n+- **Audit Trail**: Complete history of all actions and decisions\n+- **AI Integration**: Intelligent assistance with human oversight\n+- **Never Rewrite History**: Forward-only progression with exception tracking\n+\n+## Installation\n+\n+\\`\\`\\`bash\n+npm install @orgata/framework\n+npm install\n+\\`\\`\\`\n+\n+## Development\n+\n+\\`\\`\\`bash\n+npm run build    # Compile TypeScript\n+npm run test     # Run tests\n+npm run lint     # Check code quality\n+\\`\\`\\`\n+\n+## Generated Files\n+\n+- \\`src/processes/\\` - Process class implementations\n+- \\`src/steps/\\` - Individual step implementations\n+- \\`src/index.ts\\` - Main exports\n+\n+Generated on: ${new Date().toISOString()}\n+`;\n+    \n+    await fs.writeFile(path.join(this.options.outputPath, 'README.md'), readme);\n+  }\n+  \n+  private toPascalCase(str: string): string {\n+    return str.replace(/(^|[_-])([a-z])/g, (match, sep, letter) => letter.toUpperCase());\n+  }\n+  \n+  private toKebabCase(str: string): string {\n+    return str.replace(/_/g, '-').toLowerCase();\n+  }\n+}\n+\n+export async function generateFramework(\n+  analysisResult: AnalysisResult,\n+  options: FrameworkGenerationOptions\n+): Promise<FrameworkGenerationResult> {\n+  const generator = new FrameworkGenerator(options);\n+  return await generator.generateFramework(analysisResult);\n+}\n\\ No newline at end of file\n"
    },
    {
      "filepath": "design-docs/008-orgata-framework/CODE_GENERATION_PATTERNS.md",
      "oldHash": "",
      "newHash": "8e0486b0cbf18cf3d0e8b3bc6481dad503dfa288",
      "timestamp": "2025-07-23T21:16:41.215Z",
      "changeType": "content",
      "gitDiff": "diff --git a/design-docs/008-orgata-framework/CODE_GENERATION_PATTERNS.md b/design-docs/008-orgata-framework/CODE_GENERATION_PATTERNS.md\nnew file mode 100644\nindex 0000000..8e0486b\n--- /dev/null\n+++ b/design-docs/008-orgata-framework/CODE_GENERATION_PATTERNS.md\n@@ -0,0 +1,665 @@\n+# Code Generation Patterns for Orgata Framework\n+\n+**Created**: July 2025  \n+**Status**: Implementation Specification  \n+**Scope**: Templates and patterns for generating TypeScript framework code from BUSY files\n+\n+## Overview\n+\n+This document defines the specific patterns and templates used to transform BUSY file definitions into clean, readable TypeScript code that leverages the Orgata Framework APIs.\n+\n+## Generation Pipeline\n+\n+```\n+BUSY AST → Content Analysis → Template Selection → Code Generation → Post-Processing\n+```\n+\n+### Content Analysis Phase\n+\n+The compiler analyzes BUSY descriptions to extract semantic information for code generation:\n+\n+```typescript\n+interface ContentAnalysis {\n+  stepType: 'human' | 'agent' | 'algorithm';\n+  dataRequirements: DataRequirement[];\n+  uiComponents: UIComponentHint[];\n+  businessLogic: BusinessLogicHint[];\n+  validationRules: ValidationRule[];\n+  complexity: 'simple' | 'moderate' | 'complex';\n+}\n+\n+class ContentAnalyzer {\n+  analyzeStepDescription(description: string): ContentAnalysis {\n+    // Use LLM or rule-based system to extract:\n+    // - Required input fields from description\n+    // - Suggested UI components\n+    // - Business rules and validation\n+    // - Complexity indicators\n+  }\n+}\n+```\n+\n+## Process Generation Templates\n+\n+### Main Process Class Template\n+\n+```handlebars\n+{{>file-header}}\n+import { Process, ProcessConfig, ProcessContext, ProcessResult } from '@orgata/framework';\n+{{#each stepImports}}\n+import { {{className}} } from './steps/{{fileName}}';\n+{{/each}}\n+\n+/**\n+ * {{description}}\n+ * \n+ * Generated from: {{busyFilePath}}\n+ * Layer: {{layer}}\n+ * Estimated Duration: {{estimatedDuration}}\n+ */\n+export class {{className}}Process extends Process {\n+  constructor() {\n+    super({\n+      name: \"{{name}}\",\n+      layer: \"{{layer}}\",\n+      estimatedDuration: \"{{estimatedDuration}}\",\n+      description: \"{{description}}\",\n+      metadata: {\n+        generatedFrom: \"{{busyFilePath}}\",\n+        generatedAt: \"{{generatedAt}}\",\n+        busyVersion: \"{{busyVersion}}\"\n+      }\n+    });\n+    \n+    // Steps defined in BUSY file\n+    {{#each steps}}\n+    this.addStep(new {{className}}());\n+    {{/each}}\n+  }\n+  \n+  async execute(context: ProcessContext): Promise<ProcessResult> {\n+    // Framework handles step-by-step execution\n+    return await this.executeSteps(context);\n+  }\n+  \n+  {{#if hasCustomLogic}}\n+  // Custom business logic methods (modify as needed)\n+  {{#each customMethods}}\n+  {{>custom-method}}\n+  {{/each}}\n+  {{/if}}\n+}\n+```\n+\n+## Step Generation Templates\n+\n+### HumanStep Template\n+\n+```handlebars\n+{{>file-header}}\n+import { HumanStep, HumanStepConfig, StepContext, StepResult, FieldType } from '@orgata/framework';\n+\n+/**\n+ * {{description}}\n+ * \n+ * {{#if generatedFields}}\n+ * Generated fields based on description analysis:\n+ * {{#each generatedFields}}\n+ * - {{name}}: {{description}}\n+ * {{/each}}\n+ * {{/if}}\n+ */\n+export class {{className}}Step extends HumanStep {\n+  constructor() {\n+    super({\n+      id: '{{id}}',\n+      name: '{{name}}',\n+      description: '{{description}}',\n+      model: {\n+        fields: [\n+          {{#each fields}}\n+          {\n+            id: '{{id}}',\n+            name: '{{name}}',\n+            type: FieldType.{{type}},\n+            label: '{{label}}',\n+            placeholder: '{{placeholder}}',\n+            helpText: '{{helpText}}',\n+            required: {{required}},\n+            {{#if validation}}\n+            validation: [\n+              {{#each validation}}\n+              { type: '{{type}}', {{#if value}}value: {{value}}, {{/if}}message: '{{message}}' }{{#unless @last}},{{/unless}}\n+              {{/each}}\n+            ],\n+            {{/if}}\n+            {{#if options}}\n+            options: [\n+              {{#each options}}\n+              { value: '{{value}}', label: '{{label}}' }{{#unless @last}},{{/unless}}\n+              {{/each}}\n+            ],\n+            {{/if}}\n+            {{#if defaultValue}}\n+            defaultValue: {{jsonValue defaultValue}},\n+            {{/if}}\n+            {{#if conditionalLogic}}\n+            conditionalLogic: {{jsonValue conditionalLogic}},\n+            {{/if}}\n+          }{{#unless @last}},{{/unless}}\n+          {{/each}}\n+        ],\n+        layout: {\n+          type: '{{layout.type}}',\n+          columns: {{layout.columns}},\n+          sections: {{jsonValue layout.sections}}\n+        },\n+        validation: {\n+          strategy: '{{validation.strategy}}',\n+          showErrorsOn: '{{validation.showErrorsOn}}'\n+        }\n+      },\n+      view: {\n+        component: '{{view.component}}',\n+        styling: {{jsonValue view.styling}},\n+        behavior: {{jsonValue view.behavior}}\n+      }\n+    });\n+  }\n+  \n+  async execute(context: StepContext): Promise<StepResult> {\n+    // Framework handles UI rendering and data collection\n+    const userInput = await this.collectUserInput(context);\n+    \n+    {{#if hasValidation}}\n+    // Custom validation (modify as needed)\n+    const validationResult = this.validateInput(userInput);\n+    if (!validationResult.valid) {\n+      return {\n+        success: false,\n+        errors: validationResult.errors,\n+        data: userInput\n+      };\n+    }\n+    {{/if}}\n+    \n+    {{#if hasBusinessLogic}}\n+    // Custom business logic (implement as needed)\n+    const processedData = await this.processBusinessLogic(userInput, context);\n+    {{else}}\n+    const processedData = userInput;\n+    {{/if}}\n+    \n+    return {\n+      success: true,\n+      data: processedData,\n+      metadata: {\n+        completedAt: new Date(),\n+        userAgent: context.userAgent,\n+        duration: this.calculateDuration(context.startTime)\n+      }{{#if hasNextStep}},\n+      nextStepId: this.determineNextStep(processedData){{/if}}\n+    };\n+  }\n+  \n+  {{#if hasValidation}}\n+  private validateInput(input: any): ValidationResult {\n+    // TODO: Implement custom validation logic\n+    return { valid: true, errors: [] };\n+  }\n+  {{/if}}\n+  \n+  {{#if hasBusinessLogic}}\n+  private async processBusinessLogic(input: any, context: StepContext): Promise<any> {\n+    // TODO: Implement business logic based on BUSY description:\n+    // {{description}}\n+    return input;\n+  }\n+  {{/if}}\n+  \n+  {{#if hasNextStep}}\n+  private determineNextStep(data: any): string | undefined {\n+    // TODO: Implement conditional flow logic\n+    return undefined;\n+  }\n+  {{/if}}\n+}\n+```\n+\n+### AgentStep Template\n+\n+```handlebars\n+{{>file-header}}\n+import { AgentStep, AgentStepConfig, StepContext, StepResult } from '@orgata/framework';\n+\n+/**\n+ * {{description}}\n+ * \n+ * AI Agent Task: {{agentTask}}\n+ * Expected Output: {{expectedOutput}}\n+ */\n+export class {{className}}Step extends AgentStep {\n+  constructor() {\n+    super({\n+      id: '{{id}}',\n+      name: '{{name}}',\n+      description: '{{description}}',\n+      prompt: {\n+        systemPrompt: `{{systemPrompt}}`,\n+        userPrompt: `{{userPrompt}}`,\n+        context: {\n+          businessDomain: '{{businessDomain}}',\n+          expectedFormat: '{{expectedFormat}}',\n+          qualityCriteria: {{jsonValue qualityCriteria}}\n+        },\n+        constraints: {\n+          maxTokens: {{maxTokens}},\n+          temperature: {{temperature}},\n+          requireStructuredOutput: {{requireStructuredOutput}}\n+        }\n+      },\n+      context: {\n+        availableData: {{jsonValue availableData}},\n+        requiredOutputs: {{jsonValue requiredOutputs}},\n+        businessRules: {{jsonValue businessRules}}\n+      }\n+    });\n+  }\n+  \n+  async execute(context: StepContext): Promise<StepResult> {\n+    // Build prompt with current context\n+    const enrichedPrompt = await this.buildContextualPrompt(context);\n+    \n+    // Execute AI agent\n+    const agentResponse = await this.executeAgent(enrichedPrompt, this.context);\n+    \n+    // Validate and process response\n+    const validationResult = this.validateAgentOutput(agentResponse);\n+    if (!validationResult.valid) {\n+      return {\n+        success: false,\n+        errors: validationResult.errors,\n+        data: agentResponse,\n+        metadata: {\n+          requiresHumanReview: true,\n+          confidence: agentResponse.confidence\n+        }\n+      };\n+    }\n+    \n+    {{#if hasPostProcessing}}\n+    // Post-process agent output (modify as needed)\n+    const processedData = await this.postProcessOutput(agentResponse, context);\n+    {{else}}\n+    const processedData = agentResponse.structuredData || agentResponse.content;\n+    {{/if}}\n+    \n+    return {\n+      success: true,\n+      data: processedData,\n+      metadata: {\n+        agentConfidence: agentResponse.confidence,\n+        reasoning: agentResponse.reasoning,\n+        completedAt: new Date(),\n+        requiresReview: agentResponse.confidence < 0.8\n+      }\n+    };\n+  }\n+  \n+  private async buildContextualPrompt(context: StepContext): string {\n+    // Build prompt with available context data\n+    const contextData = this.extractRelevantContext(context);\n+    \n+    return this.prompt.userPrompt\n+      .replace(/\\{\\{([^}]+)\\}\\}/g, (match, key) => {\n+        return contextData[key] || match;\n+      });\n+  }\n+  \n+  private extractRelevantContext(context: StepContext): Record<string, any> {\n+    // TODO: Extract relevant data from previous steps\n+    // Based on BUSY description: {{description}}\n+    \n+    return {\n+      {{#each contextMappings}}\n+      {{key}}: context.previousStepResults.get('{{sourceStep}}')?.data?.{{sourceField}} || 'Not available',\n+      {{/each}}\n+      processContext: context.businessContext\n+    };\n+  }\n+  \n+  {{#if hasPostProcessing}}\n+  private async postProcessOutput(response: AgentResponse, context: StepContext): Promise<any> {\n+    // TODO: Implement post-processing logic\n+    return response.structuredData;\n+  }\n+  {{/if}}\n+}\n+```\n+\n+### AlgorithmStep Template\n+\n+```handlebars\n+{{>file-header}}\n+import { AlgorithmStep, AlgorithmStepConfig, StepContext, StepResult } from '@orgata/framework';\n+\n+/**\n+ * {{description}}\n+ * \n+ * Algorithm: {{algorithmType}}\n+ * Inputs: {{inputs}}\n+ * Outputs: {{outputs}}\n+ */\n+export class {{className}}Step extends AlgorithmStep {\n+  constructor() {\n+    super({\n+      id: '{{id}}',\n+      name: '{{name}}',\n+      description: '{{description}}',\n+      parameters: {\n+        {{#each parameters}}\n+        {{name}}: {{jsonValue value}},\n+        {{/each}}\n+      },\n+      implementation: {\n+        type: '{{implementationType}}',\n+        config: {{jsonValue implementationConfig}}\n+      }\n+    });\n+  }\n+  \n+  async execute(context: StepContext): Promise<StepResult> {\n+    try {\n+      // Extract required inputs\n+      const algorithmInput = this.extractInputs(context);\n+      \n+      // Validate inputs\n+      const inputValidation = this.validateInputs(algorithmInput);\n+      if (!inputValidation.valid) {\n+        return {\n+          success: false,\n+          errors: inputValidation.errors,\n+          data: algorithmInput\n+        };\n+      }\n+      \n+      // Execute algorithm\n+      const result = await this.executeAlgorithm(algorithmInput);\n+      \n+      // Validate outputs\n+      const outputValidation = this.validateOutputs(result);\n+      if (!outputValidation.valid) {\n+        return {\n+          success: false,\n+          errors: outputValidation.errors,\n+          data: result,\n+          metadata: { requiresManualReview: true }\n+        };\n+      }\n+      \n+      return {\n+        success: true,\n+        data: result,\n+        metadata: {\n+          algorithmVersion: '{{algorithmVersion}}',\n+          executionTime: this.getExecutionTime(),\n+          completedAt: new Date()\n+        }\n+      };\n+      \n+    } catch (error) {\n+      return {\n+        success: false,\n+        errors: [{ message: error.message, code: 'ALGORITHM_ERROR' }],\n+        data: null,\n+        metadata: { \n+          requiresManualIntervention: true,\n+          error: error.toString()\n+        }\n+      };\n+    }\n+  }\n+  \n+  private extractInputs(context: StepContext): AlgorithmInput {\n+    // TODO: Extract algorithm inputs from context\n+    // Based on BUSY description: {{description}}\n+    \n+    return {\n+      {{#each inputMappings}}\n+      {{name}}: context.previousStepResults.get('{{sourceStep}}')?.data?.{{sourceField}},\n+      {{/each}}\n+      {{#each staticInputs}}\n+      {{name}}: {{jsonValue value}},\n+      {{/each}}\n+    };\n+  }\n+  \n+  private async executeAlgorithm(input: AlgorithmInput): Promise<AlgorithmOutput> {\n+    // TODO: Implement algorithm based on BUSY description:\n+    // {{description}}\n+    \n+    {{#if algorithmHints}}\n+    // Algorithm hints from description analysis:\n+    {{#each algorithmHints}}\n+    // - {{.}}\n+    {{/each}}\n+    {{/if}}\n+    \n+    throw new Error('Algorithm implementation required');\n+  }\n+  \n+  private validateInputs(input: AlgorithmInput): ValidationResult {\n+    const errors: ValidationError[] = [];\n+    \n+    {{#each requiredInputs}}\n+    if (!input.{{name}}) {\n+      errors.push({ field: '{{name}}', message: '{{name}} is required for {{../../name}}' });\n+    }\n+    {{/each}}\n+    \n+    {{#each inputValidations}}\n+    if (input.{{field}} && {{condition}}) {\n+      errors.push({ field: '{{field}}', message: '{{message}}' });\n+    }\n+    {{/each}}\n+    \n+    return { valid: errors.length === 0, errors };\n+  }\n+  \n+  private validateOutputs(output: AlgorithmOutput): ValidationResult {\n+    // TODO: Validate algorithm outputs\n+    return { valid: true, errors: [] };\n+  }\n+}\n+```\n+\n+## Supporting File Templates\n+\n+### Index File Template\n+\n+```handlebars\n+{{>file-header}}\n+// Generated process exports\n+export { {{className}}Process } from './{{fileName}}Process';\n+\n+// Generated step exports\n+{{#each steps}}\n+export { {{className}} } from './steps/{{fileName}}';\n+{{/each}}\n+\n+// Generated types\n+export * from './types';\n+\n+// Process metadata\n+export const PROCESS_METADATA = {\n+  name: '{{processName}}',\n+  version: '{{version}}',\n+  generatedAt: '{{generatedAt}}',\n+  busySource: '{{busyFilePath}}'\n+};\n+```\n+\n+### Types File Template\n+\n+```handlebars\n+{{>file-header}}\n+// Generated types for {{processName}}\n+\n+{{#each customTypes}}\n+export interface {{name}} {\n+  {{#each properties}}\n+  {{name}}{{#unless required}}?{{/unless}}: {{type}};\n+  {{/each}}\n+}\n+\n+{{/each}}\n+\n+{{#each enums}}\n+export enum {{name}} {\n+  {{#each values}}\n+  {{key}} = '{{value}}'{{#unless @last}},{{/unless}}\n+  {{/each}}\n+}\n+\n+{{/each}}\n+\n+// Step data interfaces\n+{{#each steps}}\n+export interface {{className}}Data {\n+  {{#each dataFields}}\n+  {{name}}{{#unless required}}?{{/unless}}: {{type}};\n+  {{/each}}\n+}\n+\n+{{/each}}\n+```\n+\n+## Content Analysis Rules\n+\n+### Field Extraction Rules\n+\n+```typescript\n+const FIELD_EXTRACTION_RULES = [\n+  {\n+    pattern: /collect|gather|obtain.*?(email|contact)/i,\n+    generates: { type: 'email', name: 'contactEmail', required: true }\n+  },\n+  {\n+    pattern: /budget|cost|price|amount/i,\n+    generates: { type: 'currency', name: 'budget', required: true }\n+  },\n+  {\n+    pattern: /deadline|due date|timeline|completion date/i,\n+    generates: { type: 'date', name: 'deadline', required: false }\n+  },\n+  {\n+    pattern: /description|notes|comments|details/i,\n+    generates: { type: 'textarea', name: 'description', required: false }\n+  },\n+  {\n+    pattern: /phone|telephone|mobile/i,\n+    generates: { type: 'phone', name: 'phoneNumber', required: false }\n+  },\n+  {\n+    pattern: /website|url|link/i,\n+    generates: { type: 'url', name: 'website', required: false }\n+  }\n+];\n+```\n+\n+### UI Component Hints\n+\n+```typescript\n+const UI_COMPONENT_RULES = [\n+  {\n+    condition: 'fieldCount <= 3',\n+    suggests: 'single-column-form'\n+  },\n+  {\n+    condition: 'fieldCount > 6',\n+    suggests: 'multi-step-wizard'\n+  },\n+  {\n+    condition: 'hasFileUpload',\n+    suggests: 'drag-drop-form'\n+  },\n+  {\n+    condition: 'hasComplexData',\n+    suggests: 'tabbed-form'\n+  }\n+];\n+```\n+\n+### Business Logic Extraction\n+\n+```typescript\n+const BUSINESS_LOGIC_PATTERNS = [\n+  {\n+    pattern: /calculate|compute|determine/i,\n+    type: 'calculation',\n+    generates: 'algorithm_step'\n+  },\n+  {\n+    pattern: /analyze|evaluate|assess/i,\n+    type: 'analysis',\n+    generates: 'agent_step'\n+  },\n+  {\n+    pattern: /review|approve|validate/i,\n+    type: 'approval',\n+    generates: 'human_step'\n+  },\n+  {\n+    pattern: /generate|create|produce/i,\n+    type: 'generation',\n+    generates: 'agent_step'\n+  }\n+];\n+```\n+\n+## Post-Processing\n+\n+### Code Formatting\n+\n+```typescript\n+class CodeFormatter {\n+  formatGeneratedCode(code: string): string {\n+    // Apply Prettier formatting\n+    // Add consistent imports\n+    // Organize code structure\n+    // Add helpful comments\n+  }\n+  \n+  addImports(code: string, dependencies: string[]): string {\n+    // Add necessary framework imports\n+    // Sort imports alphabetically\n+    // Remove unused imports\n+  }\n+  \n+  addDocumentation(code: string, metadata: GenerationMetadata): string {\n+    // Add JSDoc comments\n+    // Include generation metadata\n+    // Add TODO comments for implementation\n+  }\n+}\n+```\n+\n+### Quality Validation\n+\n+```typescript\n+class GeneratedCodeValidator {\n+  validateTypeScript(code: string): ValidationResult {\n+    // Check TypeScript compilation\n+    // Validate framework API usage\n+    // Ensure type safety\n+  }\n+  \n+  validateFrameworkUsage(code: string): ValidationResult {\n+    // Verify correct framework patterns\n+    // Check required method implementations\n+    // Validate configuration objects\n+  }\n+}\n+```\n+\n+This comprehensive set of patterns and templates provides the foundation for generating clean, maintainable TypeScript code from BUSY file definitions while preserving the flexibility and intelligent override capabilities of the Orgata Framework.\n\\ No newline at end of file\n"
    },
    {
      "filepath": "design-docs/008-orgata-framework/COMPILER_MODIFICATIONS.md",
      "oldHash": "",
      "newHash": "34abbb99968053883754053580ea58a11ab585ed",
      "timestamp": "2025-07-23T21:16:41.255Z",
      "changeType": "content",
      "gitDiff": "diff --git a/design-docs/008-orgata-framework/COMPILER_MODIFICATIONS.md b/design-docs/008-orgata-framework/COMPILER_MODIFICATIONS.md\nnew file mode 100644\nindex 0000000..34abbb9\n--- /dev/null\n+++ b/design-docs/008-orgata-framework/COMPILER_MODIFICATIONS.md\n@@ -0,0 +1,659 @@\n+# BUSY Compiler Modifications for Framework Output\n+\n+**Created**: July 2025  \n+**Status**: Implementation Specification  \n+**Scope**: Detailed modifications needed to transform BUSY compiler from YAML generation to TypeScript framework code generation\n+\n+## Overview\n+\n+This document outlines the specific changes needed to modify the existing BUSY compiler to generate TypeScript framework code instead of YAML configuration files.\n+\n+## Current Compiler Architecture Analysis\n+\n+### Existing Pipeline\n+\n+Looking at the current compiler structure:\n+\n+```\n+compiler/src/\n+├── core/\n+│   ├── scanner.ts      # File discovery and tokenization\n+│   ├── parser.ts       # YAML parsing and validation\n+│   └── builder.ts      # AST construction\n+├── ast/\n+│   └── builder.ts      # AST node creation\n+├── symbols/\n+│   └── table.ts        # Symbol table management\n+├── cli/\n+│   └── types.ts        # CLI interface types\n+└── index.ts           # Public API\n+```\n+\n+**Current Flow**: BUSY Files → Scanner → Parser → AST → Symbol Table → CLI Output\n+\n+**Target Flow**: BUSY Files → Scanner → Parser → AST → Content Analyzer → Code Generator → TypeScript Output\n+\n+## Required Modifications\n+\n+### 1. New Code Generation Pipeline\n+\n+#### Add Content Analysis Phase\n+\n+```typescript\n+// compiler/src/analysis/content-analyzer.ts\n+export class ContentAnalyzer {\n+  async analyzeProcess(ast: BusyAST): Promise<ProcessAnalysis> {\n+    return {\n+      processMetadata: this.extractProcessMetadata(ast),\n+      steps: await this.analyzeSteps(ast.steps),\n+      dependencies: this.analyzeDependencies(ast),\n+      businessRules: this.extractBusinessRules(ast)\n+    };\n+  }\n+  \n+  private async analyzeSteps(steps: StepNode[]): Promise<StepAnalysis[]> {\n+    return Promise.all(steps.map(step => this.analyzeStep(step)));\n+  }\n+  \n+  private async analyzeStep(step: StepNode): Promise<StepAnalysis> {\n+    // Use LLM or rule-based system to analyze step descriptions\n+    const analysis = await this.extractStepMetadata(step);\n+    \n+    return {\n+      stepType: this.determineStepType(step, analysis),\n+      dataRequirements: this.extractDataRequirements(step.description),\n+      uiHints: this.generateUIHints(step.description),\n+      businessLogic: this.extractBusinessLogic(step.description),\n+      validationRules: this.extractValidationRules(step),\n+      complexity: this.assessComplexity(step)\n+    };\n+  }\n+  \n+  private determineStepType(step: StepNode, analysis: any): StepType {\n+    // Determine if step should be Human, Agent, or Algorithm\n+    if (step.type) return step.type; // Explicit in BUSY file\n+    \n+    // Infer from description analysis\n+    if (analysis.requiresUserInput) return 'human';\n+    if (analysis.requiresAIAnalysis) return 'agent';\n+    if (analysis.requiresCalculation) return 'algorithm';\n+    \n+    return 'human'; // Default fallback\n+  }\n+}\n+```\n+\n+#### Add Code Generation Phase\n+\n+```typescript\n+// compiler/src/generation/code-generator.ts\n+export class FrameworkCodeGenerator {\n+  constructor(\n+    private templateEngine: TemplateEngine,\n+    private contentAnalyzer: ContentAnalyzer\n+  ) {}\n+  \n+  async generateProcess(analysis: ProcessAnalysis): Promise<GeneratedFiles> {\n+    const files = new Map<string, string>();\n+    \n+    // Generate main process class\n+    const processCode = await this.generateProcessClass(analysis);\n+    files.set(`${analysis.processMetadata.fileName}Process.ts`, processCode);\n+    \n+    // Generate step classes\n+    for (const stepAnalysis of analysis.steps) {\n+      const stepCode = await this.generateStepClass(stepAnalysis);\n+      files.set(`steps/${stepAnalysis.fileName}.ts`, stepCode);\n+    }\n+    \n+    // Generate supporting files\n+    files.set('index.ts', await this.generateIndexFile(analysis));\n+    files.set('types.ts', await this.generateTypesFile(analysis));\n+    \n+    return { files, metadata: this.generateMetadata(analysis) };\n+  }\n+  \n+  private async generateProcessClass(analysis: ProcessAnalysis): Promise<string> {\n+    const template = await this.templateEngine.loadTemplate('process.hbs');\n+    \n+    return this.templateEngine.render(template, {\n+      className: analysis.processMetadata.className,\n+      name: analysis.processMetadata.name,\n+      description: analysis.processMetadata.description,\n+      layer: analysis.processMetadata.layer,\n+      estimatedDuration: analysis.processMetadata.estimatedDuration,\n+      steps: analysis.steps.map(step => ({\n+        className: step.className,\n+        fileName: step.fileName\n+      })),\n+      busyFilePath: analysis.processMetadata.sourceFile,\n+      generatedAt: new Date().toISOString()\n+    });\n+  }\n+  \n+  private async generateStepClass(stepAnalysis: StepAnalysis): Promise<string> {\n+    const templateName = `${stepAnalysis.stepType}-step.hbs`;\n+    const template = await this.templateEngine.loadTemplate(templateName);\n+    \n+    return this.templateEngine.render(template, {\n+      className: stepAnalysis.className,\n+      id: stepAnalysis.id,\n+      name: stepAnalysis.name,\n+      description: stepAnalysis.description,\n+      ...this.generateStepSpecificData(stepAnalysis)\n+    });\n+  }\n+  \n+  private generateStepSpecificData(stepAnalysis: StepAnalysis): any {\n+    switch (stepAnalysis.stepType) {\n+      case 'human':\n+        return this.generateHumanStepData(stepAnalysis);\n+      case 'agent':\n+        return this.generateAgentStepData(stepAnalysis);\n+      case 'algorithm':\n+        return this.generateAlgorithmStepData(stepAnalysis);\n+      default:\n+        throw new Error(`Unknown step type: ${stepAnalysis.stepType}`);\n+    }\n+  }\n+}\n+```\n+\n+### 2. Enhanced AST Node Types\n+\n+#### Extend Existing AST Types\n+\n+```typescript\n+// compiler/src/ast/nodes.ts (additions to existing file)\n+\n+// Extend existing ProcessNode\n+export interface ProcessNode extends BaseNode {\n+  // ... existing properties\n+  \n+  // New properties for framework generation\n+  framework?: FrameworkConfig;\n+  customMethods?: CustomMethodNode[];\n+  businessRules?: BusinessRuleNode[];\n+}\n+\n+// Extend existing StepNode  \n+export interface StepNode extends BaseNode {\n+  // ... existing properties\n+  \n+  // Enhanced properties for code generation\n+  stepType?: 'human' | 'agent' | 'algorithm';\n+  contentAnalysis?: StepContentAnalysis;\n+  generatedFields?: GeneratedField[];\n+  uiHints?: UIHint[];\n+  businessLogic?: BusinessLogicHint[];\n+}\n+\n+// New node types for framework generation\n+export interface FrameworkConfig {\n+  customValidation?: ValidationRule[];\n+  permissions?: PermissionRule[];\n+  auditLevel?: 'basic' | 'detailed' | 'comprehensive';\n+}\n+\n+export interface CustomMethodNode extends BaseNode {\n+  name: string;\n+  parameters: ParameterNode[];\n+  returnType: string;\n+  implementation?: string;\n+}\n+\n+export interface BusinessRuleNode extends BaseNode {\n+  condition: string;\n+  action: string;\n+  priority: number;\n+}\n+\n+export interface GeneratedField {\n+  name: string;\n+  type: FieldType;\n+  label: string;\n+  required: boolean;\n+  validation?: ValidationRule[];\n+  derivedFrom: string; // Which part of description generated this\n+}\n+\n+export interface UIHint {\n+  component: string;\n+  layout: string;\n+  styling?: Record<string, any>;\n+  behavior?: Record<string, any>;\n+}\n+\n+export interface BusinessLogicHint {\n+  type: 'calculation' | 'validation' | 'transformation' | 'analysis';\n+  description: string;\n+  suggestedImplementation?: string;\n+  complexity: 'simple' | 'moderate' | 'complex';\n+}\n+```\n+\n+### 3. Modified Compiler Entry Point\n+\n+#### Update Main Compiler Class\n+\n+```typescript\n+// compiler/src/index.ts (modifications to existing)\n+\n+export class BusyCompiler {\n+  private config: CompilerConfig;\n+  private contentAnalyzer: ContentAnalyzer;\n+  private codeGenerator: FrameworkCodeGenerator;\n+  \n+  constructor(config?: Partial<CompilerConfig>) {\n+    this.config = { ...DEFAULT_CONFIG, ...config };\n+    this.contentAnalyzer = new ContentAnalyzer(this.config);\n+    this.codeGenerator = new FrameworkCodeGenerator(\n+      new TemplateEngine(),\n+      this.contentAnalyzer\n+    );\n+  }\n+  \n+  /**\n+   * Compile BUSY repository to framework code\n+   */\n+  async compileToFramework(sourcePath: string, outputPath: string): Promise<FrameworkCompilationResult> {\n+    // Phase 1: Scan and Parse (existing)\n+    const scanner = new Scanner(this.config);\n+    const scanResult = await scanner.scan(sourcePath);\n+    \n+    const parser = new Parser(this.config);\n+    const parseResult = await parser.parse(scanResult);\n+    \n+    // Phase 2: Build AST (existing)\n+    const astBuilder = new ASTBuilder();\n+    const buildResult = await astBuilder.build(parseResult);\n+    \n+    // Phase 3: Content Analysis (new)\n+    const analysisResults: ProcessAnalysis[] = [];\n+    for (const busyFile of buildResult.busyFiles) {\n+      const analysis = await this.contentAnalyzer.analyzeProcess(busyFile.ast);\n+      analysisResults.push(analysis);\n+    }\n+    \n+    // Phase 4: Code Generation (new)\n+    const generationResults: GeneratedFiles[] = [];\n+    for (const analysis of analysisResults) {\n+      const generated = await this.codeGenerator.generateProcess(analysis);\n+      generationResults.push(generated);\n+      \n+      // Write generated files to output directory\n+      await this.writeGeneratedFiles(generated, outputPath);\n+    }\n+    \n+    return {\n+      scanResult,\n+      parseResult, \n+      buildResult,\n+      analysisResults,\n+      generationResults,\n+      summary: this.createFrameworkSummary(generationResults)\n+    };\n+  }\n+  \n+  private async writeGeneratedFiles(generated: GeneratedFiles, outputPath: string): Promise<void> {\n+    for (const [filePath, content] of generated.files) {\n+      const fullPath = path.join(outputPath, filePath);\n+      await fs.ensureDir(path.dirname(fullPath));\n+      await fs.writeFile(fullPath, content, 'utf-8');\n+    }\n+  }\n+}\n+```\n+\n+### 4. Template Engine Integration\n+\n+#### Handlebars Template System\n+\n+```typescript\n+// compiler/src/generation/template-engine.ts\n+export class TemplateEngine {\n+  private handlebars: typeof Handlebars;\n+  private templateCache: Map<string, HandlebarsTemplateDelegate>;\n+  \n+  constructor() {\n+    this.handlebars = Handlebars.create();\n+    this.templateCache = new Map();\n+    this.registerHelpers();\n+  }\n+  \n+  private registerHelpers(): void {\n+    // Custom helpers for code generation\n+    this.handlebars.registerHelper('camelCase', (str: string) => {\n+      return str.replace(/-([a-z])/g, (g) => g[1].toUpperCase());\n+    });\n+    \n+    this.handlebars.registerHelper('pascalCase', (str: string) => {\n+      return str.replace(/(^|-)([a-z])/g, (g) => g.slice(-1).toUpperCase());\n+    });\n+    \n+    this.handlebars.registerHelper('jsonValue', (value: any) => {\n+      return JSON.stringify(value, null, 2);\n+    });\n+    \n+    this.handlebars.registerHelper('formatDate', (date: Date) => {\n+      return date.toISOString();\n+    });\n+    \n+    // Framework-specific helpers\n+    this.handlebars.registerHelper('fieldType', (type: string) => {\n+      const typeMap: Record<string, string> = {\n+        'text': 'FieldType.TEXT',\n+        'email': 'FieldType.EMAIL',\n+        'number': 'FieldType.NUMBER',\n+        'date': 'FieldType.DATE',\n+        'textarea': 'FieldType.TEXTAREA',\n+        'select': 'FieldType.SELECT',\n+        'currency': 'FieldType.CURRENCY'\n+      };\n+      return typeMap[type] || 'FieldType.TEXT';\n+    });\n+  }\n+  \n+  async loadTemplate(name: string): Promise<HandlebarsTemplateDelegate> {\n+    if (this.templateCache.has(name)) {\n+      return this.templateCache.get(name)!;\n+    }\n+    \n+    const templatePath = path.join(__dirname, '../templates', name);\n+    const templateSource = await fs.readFile(templatePath, 'utf-8');\n+    const template = this.handlebars.compile(templateSource);\n+    \n+    this.templateCache.set(name, template);\n+    return template;\n+  }\n+  \n+  render(template: HandlebarsTemplateDelegate, context: any): string {\n+    return template(context);\n+  }\n+}\n+```\n+\n+### 5. CLI Interface Updates\n+\n+#### Enhanced CLI Commands\n+\n+```typescript\n+// compiler/src/cli/commands.ts (new file)\n+export class FrameworkCliCommands {\n+  async generateCommand(args: GenerateCommandArgs): Promise<void> {\n+    const compiler = new BusyCompiler(args.config);\n+    \n+    console.log(`🔄 Compiling BUSY files to Orgata Framework...`);\n+    console.log(`Source: ${args.sourcePath}`);\n+    console.log(`Output: ${args.outputPath}`);\n+    \n+    const result = await compiler.compileToFramework(args.sourcePath, args.outputPath);\n+    \n+    if (result.summary.success) {\n+      console.log(`✅ Generated ${result.summary.processCount} processes`);\n+      console.log(`📁 ${result.summary.fileCount} files created`);\n+      console.log(`⏱️  Compilation completed in ${result.summary.duration}ms`);\n+      \n+      if (args.verbose) {\n+        this.printDetailedResults(result);\n+      }\n+    } else {\n+      console.error(`❌ Compilation failed`);\n+      result.summary.errors.forEach(error => {\n+        console.error(`   ${error}`);\n+      });\n+      process.exit(1);\n+    }\n+  }\n+  \n+  async watchCommand(args: WatchCommandArgs): Promise<void> {\n+    const compiler = new BusyCompiler(args.config);\n+    const watcher = new FileWatcher(args.sourcePath);\n+    \n+    console.log(`👁️  Watching for changes in ${args.sourcePath}...`);\n+    \n+    watcher.on('change', async (changedFiles: string[]) => {\n+      console.log(`🔄 Detected changes, recompiling...`);\n+      \n+      try {\n+        await compiler.compileToFramework(args.sourcePath, args.outputPath);\n+        console.log(`✅ Recompilation complete`);\n+      } catch (error) {\n+        console.error(`❌ Recompilation failed:`, error);\n+      }\n+    });\n+  }\n+}\n+```\n+\n+#### Update Package Scripts\n+\n+```json\n+// compiler/package.json additions\n+{\n+  \"scripts\": {\n+    \"build\": \"tsup\",\n+    \"dev\": \"tsup --watch\",\n+    \"generate\": \"node dist/cli.js generate\",\n+    \"watch\": \"node dist/cli.js watch\"\n+  },\n+  \"bin\": {\n+    \"busy-compile\": \"./dist/cli.js\"\n+  }\n+}\n+```\n+\n+### 6. Configuration Extensions\n+\n+#### Enhanced Compiler Config\n+\n+```typescript\n+// compiler/src/config/types.ts (additions to existing)\n+export interface CompilerConfig {\n+  // ... existing properties\n+  \n+  // New framework generation options\n+  framework: FrameworkGenerationConfig;\n+  templates: TemplateConfig;\n+  output: OutputConfig;\n+}\n+\n+export interface FrameworkGenerationConfig {\n+  packageName: string;\n+  outputFormat: 'typescript' | 'javascript';\n+  includeTests: boolean;\n+  includeDocs: boolean;\n+  customTemplatesPath?: string;\n+  contentAnalysis: ContentAnalysisConfig;\n+}\n+\n+export interface ContentAnalysisConfig {\n+  enabled: boolean;\n+  provider: 'rule-based' | 'llm' | 'hybrid';\n+  llmConfig?: {\n+    model: string;\n+    apiKey?: string;\n+    maxTokens: number;\n+  };\n+  rules: AnalysisRule[];\n+}\n+\n+export interface TemplateConfig {\n+  customTemplatesPath?: string;\n+  templateVariables?: Record<string, any>;\n+  helpers?: Record<string, Function>;\n+}\n+\n+export interface OutputConfig {\n+  baseDirectory: string;\n+  fileNaming: 'kebab-case' | 'camelCase' | 'PascalCase';\n+  includeSourceMaps: boolean;\n+  formatting: FormattingConfig;\n+}\n+\n+export interface FormattingConfig {\n+  prettier: boolean;\n+  eslint: boolean;\n+  customPrettierConfig?: Record<string, any>;\n+}\n+```\n+\n+### 7. Error Handling and Validation\n+\n+#### Framework-Specific Validation\n+\n+```typescript\n+// compiler/src/validation/framework-validator.ts\n+export class FrameworkValidator {\n+  validateGeneratedCode(generatedFiles: GeneratedFiles): ValidationResult {\n+    const errors: ValidationError[] = [];\n+    const warnings: ValidationWarning[] = [];\n+    \n+    for (const [filePath, content] of generatedFiles.files) {\n+      // TypeScript compilation check\n+      const tsErrors = this.validateTypeScript(content, filePath);\n+      errors.push(...tsErrors);\n+      \n+      // Framework API usage validation\n+      const frameworkErrors = this.validateFrameworkUsage(content, filePath);\n+      errors.push(...frameworkErrors);\n+      \n+      // Code quality checks\n+      const qualityWarnings = this.checkCodeQuality(content, filePath);\n+      warnings.push(...qualityWarnings);\n+    }\n+    \n+    return {\n+      valid: errors.length === 0,\n+      errors,\n+      warnings\n+    };\n+  }\n+  \n+  private validateTypeScript(code: string, filePath: string): ValidationError[] {\n+    // Use TypeScript compiler API to validate generated code\n+    // Return compilation errors if any\n+  }\n+  \n+  private validateFrameworkUsage(code: string, filePath: string): ValidationError[] {\n+    // Check for correct framework API usage\n+    // Validate required method implementations\n+    // Check configuration object structures\n+  }\n+}\n+```\n+\n+## Testing Strategy\n+\n+### Unit Tests for New Components\n+\n+```typescript\n+// compiler/src/__tests__/content-analyzer.test.ts\n+describe('ContentAnalyzer', () => {\n+  let analyzer: ContentAnalyzer;\n+  \n+  beforeEach(() => {\n+    analyzer = new ContentAnalyzer(DEFAULT_CONFIG);\n+  });\n+  \n+  test('should determine step type from description', async () => {\n+    const step: StepNode = {\n+      id: 'test-step',\n+      name: 'Test Step',\n+      description: 'Collect client email address and phone number',\n+      type: BaseNodeType.STEP\n+    };\n+    \n+    const analysis = await analyzer.analyzeStep(step);\n+    \n+    expect(analysis.stepType).toBe('human');\n+    expect(analysis.dataRequirements).toContainEqual(\n+      expect.objectContaining({\n+        name: 'contactEmail',\n+        type: 'email',\n+        required: true\n+      })\n+    );\n+  });\n+});\n+\n+// compiler/src/__tests__/code-generator.test.ts\n+describe('FrameworkCodeGenerator', () => {\n+  let generator: FrameworkCodeGenerator;\n+  \n+  test('should generate valid process class', async () => {\n+    const analysis: ProcessAnalysis = {\n+      processMetadata: {\n+        name: 'Test Process',\n+        className: 'TestProcess',\n+        fileName: 'test-process'\n+      },\n+      steps: []\n+    };\n+    \n+    const result = await generator.generateProcess(analysis);\n+    \n+    expect(result.files.has('TestProcess.ts')).toBe(true);\n+    \n+    const processCode = result.files.get('TestProcess.ts')!;\n+    expect(processCode).toContain('export class TestProcess extends Process');\n+    expect(processCode).toContain('constructor()');\n+  });\n+});\n+```\n+\n+### Integration Tests\n+\n+```typescript\n+// compiler/src/__tests__/integration/full-compilation.test.ts\n+describe('Full Compilation Integration', () => {\n+  test('should compile complete BUSY project to framework code', async () => {\n+    const compiler = new BusyCompiler();\n+    const tempDir = await createTempDirectory();\n+    \n+    // Copy test BUSY files\n+    await copyTestFiles(tempDir);\n+    \n+    // Compile to framework\n+    const result = await compiler.compileToFramework(\n+      path.join(tempDir, 'src'),\n+      path.join(tempDir, 'generated')\n+    );\n+    \n+    expect(result.summary.success).toBe(true);\n+    expect(result.summary.processCount).toBe(2);\n+    \n+    // Validate generated files exist and compile\n+    const generatedFiles = await glob(path.join(tempDir, 'generated', '**/*.ts'));\n+    expect(generatedFiles.length).toBeGreaterThan(0);\n+    \n+    // Validate TypeScript compilation\n+    const tsResult = await compileTypeScript(path.join(tempDir, 'generated'));\n+    expect(tsResult.success).toBe(true);\n+  });\n+});\n+```\n+\n+## Migration Strategy\n+\n+### Phase 1: Parallel Implementation\n+- Keep existing YAML generation working\n+- Add new framework generation as separate command\n+- Both systems share same parser and AST\n+\n+### Phase 2: Feature Parity\n+- Ensure framework generation covers all BUSY features\n+- Add comprehensive testing\n+- Performance optimization\n+\n+### Phase 3: Replacement\n+- Make framework generation the default\n+- Add migration tools for existing projects\n+- Deprecate YAML generation\n+\n+### Phase 4: Cleanup\n+- Remove old generation code\n+- Simplify CLI interface\n+- Update documentation\n+\n+This comprehensive modification plan transforms the BUSY compiler from a YAML generator into a sophisticated framework code generator while maintaining the existing parsing and AST infrastructure.\n\\ No newline at end of file\n"
    },
    {
      "filepath": "design-docs/008-orgata-framework/FRAMEWORK_API_SPECIFICATION.md",
      "oldHash": "",
      "newHash": "1769a305edb3052f7a05ae58466afd675b4275d3",
      "timestamp": "2025-07-23T21:16:41.296Z",
      "changeType": "content",
      "gitDiff": "diff --git a/design-docs/008-orgata-framework/FRAMEWORK_API_SPECIFICATION.md b/design-docs/008-orgata-framework/FRAMEWORK_API_SPECIFICATION.md\nnew file mode 100644\nindex 0000000..1769a30\n--- /dev/null\n+++ b/design-docs/008-orgata-framework/FRAMEWORK_API_SPECIFICATION.md\n@@ -0,0 +1,601 @@\n+# Orgata Framework API Specification\n+\n+**Created**: July 2025  \n+**Status**: Design Phase  \n+**Scope**: Complete API specification for @orgata/framework package\n+\n+## Overview\n+\n+Comprehensive API specification for the Orgata Framework, designed to provide a React-like experience for business process development with complete flexibility and intelligent override capabilities.\n+\n+## Core API Structure\n+\n+### Base Classes\n+\n+#### Process Class\n+\n+```typescript\n+abstract class Process extends EventEmitter {\n+  readonly id: string;\n+  readonly name: string;\n+  readonly config: ProcessConfig;\n+  protected steps: Map<string, Step>;\n+  protected state: ProcessState;\n+  \n+  constructor(config: ProcessConfig);\n+  \n+  // Core lifecycle methods\n+  abstract execute(context: ProcessContext): Promise<ProcessResult>;\n+  \n+  // Step management\n+  addStep(step: Step): void;\n+  removeStep(stepId: string): void;\n+  getStep(stepId: string): Step | undefined;\n+  getSteps(): Step[];\n+  \n+  // Navigation and control\n+  start(initialContext?: ProcessContext): Promise<void>;\n+  pause(reason?: string): void;\n+  resume(): Promise<void>;\n+  stop(reason?: string): void;\n+  \n+  // Flexible navigation\n+  goToStep(stepId: string, reason?: string): Promise<void>;\n+  skipStep(stepId: string, reason: string, manualData?: any): Promise<void>;\n+  goBack(steps?: number): Promise<void>;\n+  \n+  // State management\n+  getCurrentStep(): Step | null;\n+  getState(): ProcessState;\n+  getAuditTrail(): AuditEntry[];\n+  \n+  // Override and flexibility\n+  requestOverride(request: OverrideRequest): Promise<OverrideResult>;\n+  validateManualData(stepId: string, data: any): ValidationResult;\n+  \n+  // Events (extends EventEmitter)\n+  // emit('step:start', step, context)\n+  // emit('step:complete', step, result)\n+  // emit('step:skip', step, reason, manualData)\n+  // emit('process:pause', reason)\n+  // emit('exception', exception)\n+}\n+\n+interface ProcessConfig {\n+  name: string;\n+  description?: string;\n+  layer: 'L0' | 'L1' | 'L2';\n+  estimatedDuration?: string;\n+  metadata?: Record<string, any>;\n+  validation?: ProcessValidation;\n+  permissions?: ProcessPermissions;\n+}\n+```\n+\n+#### Step Class Hierarchy\n+\n+```typescript\n+abstract class Step {\n+  readonly id: string;\n+  readonly name: string;\n+  readonly type: StepType;\n+  readonly config: StepConfig;\n+  \n+  constructor(config: StepConfig);\n+  \n+  // Core execution\n+  abstract execute(context: StepContext): Promise<StepResult>;\n+  \n+  // Validation and preparation\n+  validate(input: any): ValidationResult;\n+  prepareContext(processContext: ProcessContext): StepContext;\n+  \n+  // Flexibility and overrides\n+  canSkip(reason: string): boolean;\n+  getRequiredInputs(): InputRequirement[];\n+  acceptManualData(data: any): boolean;\n+  \n+  // Audit and tracking\n+  createAuditEntry(action: string, data: any): AuditEntry;\n+}\n+\n+// Specialized step types\n+class HumanStep extends Step {\n+  readonly model: FormModel;\n+  readonly view: ComponentDefinition;\n+  readonly validation: ValidationRules;\n+  \n+  constructor(config: HumanStepConfig);\n+  \n+  // UI-specific methods\n+  renderUI(context: StepContext): Promise<UIComponent>;\n+  handleUserInput(input: UserInput): Promise<StepResult>;\n+  generateAlternativeUI(constraints?: UIConstraints): ComponentDefinition;\n+}\n+\n+class AgentStep extends Step {\n+  readonly prompt: AgentPrompt;\n+  readonly context: AgentContext;\n+  readonly constraints: AgentConstraints;\n+  \n+  constructor(config: AgentStepConfig);\n+  \n+  // AI-specific methods\n+  buildPrompt(context: StepContext): string;\n+  executeAgent(prompt: string, context: AgentContext): Promise<AgentResponse>;\n+  validateAgentOutput(output: AgentResponse): ValidationResult;\n+}\n+\n+class AlgorithmStep extends Step {\n+  readonly implementation: AlgorithmImplementation;\n+  readonly parameters: AlgorithmParameters;\n+  \n+  constructor(config: AlgorithmStepConfig);\n+  \n+  // Algorithm-specific methods\n+  executeAlgorithm(input: AlgorithmInput): Promise<AlgorithmOutput>;\n+  validateAlgorithmResult(result: AlgorithmOutput): ValidationResult;\n+}\n+```\n+\n+### State Management\n+\n+#### ProcessState\n+\n+```typescript\n+class ProcessState {\n+  readonly processId: string;\n+  readonly currentStepId: string | null;\n+  readonly status: ProcessStatus;\n+  readonly stepData: ReadonlyMap<string, StepData>;\n+  readonly history: readonly ProcessEvent[];\n+  readonly exceptions: readonly ProcessException[];\n+  readonly startedAt: Date;\n+  readonly lastUpdatedAt: Date;\n+  \n+  // State queries\n+  getStepData(stepId: string): StepData | undefined;\n+  getStepHistory(stepId: string): ProcessEvent[];\n+  isStepCompleted(stepId: string): boolean;\n+  isStepSkipped(stepId: string): boolean;\n+  \n+  // State transitions (return new immutable state)\n+  withStepData(stepId: string, data: StepData): ProcessState;\n+  withCurrentStep(stepId: string): ProcessState;\n+  withException(exception: ProcessException): ProcessState;\n+  withStatus(status: ProcessStatus): ProcessState;\n+  \n+  // Navigation helpers\n+  canGoToStep(stepId: string): boolean;\n+  canSkipStep(stepId: string): boolean;\n+  getNextStep(): string | null;\n+  getPreviousStep(): string | null;\n+  \n+  // Validation\n+  validateStepData(stepId: string, data: any): ValidationResult;\n+  checkDataRequirements(stepId: string): DataRequirement[];\n+}\n+\n+enum ProcessStatus {\n+  NOT_STARTED = 'not_started',\n+  RUNNING = 'running',\n+  PAUSED = 'paused',\n+  COMPLETED = 'completed',\n+  FAILED = 'failed',\n+  CANCELLED = 'cancelled'\n+}\n+```\n+\n+#### Event Sourcing\n+\n+```typescript\n+abstract class ProcessEvent {\n+  readonly id: string;\n+  readonly processId: string;\n+  readonly timestamp: Date;\n+  readonly userId?: string;\n+  readonly type: string;\n+  \n+  abstract apply(state: ProcessState): ProcessState;\n+}\n+\n+class StepStartedEvent extends ProcessEvent {\n+  readonly stepId: string;\n+  readonly context: StepContext;\n+}\n+\n+class StepCompletedEvent extends ProcessEvent {\n+  readonly stepId: string;\n+  readonly result: StepResult;\n+  readonly duration: number;\n+}\n+\n+class StepSkippedEvent extends ProcessEvent {\n+  readonly stepId: string;\n+  readonly reason: string;\n+  readonly manualData?: any;\n+}\n+\n+class DataUpdatedEvent extends ProcessEvent {\n+  readonly stepId: string;\n+  readonly field: string;\n+  readonly oldValue: any;\n+  readonly newValue: any;\n+  readonly reason: string;\n+}\n+\n+class ExceptionEvent extends ProcessEvent {\n+  readonly exception: ProcessException;\n+  readonly context: ExceptionContext;\n+}\n+```\n+\n+### Flexibility and Override System\n+\n+#### FlexibilityAgent\n+\n+```typescript\n+class FlexibilityAgent {\n+  // Main override request handler\n+  async handleOverrideRequest(\n+    request: OverrideRequest,\n+    process: Process,\n+    context: ProcessContext\n+  ): Promise<OverrideResult>;\n+  \n+  // Specific override capabilities\n+  async generateAlternativeUI(\n+    step: HumanStep,\n+    constraints: UIConstraints,\n+    userRequirements: string\n+  ): Promise<ComponentDefinition>;\n+  \n+  async analyzeSkipConsequences(\n+    stepId: string,\n+    process: Process,\n+    manualData?: any\n+  ): Promise<ConsequenceAnalysis>;\n+  \n+  async suggestDataAlternatives(\n+    requiredData: DataRequirement[],\n+    availableData: any\n+  ): Promise<DataSuggestion[]>;\n+  \n+  // Learning and improvement\n+  async analyzeExceptionPatterns(\n+    exceptions: ProcessException[]\n+  ): Promise<ProcessImprovement[]>;\n+  \n+  async generateProcessOptimizations(\n+    process: Process,\n+    auditTrail: AuditEntry[]\n+  ): Promise<ProcessOptimization[]>;\n+}\n+\n+interface OverrideRequest {\n+  type: OverrideType;\n+  stepId: string;\n+  userMessage: string;\n+  currentContext: ProcessContext;\n+  proposedChange?: any;\n+}\n+\n+enum OverrideType {\n+  SKIP_STEP = 'skip_step',\n+  MODIFY_UI = 'modify_ui', \n+  CHANGE_DATA = 'change_data',\n+  ALTER_FLOW = 'alter_flow',\n+  BYPASS_VALIDATION = 'bypass_validation'\n+}\n+\n+interface OverrideResult {\n+  approved: boolean;\n+  implementation: OverrideImplementation;\n+  consequences: ConsequenceAnalysis;\n+  auditEntry: AuditEntry;\n+  alternatives?: OverrideAlternative[];\n+}\n+```\n+\n+### Data Models and Types\n+\n+#### Core Interfaces\n+\n+```typescript\n+interface ProcessContext {\n+  processId: string;\n+  userId: string;\n+  sessionId: string;\n+  environment: 'development' | 'staging' | 'production';\n+  businessContext: BusinessContext;\n+  permissions: UserPermissions;\n+  preferences: UserPreferences;\n+}\n+\n+interface StepContext extends ProcessContext {\n+  stepId: string;\n+  stepType: StepType;\n+  inputData: any;\n+  previousStepResults: Map<string, StepResult>;\n+  requiredOutputs: OutputRequirement[];\n+  validationRules: ValidationRule[];\n+}\n+\n+interface StepResult {\n+  success: boolean;\n+  data: any;\n+  metadata: StepMetadata;\n+  nextStepId?: string;\n+  errors?: StepError[];\n+  warnings?: StepWarning[];\n+}\n+\n+interface ProcessException {\n+  id: string;\n+  type: ExceptionType;\n+  stepId: string;\n+  timestamp: Date;\n+  userId: string;\n+  reason: string;\n+  impact: ExceptionImpact;\n+  resolution?: ExceptionResolution;\n+  auditTrail: AuditEntry[];\n+}\n+\n+enum ExceptionType {\n+  STEP_SKIPPED = 'step_skipped',\n+  VALIDATION_OVERRIDDEN = 'validation_overridden',\n+  MANUAL_DATA_PROVIDED = 'manual_data_provided',\n+  FLOW_MODIFIED = 'flow_modified',\n+  UI_BYPASSED = 'ui_bypassed'\n+}\n+```\n+\n+#### UI and Form Models\n+\n+```typescript\n+interface FormModel {\n+  fields: FormField[];\n+  layout: LayoutConfig;\n+  validation: ValidationConfig;\n+  metadata: FormMetadata;\n+}\n+\n+interface FormField {\n+  id: string;\n+  name: string;\n+  type: FieldType;\n+  label: string;\n+  placeholder?: string;\n+  helpText?: string;\n+  required: boolean;\n+  validation: FieldValidation[];\n+  defaultValue?: any;\n+  options?: FieldOption[];\n+  conditionalLogic?: ConditionalLogic;\n+}\n+\n+enum FieldType {\n+  TEXT = 'text',\n+  EMAIL = 'email',\n+  NUMBER = 'number',\n+  DATE = 'date',\n+  TEXTAREA = 'textarea',\n+  SELECT = 'select',\n+  MULTISELECT = 'multiselect',\n+  CHECKBOX = 'checkbox',\n+  RADIO = 'radio',\n+  FILE_UPLOAD = 'file_upload',\n+  CURRENCY = 'currency',\n+  PHONE = 'phone',\n+  URL = 'url',\n+  JSON = 'json',\n+  CUSTOM = 'custom'\n+}\n+\n+interface ComponentDefinition {\n+  type: ComponentType;\n+  props: ComponentProps;\n+  children?: ComponentDefinition[];\n+  styling?: ComponentStyling;\n+  behavior?: ComponentBehavior;\n+}\n+```\n+\n+#### AI Agent Models\n+\n+```typescript\n+interface AgentPrompt {\n+  systemPrompt: string;\n+  userPrompt: string;\n+  context: PromptContext;\n+  constraints: PromptConstraints;\n+  examples?: PromptExample[];\n+}\n+\n+interface AgentContext {\n+  processContext: ProcessContext;\n+  stepContext: StepContext;\n+  businessData: BusinessData;\n+  previousResults: AgentResult[];\n+  availableTools: AgentTool[];\n+}\n+\n+interface AgentResponse {\n+  content: string;\n+  confidence: number;\n+  reasoning: string;\n+  structuredData?: any;\n+  suggestedActions?: SuggestedAction[];\n+  requiresHumanReview: boolean;\n+}\n+```\n+\n+## Usage Examples\n+\n+### Basic Process Definition\n+\n+```typescript\n+// Generated from BUSY file\n+export class ClientOnboardingProcess extends Process {\n+  constructor() {\n+    super({\n+      name: \"Client Onboarding\",\n+      layer: \"L0\",\n+      estimatedDuration: \"3 days\",\n+      description: \"Complete client onboarding workflow\"\n+    });\n+    \n+    this.addStep(new InitialContactStep());\n+    this.addStep(new NeedsAssessmentStep());\n+    this.addStep(new ProposalGenerationStep());\n+    this.addStep(new ContractFinalizationStep());\n+  }\n+  \n+  async execute(context: ProcessContext): Promise<ProcessResult> {\n+    // Framework handles step-by-step execution\n+    return await this.executeSteps(context);\n+  }\n+}\n+```\n+\n+### Human Step Implementation\n+\n+```typescript\n+class NeedsAssessmentStep extends HumanStep {\n+  constructor() {\n+    super({\n+      id: 'needs-assessment',\n+      name: 'Client Needs Assessment',\n+      model: {\n+        fields: [\n+          {\n+            id: 'business_goals',\n+            type: FieldType.TEXTAREA,\n+            label: 'Business Goals',\n+            required: true,\n+            helpText: 'What are the client\\'s primary business objectives?'\n+          },\n+          {\n+            id: 'budget_range',\n+            type: FieldType.CURRENCY,\n+            label: 'Budget Range',\n+            required: true,\n+            validation: [{ type: 'min', value: 1000, message: 'Minimum budget is $1,000' }]\n+          },\n+          {\n+            id: 'timeline',\n+            type: FieldType.DATE,\n+            label: 'Target Completion Date',\n+            required: false\n+          }\n+        ]\n+      }\n+    });\n+  }\n+  \n+  async execute(context: StepContext): Promise<StepResult> {\n+    // Framework handles UI rendering and data collection\n+    const userInput = await this.collectUserInput(context);\n+    \n+    // Custom business logic\n+    const assessmentScore = this.calculateAssessmentScore(userInput);\n+    \n+    return {\n+      success: true,\n+      data: {\n+        ...userInput,\n+        assessmentScore,\n+        recommendedNextStep: this.determineNextStep(assessmentScore)\n+      },\n+      metadata: {\n+        completedAt: new Date(),\n+        duration: context.stepDuration\n+      }\n+    };\n+  }\n+  \n+  private calculateAssessmentScore(input: any): number {\n+    // Custom scoring logic\n+    return 85;\n+  }\n+}\n+```\n+\n+### Flexible Override Examples\n+\n+```typescript\n+// User requests to skip a step\n+const skipResult = await process.skipStep(\n+  'client-interview', \n+  'Client provided information via email',\n+  {\n+    contactEmail: 'client@example.com',\n+    businessType: 'consulting',\n+    urgency: 'high'\n+  }\n+);\n+\n+// Agent analyzes consequences\n+const analysis = await flexibilityAgent.analyzeSkipConsequences(\n+  'client-interview',\n+  process,\n+  skipResult.manualData\n+);\n+\n+console.log(`Risk Level: ${analysis.riskLevel}`);\n+console.log(`Missing Data: ${analysis.missingData.join(', ')}`);\n+console.log(`Affected Steps: ${analysis.affectedSteps.join(', ')}`);\n+\n+// User requests alternative UI\n+const alternativeUI = await flexibilityAgent.generateAlternativeUI(\n+  needsAssessmentStep,\n+  { allowFreeForm: true, skipValidation: false },\n+  \"I need to enter complex requirements that don't fit in predefined fields\"\n+);\n+```\n+\n+## Framework Utilities\n+\n+### Validation System\n+\n+```typescript\n+class ValidationEngine {\n+  validateStep(step: Step, input: any): ValidationResult;\n+  validateProcess(process: Process, state: ProcessState): ValidationResult;\n+  createCustomValidator(rule: ValidationRule): Validator;\n+  overrideValidation(stepId: string, reason: string): ValidationOverride;\n+}\n+\n+interface ValidationRule {\n+  type: ValidationType;\n+  field?: string;\n+  condition: ValidationCondition;\n+  message: string;\n+  severity: 'error' | 'warning' | 'info';\n+}\n+```\n+\n+### Audit and Logging\n+\n+```typescript\n+class AuditLogger {\n+  logStepExecution(step: Step, context: StepContext, result: StepResult): void;\n+  logException(exception: ProcessException): void;\n+  logOverride(override: OverrideRequest, result: OverrideResult): void;\n+  generateReport(processId: string, timeRange?: TimeRange): AuditReport;\n+}\n+\n+interface AuditEntry {\n+  id: string;\n+  timestamp: Date;\n+  processId: string;\n+  stepId?: string;\n+  userId: string;\n+  action: AuditAction;\n+  details: AuditDetails;\n+  impact: AuditImpact;\n+}\n+```\n+\n+This API specification provides a comprehensive foundation for implementing the Orgata Framework with complete flexibility and intelligent override capabilities while maintaining type safety and developer experience.\n\\ No newline at end of file\n"
    },
    {
      "filepath": "design-docs/008-orgata-framework/IMPLEMENTATION_PLAN.md",
      "oldHash": "",
      "newHash": "4e4af45d4898b0c1e33bd50ec9192c1deb8fe37b",
      "timestamp": "2025-07-23T21:16:41.338Z",
      "changeType": "content",
      "gitDiff": "diff --git a/design-docs/008-orgata-framework/IMPLEMENTATION_PLAN.md b/design-docs/008-orgata-framework/IMPLEMENTATION_PLAN.md\nnew file mode 100644\nindex 0000000..4e4af45\n--- /dev/null\n+++ b/design-docs/008-orgata-framework/IMPLEMENTATION_PLAN.md\n@@ -0,0 +1,370 @@\n+# Orgata Framework Implementation Plan\n+\n+**Created**: July 2025  \n+**Status**: Ready for Implementation  \n+**Timeline**: 6-8 weeks  \n+**Dependencies**: Can replace existing generated code completely\n+\n+## Overview\n+\n+Comprehensive plan to transform the Orgata system from YAML generation to a React-like framework architecture. Since we can replace existing code completely, this allows for optimal implementation without migration concerns.\n+\n+## Implementation Phases\n+\n+### Phase 1: Framework Foundation (2 weeks)\n+\n+#### Week 1: Core Framework Package\n+**Goal**: Create `@orgata/framework` with base classes and process lifecycle management\n+\n+**Deliverables**:\n+1. **Framework Package Structure**\n+   ```\n+   packages/orgata-framework/\n+   ├── src/\n+   │   ├── core/\n+   │   │   ├── Process.ts           # Base Process class\n+   │   │   ├── Step.ts              # Base Step class  \n+   │   │   ├── HumanStep.ts         # UI-based steps\n+   │   │   ├── AgentStep.ts         # AI-powered steps\n+   │   │   └── AlgorithmStep.ts     # Code-based steps\n+   │   ├── state/\n+   │   │   ├── ProcessState.ts      # Immutable state management\n+   │   │   ├── ProcessEvent.ts      # Event sourcing\n+   │   │   └── AuditTrail.ts        # Complete audit logging\n+   │   ├── execution/\n+   │   │   ├── ProcessRunner.ts     # Process execution engine\n+   │   │   ├── StepExecutor.ts      # Individual step execution\n+   │   │   └── FlexibilityAgent.ts  # AI-powered overrides\n+   │   └── types/\n+   │       └── index.ts             # All TypeScript types\n+   ├── package.json\n+   └── README.md\n+   ```\n+\n+2. **Core Classes Implementation**\n+   ```typescript\n+   // Base classes with essential functionality\n+   abstract class Process extends EventEmitter\n+   abstract class Step\n+   class HumanStep extends Step  \n+   class AgentStep extends Step\n+   class AlgorithmStep extends Step\n+   ```\n+\n+3. **State Management System**\n+   ```typescript\n+   // Immutable event-sourced state\n+   class ProcessState\n+   class ProcessEvent\n+   class AuditTrail\n+   ```\n+\n+**Tasks**:\n+- [ ] Set up monorepo structure with framework package\n+- [ ] Implement base Process and Step classes\n+- [ ] Create immutable state management with event sourcing\n+- [ ] Build process execution engine\n+- [ ] Add comprehensive TypeScript types\n+- [ ] Write unit tests for core functionality\n+\n+#### Week 2: Process Lifecycle & UI Integration\n+**Goal**: Complete process execution engine and basic UI rendering\n+\n+**Deliverables**:\n+1. **Process Execution Engine**\n+   - Step-by-step execution with pause/resume\n+   - Skip step functionality with manual data provision\n+   - Go back functionality with history replay\n+   - Exception handling and audit trail\n+\n+2. **Basic UI Framework Integration**\n+   - HumanStep UI rendering system\n+   - Form generation from step models\n+   - Basic validation and data collection\n+\n+3. **Testing Infrastructure**\n+   - Unit tests for all core classes\n+   - Integration tests for process execution\n+   - Mock implementations for testing\n+\n+**Tasks**:\n+- [ ] Complete ProcessRunner with step navigation\n+- [ ] Implement skip/go-back functionality\n+- [ ] Build HumanStep UI rendering system\n+- [ ] Create comprehensive test suite\n+- [ ] Add developer documentation\n+\n+### Phase 2: Enhanced Compiler (2 weeks)\n+\n+#### Week 3: BUSY Compiler Modifications\n+**Goal**: Modify BUSY compiler to generate TypeScript framework code instead of YAML\n+\n+**Deliverables**:\n+1. **New Code Generation Pipeline**\n+   ```\n+   BUSY AST → Framework Code Templates → TypeScript Output\n+   ```\n+\n+2. **Content Analysis System**\n+   - Parse verbose BUSY step descriptions\n+   - Generate appropriate step implementations\n+   - Create UI models for HumanSteps\n+   - Generate AI prompts for AgentSteps\n+   - Create algorithm stubs for AlgorithmSteps\n+\n+3. **Code Generation Templates**\n+   - Process class templates\n+   - Step class templates for each type\n+   - UI component generation\n+   - Type-safe interfaces\n+\n+**Tasks**:\n+- [ ] Modify BUSY compiler output pipeline\n+- [ ] Create framework code generation templates  \n+- [ ] Implement content analysis for step descriptions\n+- [ ] Build type-safe code generation\n+- [ ] Add source mapping for debugging\n+\n+#### Week 4: Code Generation Refinement\n+**Goal**: Polish code generation and add intelligent content creation\n+\n+**Deliverables**:\n+1. **Intelligent Content Generation**\n+   - Analyze BUSY descriptions to generate realistic form fields\n+   - Create appropriate AI prompts from step descriptions\n+   - Generate algorithm stubs with proper interfaces\n+\n+2. **Enhanced Templates**\n+   - Responsive UI components for HumanSteps\n+   - Context-aware AI prompts for AgentSteps\n+   - Type-safe algorithm implementations\n+\n+3. **Developer Experience**\n+   - Generated code is readable and well-commented\n+   - Clear separation between generated and custom code\n+   - Easy customization points\n+\n+**Tasks**:\n+- [ ] Enhance content analysis algorithms\n+- [ ] Create sophisticated UI generation templates\n+- [ ] Implement AI prompt generation from descriptions\n+- [ ] Add code quality improvements\n+- [ ] Build comprehensive examples\n+\n+### Phase 3: Flexibility & Override System (1.5 weeks)\n+\n+#### Week 5: AI-Powered Flexibility\n+**Goal**: Implement conversational override system and flexible UI generation\n+\n+**Deliverables**:\n+1. **FlexibilityAgent Implementation**\n+   - Natural language override request processing\n+   - Dynamic UI generation for complex data\n+   - Intelligent validation override suggestions\n+   - Context-aware alternative generation\n+\n+2. **Exception Management System**\n+   - Complete exception tracking and categorization\n+   - Audit trail for all deviations\n+   - Pattern analysis for process improvements\n+\n+3. **Dynamic UI System**\n+   - Generate alternative UIs on demand\n+   - JSON editor fallback for complex data\n+   - Agent-assisted data entry modes\n+\n+**Tasks**:\n+- [ ] Implement FlexibilityAgent with LLM integration\n+- [ ] Build dynamic UI generation system\n+- [ ] Create exception tracking and analysis\n+- [ ] Add conversational override capabilities\n+- [ ] Build comprehensive audit trail system\n+\n+#### Week 6 (First Half): Integration & Testing\n+**Goal**: Integrate all components and comprehensive testing\n+\n+**Deliverables**:\n+1. **Complete Integration**\n+   - Framework + Compiler + Flexibility System\n+   - End-to-end process execution\n+   - Full override and exception handling\n+\n+2. **Testing Suite**\n+   - Unit tests for all components\n+   - Integration tests for complete workflows\n+   - Performance testing for large processes\n+\n+**Tasks**:\n+- [ ] Complete end-to-end integration\n+- [ ] Build comprehensive test suite\n+- [ ] Performance optimization\n+- [ ] Bug fixes and stability improvements\n+\n+### Phase 4: IDE Integration & Knit Enhancement (2 weeks)\n+\n+#### Week 6 (Second Half) - Week 7: IDE Transformation\n+**Goal**: Transform Orgata IDE to work with new framework architecture\n+\n+**Deliverables**:\n+1. **Replace Existing Generation System**\n+   - Remove old YAML-based `BusyGeneratorService`\n+   - Integrate new framework-based compiler\n+   - Update all API endpoints\n+\n+2. **Enhanced Process Visualization**\n+   - Visual process editor for BUSY files\n+   - Real-time process execution viewing\n+   - Exception and audit trail visualization\n+\n+3. **Agent Integration**\n+   - Chat interface for process override requests\n+   - Framework-aware agent tools\n+   - Real-time process modification capabilities\n+\n+**Tasks**:\n+- [ ] Replace existing generation services\n+- [ ] Update IDE API endpoints\n+- [ ] Build visual process editor\n+- [ ] Integrate flexibility agent into IDE\n+- [ ] Add process execution visualization\n+\n+#### Week 8: Knit Integration & Bidirectional Sync\n+**Goal**: Enhance knit for framework code synchronization\n+\n+**Deliverables**:\n+1. **Framework-Aware Knit**\n+   - Understand generated framework code patterns\n+   - Track custom implementations vs. generated stubs\n+   - Intelligent merge strategies for code changes\n+\n+2. **Bidirectional Synchronization**\n+   - BUSY changes → Framework code regeneration\n+   - Code changes → BUSY file updates (where appropriate)\n+   - Conflict resolution for incompatible changes\n+\n+3. **Developer Workflow**\n+   - Seamless editing of both BUSY files and generated code\n+   - Automatic reconciliation of changes\n+   - Clear separation of concerns\n+\n+**Tasks**:\n+- [ ] Enhance knit for framework code understanding\n+- [ ] Implement bidirectional sync logic\n+- [ ] Build conflict resolution system\n+- [ ] Create developer workflow documentation\n+- [ ] End-to-end testing of complete system\n+\n+## Technical Specifications\n+\n+### Framework Package Dependencies\n+```json\n+{\n+  \"dependencies\": {\n+    \"@types/node\": \"^20.0.0\",\n+    \"eventemitter3\": \"^5.0.0\",\n+    \"zod\": \"^3.22.0\",           // Runtime validation\n+    \"immer\": \"^10.0.0\"          // Immutable state updates\n+  },\n+  \"devDependencies\": {\n+    \"typescript\": \"^5.0.0\",\n+    \"vitest\": \"^1.0.0\",\n+    \"tsup\": \"^8.0.0\"\n+  }\n+}\n+```\n+\n+### Code Generation Templates\n+```typescript\n+// Process template\n+export class {{ProcessName}}Process extends Process {\n+  constructor() {\n+    super({{processConfig}});\n+    {{#steps}}\n+    this.addStep(new {{stepClassName}}());\n+    {{/steps}}\n+  }\n+}\n+\n+// HumanStep template  \n+class {{StepName}}Step extends HumanStep {\n+  constructor() {\n+    super({\n+      model: {{generatedModel}},\n+      view: {{generatedView}}\n+    });\n+  }\n+}\n+```\n+\n+### Directory Structure Post-Implementation\n+```\n+busy-lang/\n+├── packages/\n+│   ├── orgata-framework/           # New framework package\n+│   ├── busy-compiler/              # Modified compiler\n+│   └── orgata-ide/                 # Updated IDE\n+├── examples/\n+│   ├── generated-processes/        # Example generated code\n+│   └── business-definitions/       # Example BUSY files\n+└── design-docs/\n+    └── 008-orgata-framework/       # This design\n+```\n+\n+## Success Criteria\n+\n+### Technical Success\n+- [ ] BUSY files compile to readable, type-safe TypeScript\n+- [ ] Generated code can be customized without breaking regeneration\n+- [ ] Complete audit trail of all process executions and exceptions\n+- [ ] Flexible override system works conversationally\n+- [ ] Bidirectional sync maintains consistency\n+\n+### User Experience Success\n+- [ ] Business users can run processes without coding knowledge\n+- [ ] Developers can customize generated code with full IDE support\n+- [ ] Users never feel trapped by rigid workflows\n+- [ ] Exception handling provides clear improvement insights\n+- [ ] Process modification feels natural and intuitive\n+\n+### Business Value Success\n+- [ ] Faster business process development and iteration\n+- [ ] Clear audit trail for compliance and improvement\n+- [ ] Learning system that makes processes better over time\n+- [ ] Framework that scales from simple to complex organizations\n+- [ ] Reduced maintenance burden compared to YAML generation\n+\n+## Risk Mitigation\n+\n+### Technical Risks\n+- **Complexity of bidirectional sync**: Start with forward sync only, add reverse sync incrementally\n+- **Framework lock-in concerns**: Generate standard TypeScript, provide clear escape hatches\n+- **Performance with complex processes**: Build performance testing from day one\n+\n+### User Experience Risks  \n+- **Learning curve for developers**: Comprehensive documentation and examples\n+- **Business user confusion**: Start with simple visual interfaces\n+- **Override system abuse**: Clear audit trail and consequence analysis\n+\n+### Timeline Risks\n+- **Scope creep**: Clear phase boundaries, ship MVP first\n+- **Integration complexity**: Build integration tests early\n+- **Polish time**: Plan for 20% buffer in each phase\n+\n+## Next Actions\n+\n+1. **Immediate** (This Week):\n+   - Set up monorepo structure\n+   - Create framework package scaffold\n+   - Begin implementing base classes\n+\n+2. **Week 1 Goals**:\n+   - Complete core framework classes\n+   - Basic process execution working\n+   - Initial test suite\n+\n+3. **Weekly Reviews**:\n+   - Demo working functionality each Friday\n+   - Adjust timeline based on progress\n+   - Gather feedback on developer experience\n+\n+This implementation plan provides a clear path from the current YAML generation system to a sophisticated, flexible framework that embodies the \"facilitate, never constrain\" philosophy.\n\\ No newline at end of file\n"
    },
    {
      "filepath": "design-docs/008-orgata-framework/ORGATA_FRAMEWORK_ARCHITECTURE.md",
      "oldHash": "",
      "newHash": "7a3806e962d414d77784827f23a1c4233d7f42cf",
      "timestamp": "2025-07-23T21:16:41.376Z",
      "changeType": "content",
      "gitDiff": "diff --git a/design-docs/008-orgata-framework/ORGATA_FRAMEWORK_ARCHITECTURE.md b/design-docs/008-orgata-framework/ORGATA_FRAMEWORK_ARCHITECTURE.md\nnew file mode 100644\nindex 0000000..7a3806e\n--- /dev/null\n+++ b/design-docs/008-orgata-framework/ORGATA_FRAMEWORK_ARCHITECTURE.md\n@@ -0,0 +1,368 @@\n+# Orgata Framework Architecture Design\n+\n+**Created**: July 2025  \n+**Status**: Design Phase  \n+**Scope**: Transform Orgata IDE from code generation to React-like framework architecture\n+\n+## Overview\n+\n+Transform the Orgata system from a YAML-string-generation approach to a true framework architecture where BUSY files compile to TypeScript code that leverages the Orgata Framework APIs. This creates a React-like developer experience for business processes.\n+\n+## Core Design Philosophy\n+\n+**\"Facilitate, Never Constrain\"** - The framework must provide helpful structure while maintaining complete user flexibility through AI-powered escape hatches and intelligent exception handling.\n+\n+### Key Principles\n+\n+1. **Never Rewrite History**: Always maintain complete audit trail of process execution\n+2. **Forward-Only Updates**: Go back to original step and move forward through subsequent steps\n+3. **Universal Skip Capability**: Allow skipping any step with manual data provision\n+4. **Exception Analysis**: Use AI to analyze consequences of non-standard processing\n+5. **Complete Audit Trail**: Track all deviations with clear reasoning and impact assessment\n+\n+## Current State Analysis\n+\n+### Problems with Current Approach\n+\n+Looking at the existing `BusyGeneratorService`, the system is essentially a string manipulation engine:\n+\n+```typescript\n+// Current problematic pattern\n+const processData = {\n+  metadata: { version: '1.0.0', created: new Date().toISOString() },\n+  process: { name: processName, steps: [...] }\n+};\n+\n+return {\n+  id: this.generateId(),\n+  type: 'create', \n+  filePath: `${basePath}/L0/processes/${processFileName}.busy`,\n+  changes: [{ operation: 'add', path: '/', newValue: yaml.stringify(processData) }]\n+};\n+```\n+\n+This approach:\n+- ❌ Generates boilerplate YAML strings\n+- ❌ Provides no type safety or IDE support  \n+- ❌ Makes customization difficult\n+- ❌ Creates maintenance burden\n+- ❌ Limits extensibility\n+\n+## Framework Architecture\n+\n+### Core Framework Components\n+\n+```typescript\n+// @orgata/framework - Core framework package\n+\n+abstract class Process extends EventEmitter {\n+  constructor(config: ProcessConfig);\n+  abstract execute(context: ProcessContext): Promise<ProcessResult>;\n+  \n+  // Framework-provided functionality\n+  addStep(step: Step): void;\n+  setTimeline(duration: string): void;\n+  getCurrentStep(): Step;\n+  goToStep(stepId: string): void;\n+  skipStep(stepId: string, reason: string, manualData?: any): void;\n+}\n+\n+abstract class Step {\n+  abstract execute(context: StepContext): Promise<StepResult>;\n+  \n+  // Framework handles: validation, logging, state management\n+  validate(input: any): ValidationResult;\n+  createAuditEntry(action: string, data: any): AuditEntry;\n+}\n+\n+// Three specialized step types matching BUSY specification\n+class HumanStep extends Step {\n+  model: FormModel;           // Generated from BUSY description\n+  view: ComponentDefinition;  // UI components and validation\n+}\n+\n+class AgentStep extends Step {\n+  prompt: AgentPrompt;        // Generated from BUSY description  \n+  context: AgentContext;      // AI context and constraints\n+}\n+\n+class AlgorithmStep extends Step {\n+  implementation: Function;   // Generated code from BUSY description\n+}\n+```\n+\n+### Process State Management\n+\n+#### Immutable History with Forward-Only Updates\n+\n+```typescript\n+class ProcessState {\n+  readonly history: ProcessEvent[];           // Immutable event log\n+  readonly currentStep: number;\n+  readonly stepData: Map<string, StepData>;   // Current state\n+  readonly exceptions: ProcessException[];    // All deviations tracked\n+  \n+  // Never modify history - always append new events\n+  updateStepData(stepId: string, data: any, reason: string): ProcessState {\n+    const event = new StepDataUpdateEvent(stepId, data, reason, new Date());\n+    return this.appendEvent(event);\n+  }\n+  \n+  // Go back by replaying history to that point, then continuing forward\n+  goBackToStep(stepId: string, reason: string): ProcessState {\n+    const replayPoint = this.findStepInHistory(stepId);\n+    const event = new StepNavigationEvent('back', stepId, reason, new Date());\n+    return this.replayToPoint(replayPoint).appendEvent(event);\n+  }\n+  \n+  // Skip step but allow manual data provision\n+  skipStep(stepId: string, reason: string, manualData?: any): ProcessState {\n+    const skipEvent = new StepSkipEvent(stepId, reason, manualData, new Date());\n+    return this.appendEvent(skipEvent);\n+  }\n+}\n+```\n+\n+#### Exception Handling and Consequence Analysis\n+\n+```typescript\n+class ProcessException {\n+  readonly id: string;\n+  readonly type: 'step_skip' | 'manual_data' | 'validation_override' | 'flow_modification';\n+  readonly stepId: string;\n+  readonly reason: string;\n+  readonly timestamp: Date;\n+  readonly userContext: UserContext;\n+  readonly impact: ExceptionImpact;        // Analyzed by AI\n+  readonly mitigation?: ExceptionMitigation;\n+}\n+\n+class ExceptionAnalyzer {\n+  // Future phase - AI-powered consequence analysis\n+  async analyzeSkipConsequences(\n+    skippedStep: Step, \n+    processDefinition: Process,\n+    currentState: ProcessState\n+  ): Promise<ConsequenceAnalysis> {\n+    return {\n+      missingData: string[];              // What data won't be available\n+      affectedSteps: string[];            // Which downstream steps might fail\n+      riskLevel: 'low' | 'medium' | 'high';\n+      suggestedMitigations: string[];     // How to minimize impact\n+      dataRequirements: DataRequirement[]; // What manual data could substitute\n+    };\n+  }\n+}\n+```\n+\n+### Content Generation from BUSY Descriptions\n+\n+The compiler analyzes verbose BUSY step descriptions to generate appropriate implementations:\n+\n+```typescript\n+// BUSY file example:\n+/*\n+step:\n+  id: client-interview\n+  type: human\n+  description: |\n+    Conduct detailed interview with client to understand their business goals,\n+    current challenges, timeline constraints, and budget expectations. \n+    Gather contact information for key stakeholders and decision makers.\n+    Document any special requirements or preferences.\n+*/\n+\n+// Generated HumanStep:\n+class ClientInterviewStep extends HumanStep {\n+  constructor() {\n+    super({\n+      model: {\n+        fields: [\n+          { name: 'businessGoals', type: 'textarea', required: true },\n+          { name: 'currentChallenges', type: 'textarea', required: true },\n+          { name: 'timelineConstraints', type: 'date-range', required: false },\n+          { name: 'budgetExpectations', type: 'currency', required: true },\n+          { name: 'stakeholders', type: 'contact-list', required: true },\n+          { name: 'specialRequirements', type: 'textarea', required: false }\n+        ]\n+      },\n+      view: {\n+        layout: 'interview-form',\n+        validation: 'real-time',\n+        helpText: 'Generated from BUSY description'\n+      }\n+    });\n+  }\n+}\n+```\n+\n+### Flexible Override System\n+\n+#### Conversational Bypass Capabilities\n+\n+```typescript\n+class FlexibilityAgent {\n+  // Handle user requests to bypass constraints\n+  async handleOverrideRequest(\n+    userMessage: string, \n+    currentStep: Step, \n+    processState: ProcessState\n+  ): Promise<OverrideStrategy> {\n+    \n+    // Examples:\n+    // \"This form is too restrictive\" → Generate flexible alternative UI\n+    // \"Skip this, I already have the email\" → Skip with manual data\n+    // \"Go back and change the client name\" → Navigate back and replay forward\n+    \n+    const intent = await this.analyzeIntent(userMessage);\n+    const strategy = await this.generateStrategy(intent, currentStep);\n+    \n+    return {\n+      type: strategy.type,\n+      implementation: strategy.implementation,\n+      auditReason: strategy.reasoning,\n+      consequenceAnalysis: await this.analyzeConsequences(strategy)\n+    };\n+  }\n+  \n+  // Generate alternative UIs when standard forms are too restrictive\n+  generateFlexibleUI(constraints: UIConstraints, userRequirements: string): ComponentDefinition {\n+    // Could generate:\n+    // - JSON editor for complex data\n+    // - Free-form text with AI parsing\n+    // - Multi-step wizard for complex processes\n+    // - Custom form with dynamic fields\n+  }\n+}\n+```\n+\n+#### Skip with Manual Data Provision\n+\n+```typescript\n+// User: \"Skip the client interview step, I already have their email: john@example.com\"\n+const skipResult = processState.skipStep('client-interview', 'Already have contact info', {\n+  contactEmail: 'john@example.com',\n+  source: 'manual_input',\n+  confidence: 'user_provided'\n+});\n+\n+// System validates if this data is sufficient for downstream steps\n+const validation = await this.validateSkipData(skipResult.manualData, 'client-interview');\n+if (!validation.sufficient) {\n+  // Warn user about potential issues but still allow the skip\n+  this.notifyUser(`Warning: Skipping may cause issues in steps: ${validation.affectedSteps.join(', ')}`);\n+}\n+```\n+\n+### Audit Trail and Exception Tracking\n+\n+#### Comprehensive Event Logging\n+\n+```typescript\n+class ProcessAuditTrail {\n+  readonly events: ProcessEvent[];\n+  \n+  // All actions create audit entries\n+  recordStepExecution(stepId: string, result: StepResult): void;\n+  recordStepSkip(stepId: string, reason: string, manualData?: any): void;\n+  recordDataOverride(stepId: string, field: string, oldValue: any, newValue: any, reason: string): void;\n+  recordValidationOverride(stepId: string, validationRule: string, reason: string): void;\n+  recordAgentIntervention(stepId: string, userRequest: string, agentAction: string): void;\n+  \n+  // Exception analysis and improvement opportunities\n+  generateExceptionReport(): ExceptionReport {\n+    return {\n+      totalExceptions: this.events.filter(e => e.type === 'exception').length,\n+      commonSkips: this.getMostSkippedSteps(),\n+      improvementOpportunities: this.identifyProcessImprovements(),\n+      userFrustrationPoints: this.identifyConstraintIssues()\n+    };\n+  }\n+}\n+```\n+\n+## Compilation Pipeline\n+\n+### New Compilation Flow\n+\n+```\n+BUSY Files → AST Analysis → Framework Code Generation → TypeScript Output\n+```\n+\n+Instead of generating YAML configuration files, generate executable TypeScript:\n+\n+```typescript\n+// Generated from client-onboarding.busy\n+import { Process, HumanStep, AgentStep, AlgorithmStep } from '@orgata/framework';\n+\n+export class ClientOnboardingProcess extends Process {\n+  constructor() {\n+    super({\n+      name: \"Client Onboarding\",\n+      layer: \"L0\", \n+      estimatedDuration: \"3 days\"\n+    });\n+    \n+    // Steps generated from BUSY definitions\n+    this.addStep(new InitialContactStep());\n+    this.addStep(new NeedsAssessmentStep());\n+    this.addStep(new ProposalGenerationStep());\n+    this.addStep(new ContractFinalizationStep());\n+  }\n+}\n+\n+// Generated HumanStep with rich UI from BUSY description\n+class NeedsAssessmentStep extends HumanStep {\n+  constructor() {\n+    super({\n+      // UI model generated from verbose BUSY description\n+      model: {/* detailed form model */},\n+      view: {/* responsive UI components */}\n+    });\n+  }\n+  \n+  async execute(context: StepContext): Promise<StepResult> {\n+    // Framework handles: UI rendering, validation, state management\n+    const userInput = await this.presentUI(context);\n+    \n+    // Custom business logic can be added here\n+    const enrichedData = await this.enrichClientData(userInput);\n+    \n+    return {\n+      data: enrichedData,\n+      nextStep: this.determineNextStep(enrichedData)\n+    };\n+  }\n+}\n+```\n+\n+## Benefits and Implications\n+\n+### Developer Experience\n+- ✅ **Type Safety**: Full TypeScript support with autocomplete and debugging\n+- ✅ **Readable Code**: Generated code is human-readable and modifiable\n+- ✅ **Framework Power**: Infrastructure concerns handled by framework\n+- ✅ **Flexibility**: Can override or extend any generated code\n+\n+### Business User Experience  \n+- ✅ **Never Trapped**: Always able to bypass constraints through AI agent\n+- ✅ **Complete Control**: Can skip, go back, or modify any step\n+- ✅ **Intelligent Assistance**: AI analyzes consequences and suggests alternatives\n+- ✅ **Learning System**: Process improves based on exception patterns\n+\n+### System Benefits\n+- ✅ **Maintainability**: Framework evolution benefits all processes\n+- ✅ **Auditability**: Complete trail of all decisions and exceptions\n+- ✅ **Scalability**: Framework patterns scale from simple to complex organizations\n+- ✅ **Extensibility**: Easy to add new step types and capabilities\n+\n+## Next Steps\n+\n+This document will be iteratively refined as we work through the detailed design questions around state management, AI integration, and the flexibility mechanisms.\n+\n+Key areas to elaborate:\n+1. Detailed framework API specifications\n+2. Code generation templates and patterns  \n+3. AI agent integration points and capabilities\n+4. Exception analysis and learning algorithms\n+5. Bidirectional sync with knit integration\n\\ No newline at end of file\n"
    },
    {
      "filepath": "docs/INTRODUCTION.md",
      "oldHash": "",
      "newHash": "a3bbc8bfe4f4f97810706028ed74b2189b9c264b",
      "timestamp": "2025-07-23T21:16:41.418Z",
      "changeType": "content",
      "gitDiff": "diff --git a/docs/INTRODUCTION.md b/docs/INTRODUCTION.md\nnew file mode 100644\nindex 0000000..a3bbc8b\n--- /dev/null\n+++ b/docs/INTRODUCTION.md\n@@ -0,0 +1,190 @@\n+# The Business Process Problem (And How We're Solving It)\n+\n+## The Story Every Business Knows\n+\n+Picture this: Sarah runs a growing photography business. She's amazing at her craft, but as her business grows, she's drowning in the operational side. Client inquiries pile up, onboarding gets messy, and she's constantly switching between a dozen different tools trying to keep everything organized.\n+\n+She's tried everything:\n+- **Spreadsheets and Documents** that become incomprehensible mazes\n+- **Project management tools** that force her into rigid workflows\n+- **CRMs** that cost a fortune and still don't quite fit her process\n+- **Hiring assistants** who need constant training and make inconsistent decisions\n+\n+Sound familiar? Sarah's not alone. Every business—from solo freelancers to Fortune 500 companies—faces the same fundamental challenge: **How do you systemize business operations without losing the human touch?**\n+\n+## The Core Problem\n+\n+Business processes are fundamentally different from software processes, yet we keep trying to force them into software-shaped boxes. Here's why this fails:\n+\n+### 1. Business Processes Are Human\n+Unlike code, business processes involve real people making nuanced decisions. When you force these into rigid software workflows, you either:\n+- Create so many exceptions the system becomes useless, or\n+- Force people to work around the system (hello, Excel sheets!)\n+\n+### 2. Every Business Is Unique\n+Your client onboarding isn't like anyone else's. Your way of handling contracts, communications, and deliverables has evolved to fit YOUR business. Generic tools force you to change your process to fit their assumptions.\n+\n+### 3. Business Processes Evolve\n+What works today won't work when you're 10x bigger. But current tools make change painful—requiring expensive consultants, system migrations, or starting from scratch.\n+\n+### 4. The Documentation Nightmare\n+Even if you document your processes, they're usually:\n+- Scattered across different tools\n+- Out of date the moment they're written\n+- Impossible to actually execute consistently\n+- Lost when key employees leave\n+\n+## The Deeper Problem: The Knowledge Barrier\n+\n+But there's an even bigger challenge that keeps people stuck:\n+\n+**Being an entrepreneur means suddenly becoming an expert in 12-50 different jobs:**\n+\n+- **Taxes & Legal**: Navigate regulations without costly mistakes\n+- **Finance**: Master cash flow, pricing, and contracts\n+- **Marketing & Sales**: Essential if you're technical-minded\n+- **IT & Operations**: Essential if you're people-focused\n+- **HR, Compliance, Insurance**: Critical as you grow\n+\n+Most people just want to do the thing they're good at. They don't want to become overnight experts in everything else—they just want to make sure they're not going off a cliff.\n+\n+This creates painful growth transitions:\n+1. **Idea → Entrepreneur**: Learn everything or fail\n+2. **Entrepreneur → Small Team**: Document your brain and train others\n+3. **Small Team → Sustainable Business**: Add expensive overhead that doesn't generate revenue\n+\n+Each transition kills companies or forces them to reinvest all profits into administrative complexity instead of growth.\n+\n+## Our Solution: Business Process as Code\n+\n+Imagine if you could describe your business process in plain English, and it would automatically become an executable system that:\n+- ✅ Guides your team through each step\n+- ✅ Automates the repetitive parts\n+- ✅ Uses AI to handle routine decisions\n+- ✅ But ALWAYS lets humans override when needed\n+\n+That's what BUSY does.\n+\n+## How It Works (In Plain English)\n+\n+### Step 1: Describe Your Process\n+You write your business process in a simple, readable format. For example:\n+\n+```\n+Process: Handle New Photography Inquiry\n+1. Acknowledge inquiry → Send automatic response within 2 hours\n+2. Qualify lead → Human reviews budget and requirements  \n+3. Send portfolio → AI selects relevant work based on inquiry type\n+4. Schedule consultation → Automated calendar booking\n+5. Conduct consultation → Human conversation with AI-prepared notes\n+6. Process booking → Generate contract and process deposit\n+```\n+\n+### Step 2: BUSY Makes It Real\n+Our system transforms this into:\n+- **Smart forms** for human steps (that can be skipped or modified)\n+- **AI agents** that make intelligent decisions (with human review)\n+- **Automated workflows** that handle the routine stuff\n+- **A complete audit trail** of every decision and action\n+\n+### Step 3: Use It, Change It, Grow With It\n+- Your team gets a clean interface to execute the process\n+- You can skip steps, go back, or override anything\n+- Every action is tracked for compliance and learning\n+- Change the process anytime—updates deploy instantly\n+\n+## Why This Changes Everything\n+\n+### For Small Businesses\n+- **Start simple**: Describe your process, get a working system\n+- **No consultants needed**: If you can explain it, you can build it\n+- **Grows with you**: Add complexity as you need it\n+\n+### For Growing Companies  \n+- **Consistency at scale**: Everyone follows the same process\n+- **Flexibility built-in**: Handle exceptions without breaking the system\n+- **Knowledge capture**: Your processes become your competitive advantage\n+\n+### For Enterprises\n+- **Compliance built-in**: Complete audit trail of every action\n+- **Risk management**: AI flags unusual patterns or deviations\n+- **Cross-department coordination**: Processes can span teams seamlessly\n+\n+## Real Examples That Click\n+\n+### Photography Business\n+**Before**: Inquiries scattered across email, texts, and DMs. Each one handled differently. Lots fall through the cracks.\n+\n+**After**: Every inquiry follows the same path, but photographers can skip steps or adjust for VIP clients. AI drafts responses, humans approve. Nothing gets lost.\n+\n+### E-commerce Returns\n+**Before**: Customer service reps making inconsistent decisions. Costly mistakes. Angry customers.\n+\n+**After**: AI evaluates return requests against policy, suggests resolutions, but reps can always override for customer satisfaction. Every decision tracked and learned from.\n+\n+### Hiring Process\n+**Before**: Candidates lost between recruiting, hiring managers, and HR. Inconsistent interview processes. Compliance nightmares.\n+\n+**After**: Automated scheduling, AI-powered initial screening, human interviews with AI-prepared questions. Full flexibility to fast-track exceptional candidates.\n+\n+## The Technical Magic (Without the Jargon)\n+\n+We've built something like \"WordPress for business processes\"—a platform that makes the complex simple:\n+\n+1. **A Language for Business**: Write processes like you'd explain them to a new employee\n+2. **AI That Assists, Not Replaces**: AI handles routine work but humans maintain control\n+3. **Code That's Actually Readable**: Technical teams can extend and customize\n+4. **Audit Trail Everything**: Every decision, action, and override is tracked\n+\n+## Why Now?\n+\n+Three things have converged to make this possible:\n+\n+1. **AI Got Smart Enough**: Modern AI can understand context and make nuanced decisions\n+2. **People Expect Flexibility**: Post-COVID, rigid systems don't work anymore  \n+3. **Business Complexity Exploded**: Even small businesses need enterprise-grade processes\n+\n+## The Bottom Line\n+\n+Every business has processes. Right now, those processes live in people's heads, outdated documents, and disconnected tools. We're giving businesses a way to:\n+\n+- **Capture** their unique processes in a readable format\n+- **Execute** them consistently while maintaining flexibility\n+- **Evolve** them as the business grows\n+- **Leverage AI** without losing human control\n+\n+It's not about replacing people—it's about amplifying what they do best while automating what they shouldn't have to think about.\n+\n+## For Investors: The Opportunity\n+\n+The business process management market is huge ($10B+) but broken. Current solutions are either:\n+- Too rigid (traditional BPM)\n+- Too generic (project management tools)\n+- Too expensive (enterprise consulting)\n+\n+We're creating a new category: **Intelligent Process Automation with Human Control**. \n+\n+Every business needs this. Most don't know it exists yet. We're making it as easy as describing what you do.\n+\n+## The Bigger Vision: An Ecosystem of Business Expertise\n+\n+BUSY isn't just a tool—it's becoming a platform. Think \"Excel for Business Processes\" meets \"App Store for Business Expertise\":\n+\n+### The Platform\n+Just like Excel lets you model your data exactly how you need it, BUSY lets you model your processes exactly how you work.\n+\n+### The Marketplace\n+- **Template Library**: Professional accountants, lawyers, marketers create BUSY workflows\n+- **Integrated Services**: Templates that connect back to human + AI expertise\n+- **Complete Business Templates**: Plug-and-play workflows for entire business functions\n+- **Community Ecosystem**: Learn from and build on what works for others\n+\n+This means entrepreneurs can:\n+- Start with proven templates instead of reinventing wheels\n+- Access expertise they can't afford to hire full-time\n+- Focus on their craft while processes handle the complexity\n+- Scale without drowning in administrative overhead\n+\n+---\n+\n+*Want to see it in action? Check out our [live examples](../examples/) or [watch a demo video](#).*\n\\ No newline at end of file\n"
    },
    {
      "filepath": "docs/THE_ENTREPRENEURIAL_JOURNEY.md",
      "oldHash": "",
      "newHash": "86a3b9531448d511e9274eeb177bc02ad1493481",
      "timestamp": "2025-07-23T21:16:41.458Z",
      "changeType": "content",
      "gitDiff": "diff --git a/docs/THE_ENTREPRENEURIAL_JOURNEY.md b/docs/THE_ENTREPRENEURIAL_JOURNEY.md\nnew file mode 100644\nindex 0000000..86a3b95\n--- /dev/null\n+++ b/docs/THE_ENTREPRENEURIAL_JOURNEY.md\n@@ -0,0 +1,132 @@\n+# The Entrepreneurial Journey: Breaking Down the Knowledge Barrier\n+\n+## The Problem Nobody Talks About\n+\n+Starting a business isn't just about having a great idea or skill. It's about suddenly needing to master 12-50 different jobs overnight:\n+\n+- **Taxes & Legal**: Navigate regulations without going to jail or getting sued\n+- **Finance**: Manage cash flow, set pricing, handle contracts\n+- **Marketing & Sales**: Mystical if you're technical\n+- **IT & Operations**: Mystical if you're a salesperson\n+- **HR, Compliance, Insurance**: Critical as you grow\n+- **Customer Service**: Keep clients happy while juggling everything else\n+- **Project Management**: Coordinate work across growing complexity\n+\n+**Most people just want to do the thing they're good at.** They don't want to become experts in everything else—they just want to make sure they're not going off a cliff.\n+\n+## The Knowledge Barrier\n+\n+This creates an invisible barrier to entrepreneurship:\n+\n+1. **You can't start until you know all the jobs** - Analysis paralysis from overwhelming requirements\n+2. **You can't scale until you systematize all the jobs** - Growth becomes its own full-time job\n+3. **You can't compete without expertise you can't afford** - Larger businesses have specialists\n+\n+The cruel irony: The very people who could create the most value—skilled practitioners who understand customer needs—are kept out by administrative complexity and risk.\n+\n+## The Growth Transition Nightmare\n+\n+Every business faces these painful transitions:\n+\n+### Transition 1: Idea → Entrepreneur\n+**The Challenge**: \"I need to learn taxes, legal, marketing, sales, finance...\"\n+\n+**What Happens**: \n+- Talented people give up before starting\n+- Others make costly mistakes\n+- Many operate in constant fear of \"what they don't know\"\n+\n+**The Cost**: Countless businesses never launch\n+\n+### Transition 2: Entrepreneur → Small Team\n+**The Challenge**: \"Now I need to document everything in my head and train people\"\n+\n+**What Happens**:\n+- Knowledge transfer becomes a bottleneck\n+- Training is inconsistent and repetitive\n+- Founder becomes the constraint on growth\n+\n+**The Cost**: Businesses plateau at founder's capacity\n+\n+### Transition 3: Small Team → Sustainable Business\n+**The Challenge**: \"I have to hire managers who don't generate revenue but just keep things together\"\n+\n+**What Happens**:\n+- Overhead explodes\n+- Profits get reinvested in bureaucracy\n+- Culture shifts from doing to managing\n+\n+**The Cost**: Many successful small businesses never become sustainable businesses\n+\n+## Why Current Solutions Fail\n+\n+### The Consultant Trap\n+- Too expensive for small businesses\n+- Knowledge walks out when engagement ends\n+- Generic advice that doesn't fit your specific situation\n+\n+### The Software Prison\n+- Forces you into their way of working\n+- Requires expertise to configure and maintain\n+- Creates dependency without teaching\n+\n+### The Course Overload\n+- Information without implementation\n+- Generic strategies without specific application\n+- No ongoing support as situations change\n+\n+### The Hiring Hurdle\n+- Can't afford specialists until you need them desperately\n+- Finding good people is its own full-time job\n+- Risk of bad hires is catastrophic for small businesses\n+\n+## A Different Path Forward\n+\n+What if you could:\n+\n+1. **Access expert knowledge exactly when you need it** - Not generic courses, but specific workflows for your exact situation\n+\n+2. **Learn by doing, not studying** - Follow proven processes while understanding why each step matters, improving it and shaping it to your unique approach over time\n+\n+3. **Start simple, grow sophisticated** - Begin with basics, add complexity as you're ready\n+\n+4. **Keep your focus on what you do best** - Spend time on your craft, not untangling administrative messes\n+\n+This isn't about replacing human expertise—it's about making it accessible to everyone who needs it.\n+\n+## The Democratization of Business Knowledge\n+\n+Just as the internet democratized access to information, we need to democratize access to business operations expertise. \n+\n+The goal isn't to eliminate the need for professionals—it's to:\n+- Help entrepreneurs know when they need help\n+- Provide guidance for routine situations\n+- Create clear pathways for growth\n+- Lower the cost of getting started\n+- Reduce the risk of expensive mistakes\n+\n+## The Human Impact\n+\n+Behind every business statistic is a human story:\n+\n+- The talented chef whose restaurant failed due to cash flow mismanagement\n+- The brilliant developer whose startup died from lack of sales\n+- The amazing therapist who stays small because growth seems impossibly complex\n+- The creative agency that imploded during their first scaling attempt\n+\n+These aren't failures of talent or effort. They're failures of a system that makes business unnecessarily complex.\n+\n+## Moving Forward\n+\n+The entrepreneurial journey doesn't have to be this hard. By combining:\n+\n+- **Codified expertise** from professionals who've solved these problems\n+- **Intelligent automation** that handles routine decisions\n+- **Human judgment** for what matters most\n+- **Continuous learning** from every business using the system\n+\n+We can create a world where starting and growing a business is about serving customers well, not drowning in administrative complexity.\n+\n+The knowledge is out there. The technology exists. What's been missing is a way to bring them together in a form that any business can use.\n+\n+That's what we're building: Not just software, but a new infrastructure for entrepreneurship itself.\n\\ No newline at end of file\n"
    },
    {
      "filepath": "docs/THE_MARKETPLACE_VISION.md",
      "oldHash": "",
      "newHash": "6d50c18b3a218b7203f53c5d11a3d74ff6b13783",
      "timestamp": "2025-07-23T21:16:41.497Z",
      "changeType": "content",
      "gitDiff": "diff --git a/docs/THE_MARKETPLACE_VISION.md b/docs/THE_MARKETPLACE_VISION.md\nnew file mode 100644\nindex 0000000..6d50c18\n--- /dev/null\n+++ b/docs/THE_MARKETPLACE_VISION.md\n@@ -0,0 +1,253 @@\n+# The Marketplace Vision: An App Store for Business Expertise\n+\n+## The Big Idea\n+\n+**\"Excel for Business Processes\" + \"App Store for Business Expertise\"**\n+\n+Just as Excel revolutionized how businesses model data, and app stores democratized software distribution, we're creating a marketplace that democratizes access to business expertise through executable workflows.\n+\n+## The Platform Foundation\n+\n+### Excel for Business Processes\n+\n+Like Excel provides a blank canvas for data modeling, BUSY provides a flexible foundation for process modeling:\n+\n+- **Universal applicability**: Works for any business, any process\n+- **User-owned customization**: Model processes exactly how you work\n+- **No vendor lock-in**: Your processes, your rules, your way\n+- **Grows with you**: From simple workflows to complex operations\n+\n+### The Critical Addition: Intelligence\n+\n+Unlike Excel, BUSY processes are:\n+- **Executable**: Not just documentation, but living workflows\n+- **Intelligent**: AI-assisted decision making with human oversight\n+- **Connected**: Integrate with tools, services, and expertise\n+- **Learning**: Improve based on usage patterns\n+\n+## The Marketplace Ecosystem\n+\n+### 1. Template Library\n+\n+**Professional-Grade Workflows** created by experts:\n+\n+- **Accounting Templates**\n+  - Invoice processing workflows\n+  - Expense management systems\n+  - Tax preparation checklists\n+  - Financial reporting processes\n+\n+- **Legal Templates**\n+  - Contract review workflows\n+  - Compliance checklists\n+  - IP protection processes\n+  - Employment procedures\n+\n+- **Marketing Templates**\n+  - Campaign management workflows\n+  - Content creation pipelines\n+  - Lead nurturing sequences\n+  - Analytics and reporting\n+\n+- **Sales Templates**\n+  - Lead qualification processes\n+  - Proposal workflows\n+  - Customer onboarding\n+  - Renewal procedures\n+\n+- **Industry-Specific Templates**\n+  - Restaurant operations\n+  - E-commerce fulfillment\n+  - Professional services\n+  - Healthcare practices\n+\n+### 2. Integrated Services\n+\n+Templates aren't just static processes—they connect to real expertise:\n+\n+**Hybrid Human-AI Support**:\n+- Templates include AI agents trained by professionals\n+- Escalation paths to human experts when needed\n+- On-demand consultation built into workflows\n+- Quality assurance from domain specialists\n+\n+**Service Integration Examples**:\n+- Tax template → Connected to CPA review service\n+- Legal template → Linked to attorney consultation\n+- Marketing template → Includes copywriter AI + human editing\n+- HR template → Connected to compliance specialists\n+\n+### 3. Complete Business Templates\n+\n+**Plug-and-Play Business Functions**:\n+\n+Instead of buying 15 different SaaS tools, get complete operational templates:\n+\n+- **\"Startup in a Box\"**: Everything to launch a business\n+  - Legal formation workflows\n+  - Basic accounting setup\n+  - Marketing foundation\n+  - Sales processes\n+  - Customer service protocols\n+\n+- **\"Scale-Up Suite\"**: Transition from 5 to 50 employees\n+  - HR and onboarding workflows\n+  - Management processes\n+  - Financial controls\n+  - Operational procedures\n+\n+- **\"Industry Accelerators\"**: Complete workflows for specific businesses\n+  - Photography business suite\n+  - Consulting firm package\n+  - E-commerce operations\n+  - Restaurant management\n+\n+### 4. The Creator Economy\n+\n+**For Service Professionals**:\n+\n+Transform your expertise into scalable products:\n+\n+- **Package Knowledge**: Convert your methods into BUSY workflows\n+- **Reach New Markets**: Serve clients who can't afford full service\n+- **Recurring Revenue**: Earn from template sales and usage\n+- **Build Authority**: Become the go-to expert in your niche\n+\n+**Revenue Models**:\n+- One-time template purchases\n+- Subscription access to template updates\n+- Usage-based pricing for connected services\n+- Revenue share on integrated human services\n+\n+## How It Works\n+\n+### For Businesses\n+\n+1. **Browse the Marketplace**\n+   - Search by industry, function, or specific need\n+   - Preview workflows before purchasing\n+   - Read reviews from similar businesses\n+   - See integration possibilities\n+\n+2. **Deploy Instantly**\n+   - One-click installation\n+   - Customize to your specific needs\n+   - Keep your existing tools\n+   - Start using immediately\n+\n+3. **Evolve and Contribute**\n+   - Modify templates as you grow\n+   - Share improvements with community\n+   - Request new features\n+   - Build your own templates\n+\n+### For Creators\n+\n+1. **Build Templates**\n+   - Use BUSY's visual designer\n+   - Include AI agents\n+   - Set up service connections\n+   - Define customization options\n+\n+2. **Publish to Marketplace**\n+   - Set pricing model\n+   - Define support levels\n+   - Include documentation\n+   - Market to your audience\n+\n+3. **Maintain and Grow**\n+   - Update based on feedback\n+   - Expand template offerings\n+   - Build template ecosystems\n+   - Create premium versions\n+\n+## The Network Effect\n+\n+As the marketplace grows, value compounds:\n+\n+1. **More Templates** → More businesses can start/scale easily\n+2. **More Businesses** → More demand for specialized templates  \n+3. **More Creators** → Better quality and variety\n+4. **More Data** → AI gets smarter, templates improve\n+5. **More Integration** → Ecosystem becomes more valuable\n+\n+## Impact on Different Stakeholders\n+\n+### For Entrepreneurs\n+- **Lower Barriers**: Start without knowing everything\n+- **Faster Launch**: Deploy proven processes instantly\n+- **Reduced Risk**: Learn from others' experience\n+- **Focus on Core**: Spend time on what you do best\n+\n+### For Small Businesses\n+- **Affordable Expertise**: Access knowledge you can't hire\n+- **Scalable Operations**: Grow without growing overhead\n+- **Continuous Improvement**: Benefit from community updates\n+- **Competitive Edge**: Operate like larger competitors\n+\n+### For Service Professionals\n+- **New Revenue Stream**: Monetize your expertise differently\n+- **Broader Impact**: Help thousands instead of dozens\n+- **Passive Income**: Earn while you sleep\n+- **Market Validation**: Test new service offerings\n+\n+### For Enterprise\n+- **Innovation Lab**: Test new processes safely\n+- **Standardization**: Deploy consistent processes globally\n+- **Knowledge Capture**: Preserve institutional wisdom\n+- **Vendor Reduction**: Replace multiple tools with workflows\n+\n+## Why This Changes Everything\n+\n+### The Current State\n+- Businesses reinvent wheels others have perfected\n+- Expertise is trapped in expensive consultants\n+- Knowledge is lost when people leave\n+- Small businesses can't access corporate-grade processes\n+\n+### The Future State\n+- Best practices available to everyone\n+- Expertise democratized through templates\n+- Knowledge preserved and improved continuously\n+- Every business can operate professionally\n+\n+## The Virtuous Cycle\n+\n+1. **Professionals create templates** from proven expertise\n+2. **Businesses deploy and customize** for their needs\n+3. **Usage data improves templates** through AI learning\n+4. **Success stories attract more creators** and users\n+5. **Ecosystem grows stronger** with each participant\n+\n+## Long-Term Vision\n+\n+### Year 1-2: Foundation\n+- Core templates for common business functions\n+- Basic marketplace functionality\n+- Early creator tools\n+- Initial AI integration\n+\n+### Year 3-5: Expansion\n+- Industry-specific template ecosystems\n+- Advanced service integrations\n+- Global marketplace with localization\n+- Enterprise template management\n+\n+### Year 5+: Transformation\n+- AI that can suggest process improvements\n+- Templates that evolve automatically\n+- Cross-business learning networks\n+- New category of \"Process Professionals\"\n+\n+## The Bottom Line\n+\n+We're not just building a marketplace—we're creating a new economy where business expertise is:\n+\n+- **Accessible**: Available to anyone who needs it\n+- **Affordable**: Priced for small businesses\n+- **Actionable**: Not just advice, but executable workflows\n+- **Advancing**: Continuously improving through collective intelligence\n+\n+This is how we change the entrepreneurial journey from a lonely struggle to a supported path. Every business gets access to the collective wisdom of thousands of professionals and millions of executions.\n+\n+**The App Store made everyone a potential app developer. The BUSY Marketplace will make everyone a potential business operator.**\n\\ No newline at end of file\n"
    },
    {
      "filepath": "docs/WHY_BUSY_EXISTS.md",
      "oldHash": "",
      "newHash": "c1ff6dfe70a323c2614ff00cd09a2e20c4e30726",
      "timestamp": "2025-07-23T21:16:41.539Z",
      "changeType": "content",
      "gitDiff": "diff --git a/docs/WHY_BUSY_EXISTS.md b/docs/WHY_BUSY_EXISTS.md\nnew file mode 100644\nindex 0000000..c1ff6df\n--- /dev/null\n+++ b/docs/WHY_BUSY_EXISTS.md\n@@ -0,0 +1,150 @@\n+# Why BUSY Exists: The Philosophy Behind Business Process as Code\n+\n+## A Simple Observation\n+\n+Every successful business has \"the way we do things.\" It's the accumulated wisdom of what works—the processes that turn chaos into repeatable success. But here's the tragedy: this wisdom usually lives in people's heads, scattered documents, and \"that's just how we've always done it.\"\n+\n+When key people leave, that wisdom walks out the door with them.\n+\n+## The Excel Revelation\n+\n+You know what's the most successful business software ever created? Excel. Not Salesforce, not SAP—Excel. Why? Because it gives people a blank canvas to model their business exactly how it works, not how some software vendor thinks it should work.\n+\n+But Excel has limits. It can model data brilliantly, but it can't model processes. It can't guide someone through steps. It can't make intelligent decisions. It can't enforce consistency while allowing flexibility.\n+\n+We asked ourselves: What if there was an \"Excel for business processes\"?\n+\n+## The Human-First Philosophy\n+\n+Most business software starts with the assumption that humans are the problem—they're inconsistent, they make mistakes, they don't follow rules. So the software tries to constrain them into rigid workflows.\n+\n+We start with the opposite assumption: **Humans are the solution.**\n+\n+Humans understand context. They handle exceptions. They build relationships. They make the judgment calls that turn good businesses into great ones.\n+\n+The problem isn't humans—it's that we're asking them to be robots, doing repetitive work that should be automated while preventing them from using their judgment where it matters most.\n+\n+## \"Facilitate, Never Constrain\"\n+\n+This is our core design principle. Every feature, every decision, every line of code is guided by this philosophy:\n+\n+- **Can't find the right form field?** Skip it and add a note\n+- **Process doesn't fit this specific case?** Override it with explanation\n+- **AI made a weird decision?** Human can always correct it\n+- **Need to go back three steps?** Go for it—full history maintained\n+\n+Traditional software says \"You can't do that.\" BUSY says \"Tell me why you need to, and let's make it work.\"\n+\n+## The Three Pillars\n+\n+### 1. Capture the Wisdom\n+Your business processes are your competitive advantage. They should be:\n+- Written down in plain language\n+- Versioned like code\n+- Evolved based on learning\n+- Owned by you, not trapped in some vendor's system\n+\n+### 2. Execute with Intelligence\n+Once captured, processes should:\n+- Guide humans through complex workflows\n+- Automate the truly repetitive stuff\n+- Use AI for routine decisions\n+- But ALWAYS allow human override\n+\n+### 3. Learn and Evolve\n+Every execution teaches you something:\n+- What exceptions occur?\n+- Where do people override?\n+- What takes too long?\n+- What could be automated?\n+\n+The system should learn and suggest improvements, not just execute blindly.\n+\n+## Why \"Code\"?\n+\n+We say \"Business Process as Code\" because code has superpowers that documents don't:\n+\n+- **Version Control**: See exactly what changed and why\n+- **Testing**: Verify processes work before deploying\n+- **Composability**: Build complex processes from simple ones\n+- **Debugging**: Understand why something happened\n+- **Deployment**: Push updates instantly to everyone\n+\n+But unlike traditional code, BUSY is readable by humans. Your operations manager can understand it. Your new hire can learn from it. Your auditor can verify it.\n+\n+## The Lost Art of Natural Work\n+\n+Remember file folders and post-it notes? There was something profoundly right about physical work:\n+\n+### What We Had\n+- **Tangible**: You could see and touch everything\n+- **Mutable**: Cross things out, add notes, rearrange at will\n+- **Collaborative**: Easy handoffs, anyone could jump in\n+- **Predictable**: No fear of \"breaking the system\"\n+- **Natural**: Work felt like work, not like operating software\n+\n+### What We Lost in Digital\n+- Natural intuition about how things work\n+- Confidence to modify and experiment\n+- That feeling of \"just doing work\" vs \"fighting with tools\"\n+- The ability to see everything at once\n+- Simple ways to hand off work to others\n+\n+### What BUSY Brings Back\n+We're recreating that natural feeling with digital superpowers:\n+- See your processes visually, understand flow at a glance\n+- Modify anything without fear—full history maintained\n+- Hand off work seamlessly with context preserved\n+- Feel confident experimenting and improving\n+- Focus on work, not on learning software\n+\n+## The Real Magic: Layers\n+\n+Most businesses have three layers that rarely talk to each other:\n+\n+- **L0 - Operational**: The people doing the work\n+- **L1 - Management**: The people coordinating the work\n+- **L2 - Strategic**: The people planning the future\n+\n+Current tools trap information in each layer. BUSY connects them:\n+- Operations executes processes and surfaces exceptions\n+- Management handles exceptions and optimizes flow\n+- Strategy sees patterns and evolves the business\n+\n+Each layer has its own view, its own controls, but they're all working from the same source of truth.\n+\n+## For the Skeptics\n+\n+\"But my business is unique!\" - Yes, that's the point. You describe YOUR process.\n+\n+\"But processes change all the time!\" - Yes, that's why it's code, not concrete.\n+\n+\"But people won't follow processes!\" - They will when the process helps instead of hinders.\n+\n+\"But this sounds complex!\" - The complexity is hidden. Users just see their work and the next steps.\n+\n+## The Future We're Building\n+\n+Imagine a world where:\n+- Starting a business means describing what you do, not configuring software\n+- Growing a business means evolving your processes, not migrating systems\n+- Running a business means focusing on customers, not fighting with tools\n+- Knowledge isn't lost when people leave—it's encoded in your processes\n+\n+That's why BUSY exists.\n+\n+## Not Just Another Tool\n+\n+We're not building another project management tool or CRM. We're building a new layer of infrastructure for how businesses operate. Just like AWS abstracted away servers, we're abstracting away the complexity of business operations.\n+\n+But unlike AWS, which requires technical expertise, BUSY requires business expertise. If you understand your business, you can use BUSY.\n+\n+## The Invitation\n+\n+Every business has processes. Most are running on heroics, heuristics, and hope. We're offering a different way:\n+\n+**Tell us what you do. We'll make it executable.**\n+\n+---\n+\n+*\"The best software is invisible. It amplifies human capability and creativity without getting in the way.\"* - BUSY Philosophy\n\\ No newline at end of file\n"
    },
    {
      "filepath": "generated-framework-test/README.md",
      "oldHash": "",
      "newHash": "44ee10ac99bd05fef6392567dd32faa17d75688b",
      "timestamp": "2025-07-23T21:16:41.578Z",
      "changeType": "content",
      "gitDiff": "diff --git a/generated-framework-test/README.md b/generated-framework-test/README.md\nnew file mode 100644\nindex 0000000..44ee10a\n--- /dev/null\n+++ b/generated-framework-test/README.md\n@@ -0,0 +1,91 @@\n+# inquiry-to-booking-process\n+\n+Generated business process framework code from BUSY files using the Orgata Framework.\n+\n+## Overview\n+\n+This package contains TypeScript framework code that implements business processes with complete flexibility and user control.\n+\n+## Generated Components\n+\n+- **2 Process Classes**: Complete business process implementations\n+- **12 Step Classes**: Individual step implementations\n+  - 0 Human Steps (with generated UI forms)\n+  - 11 Algorithm Steps (automated processing)\n+  - 1 Agent Steps (AI-powered analysis)\n+\n+## Processes\n+\n+### client-onboarding\n+- **Description**: Comprehensive onboarding process to set expectations and gather shoot requirements\n+- **Steps**: 6\n+- **Layer**: L0\n+\n+### inquiry-to-booking\n+- **Description**: Systematic process for converting inquiries into confirmed bookings\n+- **Steps**: 6\n+- **Layer**: L0\n+\n+## Usage\n+\n+```typescript\n+import { ClientOnboardingProcess, InquiryToBookingProcess } from 'inquiry-to-booking-process';\n+import { ProcessContext } from '@orgata/framework';\n+\n+// Create process instance\n+const process = new ClientOnboardingProcess();\n+\n+// Execute with context\n+const context: ProcessContext = {\n+  processId: 'process-001',\n+  userId: 'user-123',\n+  sessionId: 'session-456',\n+  environment: 'production',\n+  businessContext: {\n+    industry: 'your-industry',\n+    businessSize: 'small',\n+    organizationId: 'org-123'\n+  },\n+  permissions: {\n+    canSkipSteps: true,\n+    canOverrideValidation: true,\n+    canModifyProcess: false,\n+    canViewAuditTrail: true\n+  }\n+};\n+\n+const result = await process.execute(context);\n+```\n+\n+## Framework Philosophy: \"Facilitate, Never Constrain\"\n+\n+This generated code follows the Orgata Framework principles:\n+\n+- **Complete Flexibility**: Users can skip any step and provide manual data\n+- **Immutable State**: All changes tracked with event sourcing\n+- **Audit Trail**: Complete history of all actions and decisions\n+- **AI Integration**: Intelligent assistance with human oversight\n+- **Never Rewrite History**: Forward-only progression with exception tracking\n+\n+## Installation\n+\n+```bash\n+npm install @orgata/framework\n+npm install\n+```\n+\n+## Development\n+\n+```bash\n+npm run build    # Compile TypeScript\n+npm run test     # Run tests\n+npm run lint     # Check code quality\n+```\n+\n+## Generated Files\n+\n+- `src/processes/` - Process class implementations\n+- `src/steps/` - Individual step implementations\n+- `src/index.ts` - Main exports\n+\n+Generated on: 2025-07-22T02:24:51.271Z\n"
    },
    {
      "filepath": "generated-framework-test/package-lock.json",
      "oldHash": "",
      "newHash": "fdc86d2a6b1fcfd18750d325f753b7a6865dcf49",
      "timestamp": "2025-07-23T21:16:41.626Z",
      "changeType": "content",
      "gitDiff": "diff --git a/generated-framework-test/package-lock.json b/generated-framework-test/package-lock.json\nnew file mode 100644\nindex 0000000..fdc86d2\n--- /dev/null\n+++ b/generated-framework-test/package-lock.json\n@@ -0,0 +1,5215 @@\n+{\n+  \"name\": \"inquiry-to-booking-process\",\n+  \"version\": \"1.0.0\",\n+  \"lockfileVersion\": 3,\n+  \"requires\": true,\n+  \"packages\": {\n+    \"\": {\n+      \"name\": \"inquiry-to-booking-process\",\n+      \"version\": \"1.0.0\",\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@orgata/framework\": \"file:../packages/orgata-framework\"\n+      },\n+      \"devDependencies\": {\n+        \"@types/jest\": \"^29.0.0\",\n+        \"@types/node\": \"^20.0.0\",\n+        \"@typescript-eslint/eslint-plugin\": \"^6.0.0\",\n+        \"@typescript-eslint/parser\": \"^6.0.0\",\n+        \"eslint\": \"^8.0.0\",\n+        \"jest\": \"^29.0.0\",\n+        \"ts-jest\": \"^29.0.0\",\n+        \"typescript\": \"^5.0.0\"\n+      }\n+    },\n+    \"../packages/orgata-framework\": {\n+      \"name\": \"@orgata/framework\",\n+      \"version\": \"0.1.0\",\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@types/node\": \"^20.0.0\",\n+        \"eventemitter3\": \"^5.0.0\",\n+        \"immer\": \"^10.0.0\",\n+        \"zod\": \"^3.22.0\"\n+      },\n+      \"devDependencies\": {\n+        \"@typescript-eslint/eslint-plugin\": \"^6.0.0\",\n+        \"@typescript-eslint/parser\": \"^6.0.0\",\n+        \"eslint\": \"^8.0.0\",\n+        \"tsup\": \"^8.0.0\",\n+        \"typescript\": \"^5.0.0\",\n+        \"vitest\": \"^1.0.0\"\n+      }\n+    },\n+    \"node_modules/@ampproject/remapping\": {\n+      \"version\": \"2.3.0\",\n+      \"resolved\": \"https://registry.npmjs.org/@ampproject/remapping/-/remapping-2.3.0.tgz\",\n+      \"integrity\": \"sha512-30iZtAPgz+LTIYoeivqYo853f02jBYSd5uGnGpkFV0M3xOt9aN73erkgYAmZU43x4VfqcnLxW9Kpg3R5LC4YYw==\",\n+      \"dev\": true,\n+      \"license\": \"Apache-2.0\",\n+      \"dependencies\": {\n+        \"@jridgewell/gen-mapping\": \"^0.3.5\",\n+        \"@jridgewell/trace-mapping\": \"^0.3.24\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=6.0.0\"\n+      }\n+    },\n+    \"node_modules/@babel/code-frame\": {\n+      \"version\": \"7.27.1\",\n+      \"resolved\": \"https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.27.1.tgz\",\n+      \"integrity\": \"sha512-cjQ7ZlQ0Mv3b47hABuTevyTuYN4i+loJKGeV9flcCgIK37cCXRh+L1bd3iBHlynerhQ7BhCkn2BPbQUL+rGqFg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@babel/helper-validator-identifier\": \"^7.27.1\",\n+        \"js-tokens\": \"^4.0.0\",\n+        \"picocolors\": \"^1.1.1\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=6.9.0\"\n+      }\n+    },\n+    \"node_modules/@babel/compat-data\": {\n+      \"version\": \"7.28.0\",\n+      \"resolved\": \"https://registry.npmjs.org/@babel/compat-data/-/compat-data-7.28.0.tgz\",\n+      \"integrity\": \"sha512-60X7qkglvrap8mn1lh2ebxXdZYtUcpd7gsmy9kLaBJ4i/WdY8PqTSdxyA8qraikqKQK5C1KRBKXqznrVapyNaw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=6.9.0\"\n+      }\n+    },\n+    \"node_modules/@babel/core\": {\n+      \"version\": \"7.28.0\",\n+      \"resolved\": \"https://registry.npmjs.org/@babel/core/-/core-7.28.0.tgz\",\n+      \"integrity\": \"sha512-UlLAnTPrFdNGoFtbSXwcGFQBtQZJCNjaN6hQNP3UPvuNXT1i82N26KL3dZeIpNalWywr9IuQuncaAfUaS1g6sQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@ampproject/remapping\": \"^2.2.0\",\n+        \"@babel/code-frame\": \"^7.27.1\",\n+        \"@babel/generator\": \"^7.28.0\",\n+        \"@babel/helper-compilation-targets\": \"^7.27.2\",\n+        \"@babel/helper-module-transforms\": \"^7.27.3\",\n+        \"@babel/helpers\": \"^7.27.6\",\n+        \"@babel/parser\": \"^7.28.0\",\n+        \"@babel/template\": \"^7.27.2\",\n+        \"@babel/traverse\": \"^7.28.0\",\n+        \"@babel/types\": \"^7.28.0\",\n+        \"convert-source-map\": \"^2.0.0\",\n+        \"debug\": \"^4.1.0\",\n+        \"gensync\": \"^1.0.0-beta.2\",\n+        \"json5\": \"^2.2.3\",\n+        \"semver\": \"^6.3.1\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=6.9.0\"\n+      },\n+      \"funding\": {\n+        \"type\": \"opencollective\",\n+        \"url\": \"https://opencollective.com/babel\"\n+      }\n+    },\n+    \"node_modules/@babel/core/node_modules/semver\": {\n+      \"version\": \"6.3.1\",\n+      \"resolved\": \"https://registry.npmjs.org/semver/-/semver-6.3.1.tgz\",\n+      \"integrity\": \"sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==\",\n+      \"dev\": true,\n+      \"license\": \"ISC\",\n+      \"bin\": {\n+        \"semver\": \"bin/semver.js\"\n+      }\n+    },\n+    \"node_modules/@babel/generator\": {\n+      \"version\": \"7.28.0\",\n+      \"resolved\": \"https://registry.npmjs.org/@babel/generator/-/generator-7.28.0.tgz\",\n+      \"integrity\": \"sha512-lJjzvrbEeWrhB4P3QBsH7tey117PjLZnDbLiQEKjQ/fNJTjuq4HSqgFA+UNSwZT8D7dxxbnuSBMsa1lrWzKlQg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@babel/parser\": \"^7.28.0\",\n+        \"@babel/types\": \"^7.28.0\",\n+        \"@jridgewell/gen-mapping\": \"^0.3.12\",\n+        \"@jridgewell/trace-mapping\": \"^0.3.28\",\n+        \"jsesc\": \"^3.0.2\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=6.9.0\"\n+      }\n+    },\n+    \"node_modules/@babel/helper-compilation-targets\": {\n+      \"version\": \"7.27.2\",\n+      \"resolved\": \"https://registry.npmjs.org/@babel/helper-compilation-targets/-/helper-compilation-targets-7.27.2.tgz\",\n+      \"integrity\": \"sha512-2+1thGUUWWjLTYTHZWK1n8Yga0ijBz1XAhUXcKy81rd5g6yh7hGqMp45v7cadSbEHc9G3OTv45SyneRN3ps4DQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@babel/compat-data\": \"^7.27.2\",\n+        \"@babel/helper-validator-option\": \"^7.27.1\",\n+        \"browserslist\": \"^4.24.0\",\n+        \"lru-cache\": \"^5.1.1\",\n+        \"semver\": \"^6.3.1\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=6.9.0\"\n+      }\n+    },\n+    \"node_modules/@babel/helper-compilation-targets/node_modules/semver\": {\n+      \"version\": \"6.3.1\",\n+      \"resolved\": \"https://registry.npmjs.org/semver/-/semver-6.3.1.tgz\",\n+      \"integrity\": \"sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==\",\n+      \"dev\": true,\n+      \"license\": \"ISC\",\n+      \"bin\": {\n+        \"semver\": \"bin/semver.js\"\n+      }\n+    },\n+    \"node_modules/@babel/helper-globals\": {\n+      \"version\": \"7.28.0\",\n+      \"resolved\": \"https://registry.npmjs.org/@babel/helper-globals/-/helper-globals-7.28.0.tgz\",\n+      \"integrity\": \"sha512-+W6cISkXFa1jXsDEdYA8HeevQT/FULhxzR99pxphltZcVaugps53THCeiWA8SguxxpSp3gKPiuYfSWopkLQ4hw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=6.9.0\"\n+      }\n+    },\n+    \"node_modules/@babel/helper-module-imports\": {\n+      \"version\": \"7.27.1\",\n+      \"resolved\": \"https://registry.npmjs.org/@babel/helper-module-imports/-/helper-module-imports-7.27.1.tgz\",\n+      \"integrity\": \"sha512-0gSFWUPNXNopqtIPQvlD5WgXYI5GY2kP2cCvoT8kczjbfcfuIljTbcWrulD1CIPIX2gt1wghbDy08yE1p+/r3w==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@babel/traverse\": \"^7.27.1\",\n+        \"@babel/types\": \"^7.27.1\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=6.9.0\"\n+      }\n+    },\n+    \"node_modules/@babel/helper-module-transforms\": {\n+      \"version\": \"7.27.3\",\n+      \"resolved\": \"https://registry.npmjs.org/@babel/helper-module-transforms/-/helper-module-transforms-7.27.3.tgz\",\n+      \"integrity\": \"sha512-dSOvYwvyLsWBeIRyOeHXp5vPj5l1I011r52FM1+r1jCERv+aFXYk4whgQccYEGYxK2H3ZAIA8nuPkQ0HaUo3qg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@babel/helper-module-imports\": \"^7.27.1\",\n+        \"@babel/helper-validator-identifier\": \"^7.27.1\",\n+        \"@babel/traverse\": \"^7.27.3\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=6.9.0\"\n+      },\n+      \"peerDependencies\": {\n+        \"@babel/core\": \"^7.0.0\"\n+      }\n+    },\n+    \"node_modules/@babel/helper-plugin-utils\": {\n+      \"version\": \"7.27.1\",\n+      \"resolved\": \"https://registry.npmjs.org/@babel/helper-plugin-utils/-/helper-plugin-utils-7.27.1.tgz\",\n+      \"integrity\": \"sha512-1gn1Up5YXka3YYAHGKpbideQ5Yjf1tDa9qYcgysz+cNCXukyLl6DjPXhD3VRwSb8c0J9tA4b2+rHEZtc6R0tlw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=6.9.0\"\n+      }\n+    },\n+    \"node_modules/@babel/helper-string-parser\": {\n+      \"version\": \"7.27.1\",\n+      \"resolved\": \"https://registry.npmjs.org/@babel/helper-string-parser/-/helper-string-parser-7.27.1.tgz\",\n+      \"integrity\": \"sha512-qMlSxKbpRlAridDExk92nSobyDdpPijUq2DW6oDnUqd0iOGxmQjyqhMIihI9+zv4LPyZdRje2cavWPbCbWm3eA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=6.9.0\"\n+      }\n+    },\n+    \"node_modules/@babel/helper-validator-identifier\": {\n+      \"version\": \"7.27.1\",\n+      \"resolved\": \"https://registry.npmjs.org/@babel/helper-validator-identifier/-/helper-validator-identifier-7.27.1.tgz\",\n+      \"integrity\": \"sha512-D2hP9eA+Sqx1kBZgzxZh0y1trbuU+JoDkiEwqhQ36nodYqJwyEIhPSdMNd7lOm/4io72luTPWH20Yda0xOuUow==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=6.9.0\"\n+      }\n+    },\n+    \"node_modules/@babel/helper-validator-option\": {\n+      \"version\": \"7.27.1\",\n+      \"resolved\": \"https://registry.npmjs.org/@babel/helper-validator-option/-/helper-validator-option-7.27.1.tgz\",\n+      \"integrity\": \"sha512-YvjJow9FxbhFFKDSuFnVCe2WxXk1zWc22fFePVNEaWJEu8IrZVlda6N0uHwzZrUM1il7NC9Mlp4MaJYbYd9JSg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=6.9.0\"\n+      }\n+    },\n+    \"node_modules/@babel/helpers\": {\n+      \"version\": \"7.27.6\",\n+      \"resolved\": \"https://registry.npmjs.org/@babel/helpers/-/helpers-7.27.6.tgz\",\n+      \"integrity\": \"sha512-muE8Tt8M22638HU31A3CgfSUciwz1fhATfoVai05aPXGor//CdWDCbnlY1yvBPo07njuVOCNGCSp/GTt12lIug==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@babel/template\": \"^7.27.2\",\n+        \"@babel/types\": \"^7.27.6\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=6.9.0\"\n+      }\n+    },\n+    \"node_modules/@babel/parser\": {\n+      \"version\": \"7.28.0\",\n+      \"resolved\": \"https://registry.npmjs.org/@babel/parser/-/parser-7.28.0.tgz\",\n+      \"integrity\": \"sha512-jVZGvOxOuNSsuQuLRTh13nU0AogFlw32w/MT+LV6D3sP5WdbW61E77RnkbaO2dUvmPAYrBDJXGn5gGS6tH4j8g==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@babel/types\": \"^7.28.0\"\n+      },\n+      \"bin\": {\n+        \"parser\": \"bin/babel-parser.js\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=6.0.0\"\n+      }\n+    },\n+    \"node_modules/@babel/plugin-syntax-async-generators\": {\n+      \"version\": \"7.8.4\",\n+      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-async-generators/-/plugin-syntax-async-generators-7.8.4.tgz\",\n+      \"integrity\": \"sha512-tycmZxkGfZaxhMRbXlPXuVFpdWlXpir2W4AMhSJgRKzk/eDlIXOhb2LHWoLpDF7TEHylV5zNhykX6KAgHJmTNw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@babel/helper-plugin-utils\": \"^7.8.0\"\n+      },\n+      \"peerDependencies\": {\n+        \"@babel/core\": \"^7.0.0-0\"\n+      }\n+    },\n+    \"node_modules/@babel/plugin-syntax-bigint\": {\n+      \"version\": \"7.8.3\",\n+      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-bigint/-/plugin-syntax-bigint-7.8.3.tgz\",\n+      \"integrity\": \"sha512-wnTnFlG+YxQm3vDxpGE57Pj0srRU4sHE/mDkt1qv2YJJSeUAec2ma4WLUnUPeKjyrfntVwe/N6dCXpU+zL3Npg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@babel/helper-plugin-utils\": \"^7.8.0\"\n+      },\n+      \"peerDependencies\": {\n+        \"@babel/core\": \"^7.0.0-0\"\n+      }\n+    },\n+    \"node_modules/@babel/plugin-syntax-class-properties\": {\n+      \"version\": \"7.12.13\",\n+      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-class-properties/-/plugin-syntax-class-properties-7.12.13.tgz\",\n+      \"integrity\": \"sha512-fm4idjKla0YahUNgFNLCB0qySdsoPiZP3iQE3rky0mBUtMZ23yDJ9SJdg6dXTSDnulOVqiF3Hgr9nbXvXTQZYA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@babel/helper-plugin-utils\": \"^7.12.13\"\n+      },\n+      \"peerDependencies\": {\n+        \"@babel/core\": \"^7.0.0-0\"\n+      }\n+    },\n+    \"node_modules/@babel/plugin-syntax-class-static-block\": {\n+      \"version\": \"7.14.5\",\n+      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-class-static-block/-/plugin-syntax-class-static-block-7.14.5.tgz\",\n+      \"integrity\": \"sha512-b+YyPmr6ldyNnM6sqYeMWE+bgJcJpO6yS4QD7ymxgH34GBPNDM/THBh8iunyvKIZztiwLH4CJZ0RxTk9emgpjw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@babel/helper-plugin-utils\": \"^7.14.5\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=6.9.0\"\n+      },\n+      \"peerDependencies\": {\n+        \"@babel/core\": \"^7.0.0-0\"\n+      }\n+    },\n+    \"node_modules/@babel/plugin-syntax-import-attributes\": {\n+      \"version\": \"7.27.1\",\n+      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-import-attributes/-/plugin-syntax-import-attributes-7.27.1.tgz\",\n+      \"integrity\": \"sha512-oFT0FrKHgF53f4vOsZGi2Hh3I35PfSmVs4IBFLFj4dnafP+hIWDLg3VyKmUHfLoLHlyxY4C7DGtmHuJgn+IGww==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@babel/helper-plugin-utils\": \"^7.27.1\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=6.9.0\"\n+      },\n+      \"peerDependencies\": {\n+        \"@babel/core\": \"^7.0.0-0\"\n+      }\n+    },\n+    \"node_modules/@babel/plugin-syntax-import-meta\": {\n+      \"version\": \"7.10.4\",\n+      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-import-meta/-/plugin-syntax-import-meta-7.10.4.tgz\",\n+      \"integrity\": \"sha512-Yqfm+XDx0+Prh3VSeEQCPU81yC+JWZ2pDPFSS4ZdpfZhp4MkFMaDC1UqseovEKwSUpnIL7+vK+Clp7bfh0iD7g==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@babel/helper-plugin-utils\": \"^7.10.4\"\n+      },\n+      \"peerDependencies\": {\n+        \"@babel/core\": \"^7.0.0-0\"\n+      }\n+    },\n+    \"node_modules/@babel/plugin-syntax-json-strings\": {\n+      \"version\": \"7.8.3\",\n+      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-json-strings/-/plugin-syntax-json-strings-7.8.3.tgz\",\n+      \"integrity\": \"sha512-lY6kdGpWHvjoe2vk4WrAapEuBR69EMxZl+RoGRhrFGNYVK8mOPAW8VfbT/ZgrFbXlDNiiaxQnAtgVCZ6jv30EA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@babel/helper-plugin-utils\": \"^7.8.0\"\n+      },\n+      \"peerDependencies\": {\n+        \"@babel/core\": \"^7.0.0-0\"\n+      }\n+    },\n+    \"node_modules/@babel/plugin-syntax-jsx\": {\n+      \"version\": \"7.27.1\",\n+      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-jsx/-/plugin-syntax-jsx-7.27.1.tgz\",\n+      \"integrity\": \"sha512-y8YTNIeKoyhGd9O0Jiyzyyqk8gdjnumGTQPsz0xOZOQ2RmkVJeZ1vmmfIvFEKqucBG6axJGBZDE/7iI5suUI/w==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@babel/helper-plugin-utils\": \"^7.27.1\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=6.9.0\"\n+      },\n+      \"peerDependencies\": {\n+        \"@babel/core\": \"^7.0.0-0\"\n+      }\n+    },\n+    \"node_modules/@babel/plugin-syntax-logical-assignment-operators\": {\n+      \"version\": \"7.10.4\",\n+      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-logical-assignment-operators/-/plugin-syntax-logical-assignment-operators-7.10.4.tgz\",\n+      \"integrity\": \"sha512-d8waShlpFDinQ5MtvGU9xDAOzKH47+FFoney2baFIoMr952hKOLp1HR7VszoZvOsV/4+RRszNY7D17ba0te0ig==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@babel/helper-plugin-utils\": \"^7.10.4\"\n+      },\n+      \"peerDependencies\": {\n+        \"@babel/core\": \"^7.0.0-0\"\n+      }\n+    },\n+    \"node_modules/@babel/plugin-syntax-nullish-coalescing-operator\": {\n+      \"version\": \"7.8.3\",\n+      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-nullish-coalescing-operator/-/plugin-syntax-nullish-coalescing-operator-7.8.3.tgz\",\n+      \"integrity\": \"sha512-aSff4zPII1u2QD7y+F8oDsz19ew4IGEJg9SVW+bqwpwtfFleiQDMdzA/R+UlWDzfnHFCxxleFT0PMIrR36XLNQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@babel/helper-plugin-utils\": \"^7.8.0\"\n+      },\n+      \"peerDependencies\": {\n+        \"@babel/core\": \"^7.0.0-0\"\n+      }\n+    },\n+    \"node_modules/@babel/plugin-syntax-numeric-separator\": {\n+      \"version\": \"7.10.4\",\n+      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-numeric-separator/-/plugin-syntax-numeric-separator-7.10.4.tgz\",\n+      \"integrity\": \"sha512-9H6YdfkcK/uOnY/K7/aA2xpzaAgkQn37yzWUMRK7OaPOqOpGS1+n0H5hxT9AUw9EsSjPW8SVyMJwYRtWs3X3ug==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@babel/helper-plugin-utils\": \"^7.10.4\"\n+      },\n+      \"peerDependencies\": {\n+        \"@babel/core\": \"^7.0.0-0\"\n+      }\n+    },\n+    \"node_modules/@babel/plugin-syntax-object-rest-spread\": {\n+      \"version\": \"7.8.3\",\n+      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-object-rest-spread/-/plugin-syntax-object-rest-spread-7.8.3.tgz\",\n+      \"integrity\": \"sha512-XoqMijGZb9y3y2XskN+P1wUGiVwWZ5JmoDRwx5+3GmEplNyVM2s2Dg8ILFQm8rWM48orGy5YpI5Bl8U1y7ydlA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@babel/helper-plugin-utils\": \"^7.8.0\"\n+      },\n+      \"peerDependencies\": {\n+        \"@babel/core\": \"^7.0.0-0\"\n+      }\n+    },\n+    \"node_modules/@babel/plugin-syntax-optional-catch-binding\": {\n+      \"version\": \"7.8.3\",\n+      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-optional-catch-binding/-/plugin-syntax-optional-catch-binding-7.8.3.tgz\",\n+      \"integrity\": \"sha512-6VPD0Pc1lpTqw0aKoeRTMiB+kWhAoT24PA+ksWSBrFtl5SIRVpZlwN3NNPQjehA2E/91FV3RjLWoVTglWcSV3Q==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@babel/helper-plugin-utils\": \"^7.8.0\"\n+      },\n+      \"peerDependencies\": {\n+        \"@babel/core\": \"^7.0.0-0\"\n+      }\n+    },\n+    \"node_modules/@babel/plugin-syntax-optional-chaining\": {\n+      \"version\": \"7.8.3\",\n+      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-optional-chaining/-/plugin-syntax-optional-chaining-7.8.3.tgz\",\n+      \"integrity\": \"sha512-KoK9ErH1MBlCPxV0VANkXW2/dw4vlbGDrFgz8bmUsBGYkFRcbRwMh6cIJubdPrkxRwuGdtCk0v/wPTKbQgBjkg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@babel/helper-plugin-utils\": \"^7.8.0\"\n+      },\n+      \"peerDependencies\": {\n+        \"@babel/core\": \"^7.0.0-0\"\n+      }\n+    },\n+    \"node_modules/@babel/plugin-syntax-private-property-in-object\": {\n+      \"version\": \"7.14.5\",\n+      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-private-property-in-object/-/plugin-syntax-private-property-in-object-7.14.5.tgz\",\n+      \"integrity\": \"sha512-0wVnp9dxJ72ZUJDV27ZfbSj6iHLoytYZmh3rFcxNnvsJF3ktkzLDZPy/mA17HGsaQT3/DQsWYX1f1QGWkCoVUg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@babel/helper-plugin-utils\": \"^7.14.5\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=6.9.0\"\n+      },\n+      \"peerDependencies\": {\n+        \"@babel/core\": \"^7.0.0-0\"\n+      }\n+    },\n+    \"node_modules/@babel/plugin-syntax-top-level-await\": {\n+      \"version\": \"7.14.5\",\n+      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-top-level-await/-/plugin-syntax-top-level-await-7.14.5.tgz\",\n+      \"integrity\": \"sha512-hx++upLv5U1rgYfwe1xBQUhRmU41NEvpUvrp8jkrSCdvGSnM5/qdRMtylJ6PG5OFkBaHkbTAKTnd3/YyESRHFw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@babel/helper-plugin-utils\": \"^7.14.5\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=6.9.0\"\n+      },\n+      \"peerDependencies\": {\n+        \"@babel/core\": \"^7.0.0-0\"\n+      }\n+    },\n+    \"node_modules/@babel/plugin-syntax-typescript\": {\n+      \"version\": \"7.27.1\",\n+      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-typescript/-/plugin-syntax-typescript-7.27.1.tgz\",\n+      \"integrity\": \"sha512-xfYCBMxveHrRMnAWl1ZlPXOZjzkN82THFvLhQhFXFt81Z5HnN+EtUkZhv/zcKpmT3fzmWZB0ywiBrbC3vogbwQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@babel/helper-plugin-utils\": \"^7.27.1\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=6.9.0\"\n+      },\n+      \"peerDependencies\": {\n+        \"@babel/core\": \"^7.0.0-0\"\n+      }\n+    },\n+    \"node_modules/@babel/template\": {\n+      \"version\": \"7.27.2\",\n+      \"resolved\": \"https://registry.npmjs.org/@babel/template/-/template-7.27.2.tgz\",\n+      \"integrity\": \"sha512-LPDZ85aEJyYSd18/DkjNh4/y1ntkE5KwUHWTiqgRxruuZL2F1yuHligVHLvcHY2vMHXttKFpJn6LwfI7cw7ODw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@babel/code-frame\": \"^7.27.1\",\n+        \"@babel/parser\": \"^7.27.2\",\n+        \"@babel/types\": \"^7.27.1\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=6.9.0\"\n+      }\n+    },\n+    \"node_modules/@babel/traverse\": {\n+      \"version\": \"7.28.0\",\n+      \"resolved\": \"https://registry.npmjs.org/@babel/traverse/-/traverse-7.28.0.tgz\",\n+      \"integrity\": \"sha512-mGe7UK5wWyh0bKRfupsUchrQGqvDbZDbKJw+kcRGSmdHVYrv+ltd0pnpDTVpiTqnaBru9iEvA8pz8W46v0Amwg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@babel/code-frame\": \"^7.27.1\",\n+        \"@babel/generator\": \"^7.28.0\",\n+        \"@babel/helper-globals\": \"^7.28.0\",\n+        \"@babel/parser\": \"^7.28.0\",\n+        \"@babel/template\": \"^7.27.2\",\n+        \"@babel/types\": \"^7.28.0\",\n+        \"debug\": \"^4.3.1\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=6.9.0\"\n+      }\n+    },\n+    \"node_modules/@babel/types\": {\n+      \"version\": \"7.28.1\",\n+      \"resolved\": \"https://registry.npmjs.org/@babel/types/-/types-7.28.1.tgz\",\n+      \"integrity\": \"sha512-x0LvFTekgSX+83TI28Y9wYPUfzrnl2aT5+5QLnO6v7mSJYtEEevuDRN0F0uSHRk1G1IWZC43o00Y0xDDrpBGPQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@babel/helper-string-parser\": \"^7.27.1\",\n+        \"@babel/helper-validator-identifier\": \"^7.27.1\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=6.9.0\"\n+      }\n+    },\n+    \"node_modules/@bcoe/v8-coverage\": {\n+      \"version\": \"0.2.3\",\n+      \"resolved\": \"https://registry.npmjs.org/@bcoe/v8-coverage/-/v8-coverage-0.2.3.tgz\",\n+      \"integrity\": \"sha512-0hYQ8SB4Db5zvZB4axdMHGwEaQjkZzFjQiN9LVYvIFB2nSUHW9tYpxWriPrWDASIxiaXax83REcLxuSdnGPZtw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/@eslint-community/eslint-utils\": {\n+      \"version\": \"4.7.0\",\n+      \"resolved\": \"https://registry.npmjs.org/@eslint-community/eslint-utils/-/eslint-utils-4.7.0.tgz\",\n+      \"integrity\": \"sha512-dyybb3AcajC7uha6CvhdVRJqaKyn7w2YKqKyAN37NKYgZT36w+iRb0Dymmc5qEJ549c/S31cMMSFd75bteCpCw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"eslint-visitor-keys\": \"^3.4.3\"\n+      },\n+      \"engines\": {\n+        \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://opencollective.com/eslint\"\n+      },\n+      \"peerDependencies\": {\n+        \"eslint\": \"^6.0.0 || ^7.0.0 || >=8.0.0\"\n+      }\n+    },\n+    \"node_modules/@eslint-community/regexpp\": {\n+      \"version\": \"4.12.1\",\n+      \"resolved\": \"https://registry.npmjs.org/@eslint-community/regexpp/-/regexpp-4.12.1.tgz\",\n+      \"integrity\": \"sha512-CCZCDJuduB9OUkFkY2IgppNZMi2lBQgD2qzwXkEia16cge2pijY/aXi96CJMquDMn3nJdlPV1A5KrJEXwfLNzQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \"^12.0.0 || ^14.0.0 || >=16.0.0\"\n+      }\n+    },\n+    \"node_modules/@eslint/eslintrc\": {\n+      \"version\": \"2.1.4\",\n+      \"resolved\": \"https://registry.npmjs.org/@eslint/eslintrc/-/eslintrc-2.1.4.tgz\",\n+      \"integrity\": \"sha512-269Z39MS6wVJtsoUl10L60WdkhJVdPG24Q4eZTH3nnF6lpvSShEK3wQjDX9JRWAUPvPh7COouPpU9IrqaZFvtQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"ajv\": \"^6.12.4\",\n+        \"debug\": \"^4.3.2\",\n+        \"espree\": \"^9.6.0\",\n+        \"globals\": \"^13.19.0\",\n+        \"ignore\": \"^5.2.0\",\n+        \"import-fresh\": \"^3.2.1\",\n+        \"js-yaml\": \"^4.1.0\",\n+        \"minimatch\": \"^3.1.2\",\n+        \"strip-json-comments\": \"^3.1.1\"\n+      },\n+      \"engines\": {\n+        \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://opencollective.com/eslint\"\n+      }\n+    },\n+    \"node_modules/@eslint/eslintrc/node_modules/brace-expansion\": {\n+      \"version\": \"1.1.12\",\n+      \"resolved\": \"https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.12.tgz\",\n+      \"integrity\": \"sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"balanced-match\": \"^1.0.0\",\n+        \"concat-map\": \"0.0.1\"\n+      }\n+    },\n+    \"node_modules/@eslint/eslintrc/node_modules/minimatch\": {\n+      \"version\": \"3.1.2\",\n+      \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz\",\n+      \"integrity\": \"sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==\",\n+      \"dev\": true,\n+      \"license\": \"ISC\",\n+      \"dependencies\": {\n+        \"brace-expansion\": \"^1.1.7\"\n+      },\n+      \"engines\": {\n+        \"node\": \"*\"\n+      }\n+    },\n+    \"node_modules/@eslint/js\": {\n+      \"version\": \"8.57.1\",\n+      \"resolved\": \"https://registry.npmjs.org/@eslint/js/-/js-8.57.1.tgz\",\n+      \"integrity\": \"sha512-d9zaMRSTIKDLhctzH12MtXvJKSSUhaHcjV+2Z+GK+EEY7XKpP5yR4x+N3TAcHTcu963nIr+TMcCb4DBCYX1z6Q==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n+      }\n+    },\n+    \"node_modules/@humanwhocodes/config-array\": {\n+      \"version\": \"0.13.0\",\n+      \"resolved\": \"https://registry.npmjs.org/@humanwhocodes/config-array/-/config-array-0.13.0.tgz\",\n+      \"integrity\": \"sha512-DZLEEqFWQFiyK6h5YIeynKx7JlvCYWL0cImfSRXZ9l4Sg2efkFGTuFf6vzXjK1cq6IYkU+Eg/JizXw+TD2vRNw==\",\n+      \"deprecated\": \"Use @eslint/config-array instead\",\n+      \"dev\": true,\n+      \"license\": \"Apache-2.0\",\n+      \"dependencies\": {\n+        \"@humanwhocodes/object-schema\": \"^2.0.3\",\n+        \"debug\": \"^4.3.1\",\n+        \"minimatch\": \"^3.0.5\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=10.10.0\"\n+      }\n+    },\n+    \"node_modules/@humanwhocodes/config-array/node_modules/brace-expansion\": {\n+      \"version\": \"1.1.12\",\n+      \"resolved\": \"https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.12.tgz\",\n+      \"integrity\": \"sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"balanced-match\": \"^1.0.0\",\n+        \"concat-map\": \"0.0.1\"\n+      }\n+    },\n+    \"node_modules/@humanwhocodes/config-array/node_modules/minimatch\": {\n+      \"version\": \"3.1.2\",\n+      \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz\",\n+      \"integrity\": \"sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==\",\n+      \"dev\": true,\n+      \"license\": \"ISC\",\n+      \"dependencies\": {\n+        \"brace-expansion\": \"^1.1.7\"\n+      },\n+      \"engines\": {\n+        \"node\": \"*\"\n+      }\n+    },\n+    \"node_modules/@humanwhocodes/module-importer\": {\n+      \"version\": \"1.0.1\",\n+      \"resolved\": \"https://registry.npmjs.org/@humanwhocodes/module-importer/-/module-importer-1.0.1.tgz\",\n+      \"integrity\": \"sha512-bxveV4V8v5Yb4ncFTT3rPSgZBOpCkjfK0y4oVVVJwIuDVBRMDXrPyXRL988i5ap9m9bnyEEjWfm5WkBmtffLfA==\",\n+      \"dev\": true,\n+      \"license\": \"Apache-2.0\",\n+      \"engines\": {\n+        \"node\": \">=12.22\"\n+      },\n+      \"funding\": {\n+        \"type\": \"github\",\n+        \"url\": \"https://github.com/sponsors/nzakas\"\n+      }\n+    },\n+    \"node_modules/@humanwhocodes/object-schema\": {\n+      \"version\": \"2.0.3\",\n+      \"resolved\": \"https://registry.npmjs.org/@humanwhocodes/object-schema/-/object-schema-2.0.3.tgz\",\n+      \"integrity\": \"sha512-93zYdMES/c1D69yZiKDBj0V24vqNzB/koF26KPaagAfd3P/4gUlh3Dys5ogAK+Exi9QyzlD8x/08Zt7wIKcDcA==\",\n+      \"deprecated\": \"Use @eslint/object-schema instead\",\n+      \"dev\": true,\n+      \"license\": \"BSD-3-Clause\"\n+    },\n+    \"node_modules/@istanbuljs/load-nyc-config\": {\n+      \"version\": \"1.1.0\",\n+      \"resolved\": \"https://registry.npmjs.org/@istanbuljs/load-nyc-config/-/load-nyc-config-1.1.0.tgz\",\n+      \"integrity\": \"sha512-VjeHSlIzpv/NyD3N0YuHfXOPDIixcA1q2ZV98wsMqcYlPmv2n3Yb2lYP9XMElnaFVXg5A7YLTeLu6V84uQDjmQ==\",\n+      \"dev\": true,\n+      \"license\": \"ISC\",\n+      \"dependencies\": {\n+        \"camelcase\": \"^5.3.1\",\n+        \"find-up\": \"^4.1.0\",\n+        \"get-package-type\": \"^0.1.0\",\n+        \"js-yaml\": \"^3.13.1\",\n+        \"resolve-from\": \"^5.0.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      }\n+    },\n+    \"node_modules/@istanbuljs/load-nyc-config/node_modules/argparse\": {\n+      \"version\": \"1.0.10\",\n+      \"resolved\": \"https://registry.npmjs.org/argparse/-/argparse-1.0.10.tgz\",\n+      \"integrity\": \"sha512-o5Roy6tNG4SL/FOkCAN6RzjiakZS25RLYFrcMttJqbdd8BWrnA+fGz57iN5Pb06pvBGvl5gQ0B48dJlslXvoTg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"sprintf-js\": \"~1.0.2\"\n+      }\n+    },\n+    \"node_modules/@istanbuljs/load-nyc-config/node_modules/find-up\": {\n+      \"version\": \"4.1.0\",\n+      \"resolved\": \"https://registry.npmjs.org/find-up/-/find-up-4.1.0.tgz\",\n+      \"integrity\": \"sha512-PpOwAdQ/YlXQ2vj8a3h8IipDuYRi3wceVQQGYWxNINccq40Anw7BlsEXCMbt1Zt+OLA6Fq9suIpIWD0OsnISlw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"locate-path\": \"^5.0.0\",\n+        \"path-exists\": \"^4.0.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      }\n+    },\n+    \"node_modules/@istanbuljs/load-nyc-config/node_modules/js-yaml\": {\n+      \"version\": \"3.14.1\",\n+      \"resolved\": \"https://registry.npmjs.org/js-yaml/-/js-yaml-3.14.1.tgz\",\n+      \"integrity\": \"sha512-okMH7OXXJ7YrN9Ok3/SXrnu4iX9yOk+25nqX4imS2npuvTYDmo/QEZoqwZkYaIDk3jVvBOTOIEgEhaLOynBS9g==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"argparse\": \"^1.0.7\",\n+        \"esprima\": \"^4.0.0\"\n+      },\n+      \"bin\": {\n+        \"js-yaml\": \"bin/js-yaml.js\"\n+      }\n+    },\n+    \"node_modules/@istanbuljs/load-nyc-config/node_modules/locate-path\": {\n+      \"version\": \"5.0.0\",\n+      \"resolved\": \"https://registry.npmjs.org/locate-path/-/locate-path-5.0.0.tgz\",\n+      \"integrity\": \"sha512-t7hw9pI+WvuwNJXwk5zVHpyhIqzg2qTlklJOf0mVxGSbe3Fp2VieZcduNYjaLDoy6p9uGpQEGWG87WpMKlNq8g==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"p-locate\": \"^4.1.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      }\n+    },\n+    \"node_modules/@istanbuljs/load-nyc-config/node_modules/p-limit\": {\n+      \"version\": \"2.3.0\",\n+      \"resolved\": \"https://registry.npmjs.org/p-limit/-/p-limit-2.3.0.tgz\",\n+      \"integrity\": \"sha512-//88mFWSJx8lxCzwdAABTJL2MyWB12+eIY7MDL2SqLmAkeKU9qxRvWuSyTjm3FUmpBEMuFfckAIqEaVGUDxb6w==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"p-try\": \"^2.0.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=6\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/sponsors/sindresorhus\"\n+      }\n+    },\n+    \"node_modules/@istanbuljs/load-nyc-config/node_modules/p-locate\": {\n+      \"version\": \"4.1.0\",\n+      \"resolved\": \"https://registry.npmjs.org/p-locate/-/p-locate-4.1.0.tgz\",\n+      \"integrity\": \"sha512-R79ZZ/0wAxKGu3oYMlz8jy/kbhsNrS7SKZ7PxEHBgJ5+F2mtFW2fK2cOtBh1cHYkQsbzFV7I+EoRKe6Yt0oK7A==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"p-limit\": \"^2.2.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      }\n+    },\n+    \"node_modules/@istanbuljs/load-nyc-config/node_modules/resolve-from\": {\n+      \"version\": \"5.0.0\",\n+      \"resolved\": \"https://registry.npmjs.org/resolve-from/-/resolve-from-5.0.0.tgz\",\n+      \"integrity\": \"sha512-qYg9KP24dD5qka9J47d0aVky0N+b4fTU89LN9iDnjB5waksiC49rvMB0PrUJQGoTmH50XPiqOvAjDfaijGxYZw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      }\n+    },\n+    \"node_modules/@istanbuljs/schema\": {\n+      \"version\": \"0.1.3\",\n+      \"resolved\": \"https://registry.npmjs.org/@istanbuljs/schema/-/schema-0.1.3.tgz\",\n+      \"integrity\": \"sha512-ZXRY4jNvVgSVQ8DL3LTcakaAtXwTVUxE81hslsyD2AtoXW/wVob10HkOJ1X/pAlcI7D+2YoZKg5do8G/w6RYgA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      }\n+    },\n+    \"node_modules/@jest/console\": {\n+      \"version\": \"29.7.0\",\n+      \"resolved\": \"https://registry.npmjs.org/@jest/console/-/console-29.7.0.tgz\",\n+      \"integrity\": \"sha512-5Ni4CU7XHQi32IJ398EEP4RrB8eV09sXP2ROqD4bksHrnTree52PsxvX8tpL8LvTZ3pFzXyPbNQReSN41CAhOg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@jest/types\": \"^29.6.3\",\n+        \"@types/node\": \"*\",\n+        \"chalk\": \"^4.0.0\",\n+        \"jest-message-util\": \"^29.7.0\",\n+        \"jest-util\": \"^29.7.0\",\n+        \"slash\": \"^3.0.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n+      }\n+    },\n+    \"node_modules/@jest/core\": {\n+      \"version\": \"29.7.0\",\n+      \"resolved\": \"https://registry.npmjs.org/@jest/core/-/core-29.7.0.tgz\",\n+      \"integrity\": \"sha512-n7aeXWKMnGtDA48y8TLWJPJmLmmZ642Ceo78cYWEpiD7FzDgmNDV/GCVRorPABdXLJZ/9wzzgZAlHjXjxDHGsg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@jest/console\": \"^29.7.0\",\n+        \"@jest/reporters\": \"^29.7.0\",\n+        \"@jest/test-result\": \"^29.7.0\",\n+        \"@jest/transform\": \"^29.7.0\",\n+        \"@jest/types\": \"^29.6.3\",\n+        \"@types/node\": \"*\",\n+        \"ansi-escapes\": \"^4.2.1\",\n+        \"chalk\": \"^4.0.0\",\n+        \"ci-info\": \"^3.2.0\",\n+        \"exit\": \"^0.1.2\",\n+        \"graceful-fs\": \"^4.2.9\",\n+        \"jest-changed-files\": \"^29.7.0\",\n+        \"jest-config\": \"^29.7.0\",\n+        \"jest-haste-map\": \"^29.7.0\",\n+        \"jest-message-util\": \"^29.7.0\",\n+        \"jest-regex-util\": \"^29.6.3\",\n+        \"jest-resolve\": \"^29.7.0\",\n+        \"jest-resolve-dependencies\": \"^29.7.0\",\n+        \"jest-runner\": \"^29.7.0\",\n+        \"jest-runtime\": \"^29.7.0\",\n+        \"jest-snapshot\": \"^29.7.0\",\n+        \"jest-util\": \"^29.7.0\",\n+        \"jest-validate\": \"^29.7.0\",\n+        \"jest-watcher\": \"^29.7.0\",\n+        \"micromatch\": \"^4.0.4\",\n+        \"pretty-format\": \"^29.7.0\",\n+        \"slash\": \"^3.0.0\",\n+        \"strip-ansi\": \"^6.0.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n+      },\n+      \"peerDependencies\": {\n+        \"node-notifier\": \"^8.0.1 || ^9.0.0 || ^10.0.0\"\n+      },\n+      \"peerDependenciesMeta\": {\n+        \"node-notifier\": {\n+          \"optional\": true\n+        }\n+      }\n+    },\n+    \"node_modules/@jest/environment\": {\n+      \"version\": \"29.7.0\",\n+      \"resolved\": \"https://registry.npmjs.org/@jest/environment/-/environment-29.7.0.tgz\",\n+      \"integrity\": \"sha512-aQIfHDq33ExsN4jP1NWGXhxgQ/wixs60gDiKO+XVMd8Mn0NWPWgc34ZQDTb2jKaUWQ7MuwoitXAsN2XVXNMpAw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@jest/fake-timers\": \"^29.7.0\",\n+        \"@jest/types\": \"^29.6.3\",\n+        \"@types/node\": \"*\",\n+        \"jest-mock\": \"^29.7.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n+      }\n+    },\n+    \"node_modules/@jest/expect\": {\n+      \"version\": \"29.7.0\",\n+      \"resolved\": \"https://registry.npmjs.org/@jest/expect/-/expect-29.7.0.tgz\",\n+      \"integrity\": \"sha512-8uMeAMycttpva3P1lBHB8VciS9V0XAr3GymPpipdyQXbBcuhkLQOSe8E/p92RyAdToS6ZD1tFkX+CkhoECE0dQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"expect\": \"^29.7.0\",\n+        \"jest-snapshot\": \"^29.7.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n+      }\n+    },\n+    \"node_modules/@jest/expect-utils\": {\n+      \"version\": \"29.7.0\",\n+      \"resolved\": \"https://registry.npmjs.org/@jest/expect-utils/-/expect-utils-29.7.0.tgz\",\n+      \"integrity\": \"sha512-GlsNBWiFQFCVi9QVSx7f5AgMeLxe9YCCs5PuP2O2LdjDAA8Jh9eX7lA1Jq/xdXw3Wb3hyvlFNfZIfcRetSzYcA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"jest-get-type\": \"^29.6.3\"\n+      },\n+      \"engines\": {\n+        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n+      }\n+    },\n+    \"node_modules/@jest/fake-timers\": {\n+      \"version\": \"29.7.0\",\n+      \"resolved\": \"https://registry.npmjs.org/@jest/fake-timers/-/fake-timers-29.7.0.tgz\",\n+      \"integrity\": \"sha512-q4DH1Ha4TTFPdxLsqDXK1d3+ioSL7yL5oCMJZgDYm6i+6CygW5E5xVr/D1HdsGxjt1ZWSfUAs9OxSB/BNelWrQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@jest/types\": \"^29.6.3\",\n+        \"@sinonjs/fake-timers\": \"^10.0.2\",\n+        \"@types/node\": \"*\",\n+        \"jest-message-util\": \"^29.7.0\",\n+        \"jest-mock\": \"^29.7.0\",\n+        \"jest-util\": \"^29.7.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n+      }\n+    },\n+    \"node_modules/@jest/globals\": {\n+      \"version\": \"29.7.0\",\n+      \"resolved\": \"https://registry.npmjs.org/@jest/globals/-/globals-29.7.0.tgz\",\n+      \"integrity\": \"sha512-mpiz3dutLbkW2MNFubUGUEVLkTGiqW6yLVTA+JbP6fI6J5iL9Y0Nlg8k95pcF8ctKwCS7WVxteBs29hhfAotzQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@jest/environment\": \"^29.7.0\",\n+        \"@jest/expect\": \"^29.7.0\",\n+        \"@jest/types\": \"^29.6.3\",\n+        \"jest-mock\": \"^29.7.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n+      }\n+    },\n+    \"node_modules/@jest/reporters\": {\n+      \"version\": \"29.7.0\",\n+      \"resolved\": \"https://registry.npmjs.org/@jest/reporters/-/reporters-29.7.0.tgz\",\n+      \"integrity\": \"sha512-DApq0KJbJOEzAFYjHADNNxAE3KbhxQB1y5Kplb5Waqw6zVbuWatSnMjE5gs8FUgEPmNsnZA3NCWl9NG0ia04Pg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@bcoe/v8-coverage\": \"^0.2.3\",\n+        \"@jest/console\": \"^29.7.0\",\n+        \"@jest/test-result\": \"^29.7.0\",\n+        \"@jest/transform\": \"^29.7.0\",\n+        \"@jest/types\": \"^29.6.3\",\n+        \"@jridgewell/trace-mapping\": \"^0.3.18\",\n+        \"@types/node\": \"*\",\n+        \"chalk\": \"^4.0.0\",\n+        \"collect-v8-coverage\": \"^1.0.0\",\n+        \"exit\": \"^0.1.2\",\n+        \"glob\": \"^7.1.3\",\n+        \"graceful-fs\": \"^4.2.9\",\n+        \"istanbul-lib-coverage\": \"^3.0.0\",\n+        \"istanbul-lib-instrument\": \"^6.0.0\",\n+        \"istanbul-lib-report\": \"^3.0.0\",\n+        \"istanbul-lib-source-maps\": \"^4.0.0\",\n+        \"istanbul-reports\": \"^3.1.3\",\n+        \"jest-message-util\": \"^29.7.0\",\n+        \"jest-util\": \"^29.7.0\",\n+        \"jest-worker\": \"^29.7.0\",\n+        \"slash\": \"^3.0.0\",\n+        \"string-length\": \"^4.0.1\",\n+        \"strip-ansi\": \"^6.0.0\",\n+        \"v8-to-istanbul\": \"^9.0.1\"\n+      },\n+      \"engines\": {\n+        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n+      },\n+      \"peerDependencies\": {\n+        \"node-notifier\": \"^8.0.1 || ^9.0.0 || ^10.0.0\"\n+      },\n+      \"peerDependenciesMeta\": {\n+        \"node-notifier\": {\n+          \"optional\": true\n+        }\n+      }\n+    },\n+    \"node_modules/@jest/schemas\": {\n+      \"version\": \"29.6.3\",\n+      \"resolved\": \"https://registry.npmjs.org/@jest/schemas/-/schemas-29.6.3.tgz\",\n+      \"integrity\": \"sha512-mo5j5X+jIZmJQveBKeS/clAueipV7KgiX1vMgCxam1RNYiqE1w62n0/tJJnHtjW8ZHcQco5gY85jA3mi0L+nSA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@sinclair/typebox\": \"^0.27.8\"\n+      },\n+      \"engines\": {\n+        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n+      }\n+    },\n+    \"node_modules/@jest/source-map\": {\n+      \"version\": \"29.6.3\",\n+      \"resolved\": \"https://registry.npmjs.org/@jest/source-map/-/source-map-29.6.3.tgz\",\n+      \"integrity\": \"sha512-MHjT95QuipcPrpLM+8JMSzFx6eHp5Bm+4XeFDJlwsvVBjmKNiIAvasGK2fxz2WbGRlnvqehFbh07MMa7n3YJnw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@jridgewell/trace-mapping\": \"^0.3.18\",\n+        \"callsites\": \"^3.0.0\",\n+        \"graceful-fs\": \"^4.2.9\"\n+      },\n+      \"engines\": {\n+        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n+      }\n+    },\n+    \"node_modules/@jest/test-result\": {\n+      \"version\": \"29.7.0\",\n+      \"resolved\": \"https://registry.npmjs.org/@jest/test-result/-/test-result-29.7.0.tgz\",\n+      \"integrity\": \"sha512-Fdx+tv6x1zlkJPcWXmMDAG2HBnaR9XPSd5aDWQVsfrZmLVT3lU1cwyxLgRmXR9yrq4NBoEm9BMsfgFzTQAbJYA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@jest/console\": \"^29.7.0\",\n+        \"@jest/types\": \"^29.6.3\",\n+        \"@types/istanbul-lib-coverage\": \"^2.0.0\",\n+        \"collect-v8-coverage\": \"^1.0.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n+      }\n+    },\n+    \"node_modules/@jest/test-sequencer\": {\n+      \"version\": \"29.7.0\",\n+      \"resolved\": \"https://registry.npmjs.org/@jest/test-sequencer/-/test-sequencer-29.7.0.tgz\",\n+      \"integrity\": \"sha512-GQwJ5WZVrKnOJuiYiAF52UNUJXgTZx1NHjFSEB0qEMmSZKAkdMoIzw/Cj6x6NF4AvV23AUqDpFzQkN/eYCYTxw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@jest/test-result\": \"^29.7.0\",\n+        \"graceful-fs\": \"^4.2.9\",\n+        \"jest-haste-map\": \"^29.7.0\",\n+        \"slash\": \"^3.0.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n+      }\n+    },\n+    \"node_modules/@jest/transform\": {\n+      \"version\": \"29.7.0\",\n+      \"resolved\": \"https://registry.npmjs.org/@jest/transform/-/transform-29.7.0.tgz\",\n+      \"integrity\": \"sha512-ok/BTPFzFKVMwO5eOHRrvnBVHdRy9IrsrW1GpMaQ9MCnilNLXQKmAX8s1YXDFaai9xJpac2ySzV0YeRRECr2Vw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@babel/core\": \"^7.11.6\",\n+        \"@jest/types\": \"^29.6.3\",\n+        \"@jridgewell/trace-mapping\": \"^0.3.18\",\n+        \"babel-plugin-istanbul\": \"^6.1.1\",\n+        \"chalk\": \"^4.0.0\",\n+        \"convert-source-map\": \"^2.0.0\",\n+        \"fast-json-stable-stringify\": \"^2.1.0\",\n+        \"graceful-fs\": \"^4.2.9\",\n+        \"jest-haste-map\": \"^29.7.0\",\n+        \"jest-regex-util\": \"^29.6.3\",\n+        \"jest-util\": \"^29.7.0\",\n+        \"micromatch\": \"^4.0.4\",\n+        \"pirates\": \"^4.0.4\",\n+        \"slash\": \"^3.0.0\",\n+        \"write-file-atomic\": \"^4.0.2\"\n+      },\n+      \"engines\": {\n+        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n+      }\n+    },\n+    \"node_modules/@jest/types\": {\n+      \"version\": \"29.6.3\",\n+      \"resolved\": \"https://registry.npmjs.org/@jest/types/-/types-29.6.3.tgz\",\n+      \"integrity\": \"sha512-u3UPsIilWKOM3F9CXtrG8LEJmNxwoCQC/XVj4IKYXvvpx7QIi/Kg1LI5uDmDpKlac62NUtX7eLjRh+jVZcLOzw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@jest/schemas\": \"^29.6.3\",\n+        \"@types/istanbul-lib-coverage\": \"^2.0.0\",\n+        \"@types/istanbul-reports\": \"^3.0.0\",\n+        \"@types/node\": \"*\",\n+        \"@types/yargs\": \"^17.0.8\",\n+        \"chalk\": \"^4.0.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n+      }\n+    },\n+    \"node_modules/@jridgewell/gen-mapping\": {\n+      \"version\": \"0.3.12\",\n+      \"resolved\": \"https://registry.npmjs.org/@jridgewell/gen-mapping/-/gen-mapping-0.3.12.tgz\",\n+      \"integrity\": \"sha512-OuLGC46TjB5BbN1dH8JULVVZY4WTdkF7tV9Ys6wLL1rubZnCMstOhNHueU5bLCrnRuDhKPDM4g6sw4Bel5Gzqg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@jridgewell/sourcemap-codec\": \"^1.5.0\",\n+        \"@jridgewell/trace-mapping\": \"^0.3.24\"\n+      }\n+    },\n+    \"node_modules/@jridgewell/resolve-uri\": {\n+      \"version\": \"3.1.2\",\n+      \"resolved\": \"https://registry.npmjs.org/@jridgewell/resolve-uri/-/resolve-uri-3.1.2.tgz\",\n+      \"integrity\": \"sha512-bRISgCIjP20/tbWSPWMEi54QVPRZExkuD9lJL+UIxUKtwVJA8wW1Trb1jMs1RFXo1CBTNZ/5hpC9QvmKWdopKw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=6.0.0\"\n+      }\n+    },\n+    \"node_modules/@jridgewell/sourcemap-codec\": {\n+      \"version\": \"1.5.4\",\n+      \"resolved\": \"https://registry.npmjs.org/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.5.4.tgz\",\n+      \"integrity\": \"sha512-VT2+G1VQs/9oz078bLrYbecdZKs912zQlkelYpuf+SXF+QvZDYJlbx/LSx+meSAwdDFnF8FVXW92AVjjkVmgFw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/@jridgewell/trace-mapping\": {\n+      \"version\": \"0.3.29\",\n+      \"resolved\": \"https://registry.npmjs.org/@jridgewell/trace-mapping/-/trace-mapping-0.3.29.tgz\",\n+      \"integrity\": \"sha512-uw6guiW/gcAGPDhLmd77/6lW8QLeiV5RUTsAX46Db6oLhGaVj4lhnPwb184s1bkc8kdVg/+h988dro8GRDpmYQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@jridgewell/resolve-uri\": \"^3.1.0\",\n+        \"@jridgewell/sourcemap-codec\": \"^1.4.14\"\n+      }\n+    },\n+    \"node_modules/@nodelib/fs.scandir\": {\n+      \"version\": \"2.1.5\",\n+      \"resolved\": \"https://registry.npmjs.org/@nodelib/fs.scandir/-/fs.scandir-2.1.5.tgz\",\n+      \"integrity\": \"sha512-vq24Bq3ym5HEQm2NKCr3yXDwjc7vTsEThRDnkp2DK9p1uqLR+DHurm/NOTo0KG7HYHU7eppKZj3MyqYuMBf62g==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@nodelib/fs.stat\": \"2.0.5\",\n+        \"run-parallel\": \"^1.1.9\"\n+      },\n+      \"engines\": {\n+        \"node\": \">= 8\"\n+      }\n+    },\n+    \"node_modules/@nodelib/fs.stat\": {\n+      \"version\": \"2.0.5\",\n+      \"resolved\": \"https://registry.npmjs.org/@nodelib/fs.stat/-/fs.stat-2.0.5.tgz\",\n+      \"integrity\": \"sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">= 8\"\n+      }\n+    },\n+    \"node_modules/@nodelib/fs.walk\": {\n+      \"version\": \"1.2.8\",\n+      \"resolved\": \"https://registry.npmjs.org/@nodelib/fs.walk/-/fs.walk-1.2.8.tgz\",\n+      \"integrity\": \"sha512-oGB+UxlgWcgQkgwo8GcEGwemoTFt3FIO9ababBmaGwXIoBKZ+GTy0pP185beGg7Llih/NSHSV2XAs1lnznocSg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@nodelib/fs.scandir\": \"2.1.5\",\n+        \"fastq\": \"^1.6.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">= 8\"\n+      }\n+    },\n+    \"node_modules/@orgata/framework\": {\n+      \"resolved\": \"../packages/orgata-framework\",\n+      \"link\": true\n+    },\n+    \"node_modules/@sinclair/typebox\": {\n+      \"version\": \"0.27.8\",\n+      \"resolved\": \"https://registry.npmjs.org/@sinclair/typebox/-/typebox-0.27.8.tgz\",\n+      \"integrity\": \"sha512-+Fj43pSMwJs4KRrH/938Uf+uAELIgVBmQzg/q1YG10djyfA3TnrU8N8XzqCh/okZdszqBQTZf96idMfE5lnwTA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/@sinonjs/commons\": {\n+      \"version\": \"3.0.1\",\n+      \"resolved\": \"https://registry.npmjs.org/@sinonjs/commons/-/commons-3.0.1.tgz\",\n+      \"integrity\": \"sha512-K3mCHKQ9sVh8o1C9cxkwxaOmXoAMlDxC1mYyHrjqOWEcBjYr76t96zL2zlj5dUGZ3HSw240X1qgH3Mjf1yJWpQ==\",\n+      \"dev\": true,\n+      \"license\": \"BSD-3-Clause\",\n+      \"dependencies\": {\n+        \"type-detect\": \"4.0.8\"\n+      }\n+    },\n+    \"node_modules/@sinonjs/fake-timers\": {\n+      \"version\": \"10.3.0\",\n+      \"resolved\": \"https://registry.npmjs.org/@sinonjs/fake-timers/-/fake-timers-10.3.0.tgz\",\n+      \"integrity\": \"sha512-V4BG07kuYSUkTCSBHG8G8TNhM+F19jXFWnQtzj+we8DrkpSBCee9Z3Ms8yiGer/dlmhe35/Xdgyo3/0rQKg7YA==\",\n+      \"dev\": true,\n+      \"license\": \"BSD-3-Clause\",\n+      \"dependencies\": {\n+        \"@sinonjs/commons\": \"^3.0.0\"\n+      }\n+    },\n+    \"node_modules/@types/babel__core\": {\n+      \"version\": \"7.20.5\",\n+      \"resolved\": \"https://registry.npmjs.org/@types/babel__core/-/babel__core-7.20.5.tgz\",\n+      \"integrity\": \"sha512-qoQprZvz5wQFJwMDqeseRXWv3rqMvhgpbXFfVyWhbx9X47POIA6i/+dXefEmZKoAgOaTdaIgNSMqMIU61yRyzA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@babel/parser\": \"^7.20.7\",\n+        \"@babel/types\": \"^7.20.7\",\n+        \"@types/babel__generator\": \"*\",\n+        \"@types/babel__template\": \"*\",\n+        \"@types/babel__traverse\": \"*\"\n+      }\n+    },\n+    \"node_modules/@types/babel__generator\": {\n+      \"version\": \"7.27.0\",\n+      \"resolved\": \"https://registry.npmjs.org/@types/babel__generator/-/babel__generator-7.27.0.tgz\",\n+      \"integrity\": \"sha512-ufFd2Xi92OAVPYsy+P4n7/U7e68fex0+Ee8gSG9KX7eo084CWiQ4sdxktvdl0bOPupXtVJPY19zk6EwWqUQ8lg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@babel/types\": \"^7.0.0\"\n+      }\n+    },\n+    \"node_modules/@types/babel__template\": {\n+      \"version\": \"7.4.4\",\n+      \"resolved\": \"https://registry.npmjs.org/@types/babel__template/-/babel__template-7.4.4.tgz\",\n+      \"integrity\": \"sha512-h/NUaSyG5EyxBIp8YRxo4RMe2/qQgvyowRwVMzhYhBCONbW8PUsg4lkFMrhgZhUe5z3L3MiLDuvyJ/CaPa2A8A==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@babel/parser\": \"^7.1.0\",\n+        \"@babel/types\": \"^7.0.0\"\n+      }\n+    },\n+    \"node_modules/@types/babel__traverse\": {\n+      \"version\": \"7.20.7\",\n+      \"resolved\": \"https://registry.npmjs.org/@types/babel__traverse/-/babel__traverse-7.20.7.tgz\",\n+      \"integrity\": \"sha512-dkO5fhS7+/oos4ciWxyEyjWe48zmG6wbCheo/G2ZnHx4fs3EU6YC6UM8rk56gAjNJ9P3MTH2jo5jb92/K6wbng==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@babel/types\": \"^7.20.7\"\n+      }\n+    },\n+    \"node_modules/@types/graceful-fs\": {\n+      \"version\": \"4.1.9\",\n+      \"resolved\": \"https://registry.npmjs.org/@types/graceful-fs/-/graceful-fs-4.1.9.tgz\",\n+      \"integrity\": \"sha512-olP3sd1qOEe5dXTSaFvQG+02VdRXcdytWLAZsAq1PecU8uqQAhkrnbli7DagjtXKW/Bl7YJbUsa8MPcuc8LHEQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@types/node\": \"*\"\n+      }\n+    },\n+    \"node_modules/@types/istanbul-lib-coverage\": {\n+      \"version\": \"2.0.6\",\n+      \"resolved\": \"https://registry.npmjs.org/@types/istanbul-lib-coverage/-/istanbul-lib-coverage-2.0.6.tgz\",\n+      \"integrity\": \"sha512-2QF/t/auWm0lsy8XtKVPG19v3sSOQlJe/YHZgfjb/KBBHOGSV+J2q/S671rcq9uTBrLAXmZpqJiaQbMT+zNU1w==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/@types/istanbul-lib-report\": {\n+      \"version\": \"3.0.3\",\n+      \"resolved\": \"https://registry.npmjs.org/@types/istanbul-lib-report/-/istanbul-lib-report-3.0.3.tgz\",\n+      \"integrity\": \"sha512-NQn7AHQnk/RSLOxrBbGyJM/aVQ+pjj5HCgasFxc0K/KhoATfQ/47AyUl15I2yBUpihjmas+a+VJBOqecrFH+uA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@types/istanbul-lib-coverage\": \"*\"\n+      }\n+    },\n+    \"node_modules/@types/istanbul-reports\": {\n+      \"version\": \"3.0.4\",\n+      \"resolved\": \"https://registry.npmjs.org/@types/istanbul-reports/-/istanbul-reports-3.0.4.tgz\",\n+      \"integrity\": \"sha512-pk2B1NWalF9toCRu6gjBzR69syFjP4Od8WRAX+0mmf9lAjCRicLOWc+ZrxZHx/0XRjotgkF9t6iaMJ+aXcOdZQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@types/istanbul-lib-report\": \"*\"\n+      }\n+    },\n+    \"node_modules/@types/jest\": {\n+      \"version\": \"29.5.14\",\n+      \"resolved\": \"https://registry.npmjs.org/@types/jest/-/jest-29.5.14.tgz\",\n+      \"integrity\": \"sha512-ZN+4sdnLUbo8EVvVc2ao0GFW6oVrQRPn4K2lglySj7APvSrgzxHiNNK99us4WDMi57xxA2yggblIAMNhXOotLQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"expect\": \"^29.0.0\",\n+        \"pretty-format\": \"^29.0.0\"\n+      }\n+    },\n+    \"node_modules/@types/json-schema\": {\n+      \"version\": \"7.0.15\",\n+      \"resolved\": \"https://registry.npmjs.org/@types/json-schema/-/json-schema-7.0.15.tgz\",\n+      \"integrity\": \"sha512-5+fP8P8MFNC+AyZCDxrB2pkZFPGzqQWUzpSeuuVLvm8VMcorNYavBqoFcxK8bQz4Qsbn4oUEEem4wDLfcysGHA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/@types/node\": {\n+      \"version\": \"20.19.9\",\n+      \"resolved\": \"https://registry.npmjs.org/@types/node/-/node-20.19.9.tgz\",\n+      \"integrity\": \"sha512-cuVNgarYWZqxRJDQHEB58GEONhOK79QVR/qYx4S7kcUObQvUwvFnYxJuuHUKm2aieN9X3yZB4LZsuYNU1Qphsw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"undici-types\": \"~6.21.0\"\n+      }\n+    },\n+    \"node_modules/@types/semver\": {\n+      \"version\": \"7.7.0\",\n+      \"resolved\": \"https://registry.npmjs.org/@types/semver/-/semver-7.7.0.tgz\",\n+      \"integrity\": \"sha512-k107IF4+Xr7UHjwDc7Cfd6PRQfbdkiRabXGRjo07b4WyPahFBZCZ1sE+BNxYIJPPg73UkfOsVOLwqVc/6ETrIA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/@types/stack-utils\": {\n+      \"version\": \"2.0.3\",\n+      \"resolved\": \"https://registry.npmjs.org/@types/stack-utils/-/stack-utils-2.0.3.tgz\",\n+      \"integrity\": \"sha512-9aEbYZ3TbYMznPdcdr3SmIrLXwC/AKZXQeCf9Pgao5CKb8CyHuEX5jzWPTkvregvhRJHcpRO6BFoGW9ycaOkYw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/@types/yargs\": {\n+      \"version\": \"17.0.33\",\n+      \"resolved\": \"https://registry.npmjs.org/@types/yargs/-/yargs-17.0.33.tgz\",\n+      \"integrity\": \"sha512-WpxBCKWPLr4xSsHgz511rFJAM+wS28w2zEO1QDNY5zM/S8ok70NNfztH0xwhqKyaK0OHCbN98LDAZuy1ctxDkA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@types/yargs-parser\": \"*\"\n+      }\n+    },\n+    \"node_modules/@types/yargs-parser\": {\n+      \"version\": \"21.0.3\",\n+      \"resolved\": \"https://registry.npmjs.org/@types/yargs-parser/-/yargs-parser-21.0.3.tgz\",\n+      \"integrity\": \"sha512-I4q9QU9MQv4oEOz4tAHJtNz1cwuLxn2F3xcc2iV5WdqLPpUnj30aUuxt1mAxYTG+oe8CZMV/+6rU4S4gRDzqtQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/@typescript-eslint/eslint-plugin\": {\n+      \"version\": \"6.21.0\",\n+      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/eslint-plugin/-/eslint-plugin-6.21.0.tgz\",\n+      \"integrity\": \"sha512-oy9+hTPCUFpngkEZUSzbf9MxI65wbKFoQYsgPdILTfbUldp5ovUuphZVe4i30emU9M/kP+T64Di0mxl7dSw3MA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@eslint-community/regexpp\": \"^4.5.1\",\n+        \"@typescript-eslint/scope-manager\": \"6.21.0\",\n+        \"@typescript-eslint/type-utils\": \"6.21.0\",\n+        \"@typescript-eslint/utils\": \"6.21.0\",\n+        \"@typescript-eslint/visitor-keys\": \"6.21.0\",\n+        \"debug\": \"^4.3.4\",\n+        \"graphemer\": \"^1.4.0\",\n+        \"ignore\": \"^5.2.4\",\n+        \"natural-compare\": \"^1.4.0\",\n+        \"semver\": \"^7.5.4\",\n+        \"ts-api-utils\": \"^1.0.1\"\n+      },\n+      \"engines\": {\n+        \"node\": \"^16.0.0 || >=18.0.0\"\n+      },\n+      \"funding\": {\n+        \"type\": \"opencollective\",\n+        \"url\": \"https://opencollective.com/typescript-eslint\"\n+      },\n+      \"peerDependencies\": {\n+        \"@typescript-eslint/parser\": \"^6.0.0 || ^6.0.0-alpha\",\n+        \"eslint\": \"^7.0.0 || ^8.0.0\"\n+      },\n+      \"peerDependenciesMeta\": {\n+        \"typescript\": {\n+          \"optional\": true\n+        }\n+      }\n+    },\n+    \"node_modules/@typescript-eslint/parser\": {\n+      \"version\": \"6.21.0\",\n+      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/parser/-/parser-6.21.0.tgz\",\n+      \"integrity\": \"sha512-tbsV1jPne5CkFQCgPBcDOt30ItF7aJoZL997JSF7MhGQqOeT3svWRYxiqlfA5RUdlHN6Fi+EI9bxqbdyAUZjYQ==\",\n+      \"dev\": true,\n+      \"license\": \"BSD-2-Clause\",\n+      \"dependencies\": {\n+        \"@typescript-eslint/scope-manager\": \"6.21.0\",\n+        \"@typescript-eslint/types\": \"6.21.0\",\n+        \"@typescript-eslint/typescript-estree\": \"6.21.0\",\n+        \"@typescript-eslint/visitor-keys\": \"6.21.0\",\n+        \"debug\": \"^4.3.4\"\n+      },\n+      \"engines\": {\n+        \"node\": \"^16.0.0 || >=18.0.0\"\n+      },\n+      \"funding\": {\n+        \"type\": \"opencollective\",\n+        \"url\": \"https://opencollective.com/typescript-eslint\"\n+      },\n+      \"peerDependencies\": {\n+        \"eslint\": \"^7.0.0 || ^8.0.0\"\n+      },\n+      \"peerDependenciesMeta\": {\n+        \"typescript\": {\n+          \"optional\": true\n+        }\n+      }\n+    },\n+    \"node_modules/@typescript-eslint/scope-manager\": {\n+      \"version\": \"6.21.0\",\n+      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/scope-manager/-/scope-manager-6.21.0.tgz\",\n+      \"integrity\": \"sha512-OwLUIWZJry80O99zvqXVEioyniJMa+d2GrqpUTqi5/v5D5rOrppJVBPa0yKCblcigC0/aYAzxxqQ1B+DS2RYsg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@typescript-eslint/types\": \"6.21.0\",\n+        \"@typescript-eslint/visitor-keys\": \"6.21.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \"^16.0.0 || >=18.0.0\"\n+      },\n+      \"funding\": {\n+        \"type\": \"opencollective\",\n+        \"url\": \"https://opencollective.com/typescript-eslint\"\n+      }\n+    },\n+    \"node_modules/@typescript-eslint/type-utils\": {\n+      \"version\": \"6.21.0\",\n+      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/type-utils/-/type-utils-6.21.0.tgz\",\n+      \"integrity\": \"sha512-rZQI7wHfao8qMX3Rd3xqeYSMCL3SoiSQLBATSiVKARdFGCYSRvmViieZjqc58jKgs8Y8i9YvVVhRbHSTA4VBag==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@typescript-eslint/typescript-estree\": \"6.21.0\",\n+        \"@typescript-eslint/utils\": \"6.21.0\",\n+        \"debug\": \"^4.3.4\",\n+        \"ts-api-utils\": \"^1.0.1\"\n+      },\n+      \"engines\": {\n+        \"node\": \"^16.0.0 || >=18.0.0\"\n+      },\n+      \"funding\": {\n+        \"type\": \"opencollective\",\n+        \"url\": \"https://opencollective.com/typescript-eslint\"\n+      },\n+      \"peerDependencies\": {\n+        \"eslint\": \"^7.0.0 || ^8.0.0\"\n+      },\n+      \"peerDependenciesMeta\": {\n+        \"typescript\": {\n+          \"optional\": true\n+        }\n+      }\n+    },\n+    \"node_modules/@typescript-eslint/types\": {\n+      \"version\": \"6.21.0\",\n+      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/types/-/types-6.21.0.tgz\",\n+      \"integrity\": \"sha512-1kFmZ1rOm5epu9NZEZm1kckCDGj5UJEf7P1kliH4LKu/RkwpsfqqGmY2OOcUs18lSlQBKLDYBOGxRVtrMN5lpg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \"^16.0.0 || >=18.0.0\"\n+      },\n+      \"funding\": {\n+        \"type\": \"opencollective\",\n+        \"url\": \"https://opencollective.com/typescript-eslint\"\n+      }\n+    },\n+    \"node_modules/@typescript-eslint/typescript-estree\": {\n+      \"version\": \"6.21.0\",\n+      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/typescript-estree/-/typescript-estree-6.21.0.tgz\",\n+      \"integrity\": \"sha512-6npJTkZcO+y2/kr+z0hc4HwNfrrP4kNYh57ek7yCNlrBjWQ1Y0OS7jiZTkgumrvkX5HkEKXFZkkdFNkaW2wmUQ==\",\n+      \"dev\": true,\n+      \"license\": \"BSD-2-Clause\",\n+      \"dependencies\": {\n+        \"@typescript-eslint/types\": \"6.21.0\",\n+        \"@typescript-eslint/visitor-keys\": \"6.21.0\",\n+        \"debug\": \"^4.3.4\",\n+        \"globby\": \"^11.1.0\",\n+        \"is-glob\": \"^4.0.3\",\n+        \"minimatch\": \"9.0.3\",\n+        \"semver\": \"^7.5.4\",\n+        \"ts-api-utils\": \"^1.0.1\"\n+      },\n+      \"engines\": {\n+        \"node\": \"^16.0.0 || >=18.0.0\"\n+      },\n+      \"funding\": {\n+        \"type\": \"opencollective\",\n+        \"url\": \"https://opencollective.com/typescript-eslint\"\n+      },\n+      \"peerDependenciesMeta\": {\n+        \"typescript\": {\n+          \"optional\": true\n+        }\n+      }\n+    },\n+    \"node_modules/@typescript-eslint/utils\": {\n+      \"version\": \"6.21.0\",\n+      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/utils/-/utils-6.21.0.tgz\",\n+      \"integrity\": \"sha512-NfWVaC8HP9T8cbKQxHcsJBY5YE1O33+jpMwN45qzWWaPDZgLIbo12toGMWnmhvCpd3sIxkpDw3Wv1B3dYrbDQQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@eslint-community/eslint-utils\": \"^4.4.0\",\n+        \"@types/json-schema\": \"^7.0.12\",\n+        \"@types/semver\": \"^7.5.0\",\n+        \"@typescript-eslint/scope-manager\": \"6.21.0\",\n+        \"@typescript-eslint/types\": \"6.21.0\",\n+        \"@typescript-eslint/typescript-estree\": \"6.21.0\",\n+        \"semver\": \"^7.5.4\"\n+      },\n+      \"engines\": {\n+        \"node\": \"^16.0.0 || >=18.0.0\"\n+      },\n+      \"funding\": {\n+        \"type\": \"opencollective\",\n+        \"url\": \"https://opencollective.com/typescript-eslint\"\n+      },\n+      \"peerDependencies\": {\n+        \"eslint\": \"^7.0.0 || ^8.0.0\"\n+      }\n+    },\n+    \"node_modules/@typescript-eslint/visitor-keys\": {\n+      \"version\": \"6.21.0\",\n+      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/visitor-keys/-/visitor-keys-6.21.0.tgz\",\n+      \"integrity\": \"sha512-JJtkDduxLi9bivAB+cYOVMtbkqdPOhZ+ZI5LC47MIRrDV4Yn2o+ZnW10Nkmr28xRpSpdJ6Sm42Hjf2+REYXm0A==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@typescript-eslint/types\": \"6.21.0\",\n+        \"eslint-visitor-keys\": \"^3.4.1\"\n+      },\n+      \"engines\": {\n+        \"node\": \"^16.0.0 || >=18.0.0\"\n+      },\n+      \"funding\": {\n+        \"type\": \"opencollective\",\n+        \"url\": \"https://opencollective.com/typescript-eslint\"\n+      }\n+    },\n+    \"node_modules/@ungap/structured-clone\": {\n+      \"version\": \"1.3.0\",\n+      \"resolved\": \"https://registry.npmjs.org/@ungap/structured-clone/-/structured-clone-1.3.0.tgz\",\n+      \"integrity\": \"sha512-WmoN8qaIAo7WTYWbAZuG8PYEhn5fkz7dZrqTBZ7dtt//lL2Gwms1IcnQ5yHqjDfX8Ft5j4YzDM23f87zBfDe9g==\",\n+      \"dev\": true,\n+      \"license\": \"ISC\"\n+    },\n+    \"node_modules/acorn\": {\n+      \"version\": \"8.15.0\",\n+      \"resolved\": \"https://registry.npmjs.org/acorn/-/acorn-8.15.0.tgz\",\n+      \"integrity\": \"sha512-NZyJarBfL7nWwIq+FDL6Zp/yHEhePMNnnJ0y3qfieCrmNvYct8uvtiV41UvlSe6apAfk0fY1FbWx+NwfmpvtTg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"bin\": {\n+        \"acorn\": \"bin/acorn\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=0.4.0\"\n+      }\n+    },\n+    \"node_modules/acorn-jsx\": {\n+      \"version\": \"5.3.2\",\n+      \"resolved\": \"https://registry.npmjs.org/acorn-jsx/-/acorn-jsx-5.3.2.tgz\",\n+      \"integrity\": \"sha512-rq9s+JNhf0IChjtDXxllJ7g41oZk5SlXtp0LHwyA5cejwn7vKmKp4pPri6YEePv2PU65sAsegbXtIinmDFDXgQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"peerDependencies\": {\n+        \"acorn\": \"^6.0.0 || ^7.0.0 || ^8.0.0\"\n+      }\n+    },\n+    \"node_modules/ajv\": {\n+      \"version\": \"6.12.6\",\n+      \"resolved\": \"https://registry.npmjs.org/ajv/-/ajv-6.12.6.tgz\",\n+      \"integrity\": \"sha512-j3fVLgvTo527anyYyJOGTYJbG+vnnQYvE0m5mmkc1TK+nxAppkCLMIL0aZ4dblVCNoGShhm+kzE4ZUykBoMg4g==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"fast-deep-equal\": \"^3.1.1\",\n+        \"fast-json-stable-stringify\": \"^2.0.0\",\n+        \"json-schema-traverse\": \"^0.4.1\",\n+        \"uri-js\": \"^4.2.2\"\n+      },\n+      \"funding\": {\n+        \"type\": \"github\",\n+        \"url\": \"https://github.com/sponsors/epoberezkin\"\n+      }\n+    },\n+    \"node_modules/ansi-escapes\": {\n+      \"version\": \"4.3.2\",\n+      \"resolved\": \"https://registry.npmjs.org/ansi-escapes/-/ansi-escapes-4.3.2.tgz\",\n+      \"integrity\": \"sha512-gKXj5ALrKWQLsYG9jlTRmR/xKluxHV+Z9QEwNIgCfM1/uwPMCuzVVnh5mwTd+OuBZcwSIMbqssNWRm1lE51QaQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"type-fest\": \"^0.21.3\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/sponsors/sindresorhus\"\n+      }\n+    },\n+    \"node_modules/ansi-escapes/node_modules/type-fest\": {\n+      \"version\": \"0.21.3\",\n+      \"resolved\": \"https://registry.npmjs.org/type-fest/-/type-fest-0.21.3.tgz\",\n+      \"integrity\": \"sha512-t0rzBq87m3fVcduHDUFhKmyyX+9eo6WQjZvf51Ea/M0Q7+T374Jp1aUiyUl0GKxp8M/OETVHSDvmkyPgvX+X2w==\",\n+      \"dev\": true,\n+      \"license\": \"(MIT OR CC0-1.0)\",\n+      \"engines\": {\n+        \"node\": \">=10\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/sponsors/sindresorhus\"\n+      }\n+    },\n+    \"node_modules/ansi-regex\": {\n+      \"version\": \"5.0.1\",\n+      \"resolved\": \"https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz\",\n+      \"integrity\": \"sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      }\n+    },\n+    \"node_modules/ansi-styles\": {\n+      \"version\": \"4.3.0\",\n+      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz\",\n+      \"integrity\": \"sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"color-convert\": \"^2.0.1\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/chalk/ansi-styles?sponsor=1\"\n+      }\n+    },\n+    \"node_modules/anymatch\": {\n+      \"version\": \"3.1.3\",\n+      \"resolved\": \"https://registry.npmjs.org/anymatch/-/anymatch-3.1.3.tgz\",\n+      \"integrity\": \"sha512-KMReFUr0B4t+D+OBkjR3KYqvocp2XaSzO55UcB6mgQMd3KbcE+mWTyvVV7D/zsdEbNnV6acZUutkiHQXvTr1Rw==\",\n+      \"dev\": true,\n+      \"license\": \"ISC\",\n+      \"dependencies\": {\n+        \"normalize-path\": \"^3.0.0\",\n+        \"picomatch\": \"^2.0.4\"\n+      },\n+      \"engines\": {\n+        \"node\": \">= 8\"\n+      }\n+    },\n+    \"node_modules/argparse\": {\n+      \"version\": \"2.0.1\",\n+      \"resolved\": \"https://registry.npmjs.org/argparse/-/argparse-2.0.1.tgz\",\n+      \"integrity\": \"sha512-8+9WqebbFzpX9OR+Wa6O29asIogeRMzcGtAINdpMHHyAg10f05aSFVBbcEqGf/PXw1EjAZ+q2/bEBg3DvurK3Q==\",\n+      \"dev\": true,\n+      \"license\": \"Python-2.0\"\n+    },\n+    \"node_modules/array-union\": {\n+      \"version\": \"2.1.0\",\n+      \"resolved\": \"https://registry.npmjs.org/array-union/-/array-union-2.1.0.tgz\",\n+      \"integrity\": \"sha512-HGyxoOTYUyCM6stUe6EJgnd4EoewAI7zMdfqO+kGjnlZmBDz/cR5pf8r/cR4Wq60sL/p0IkcjUEEPwS3GFrIyw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      }\n+    },\n+    \"node_modules/async\": {\n+      \"version\": \"3.2.6\",\n+      \"resolved\": \"https://registry.npmjs.org/async/-/async-3.2.6.tgz\",\n+      \"integrity\": \"sha512-htCUDlxyyCLMgaM3xXg0C0LW2xqfuQ6p05pCEIsXuyQ+a1koYKTuBMzRNwmybfLgvJDMd0r1LTn4+E0Ti6C2AA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/babel-jest\": {\n+      \"version\": \"29.7.0\",\n+      \"resolved\": \"https://registry.npmjs.org/babel-jest/-/babel-jest-29.7.0.tgz\",\n+      \"integrity\": \"sha512-BrvGY3xZSwEcCzKvKsCi2GgHqDqsYkOP4/by5xCgIwGXQxIEh+8ew3gmrE1y7XRR6LHZIj6yLYnUi/mm2KXKBg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@jest/transform\": \"^29.7.0\",\n+        \"@types/babel__core\": \"^7.1.14\",\n+        \"babel-plugin-istanbul\": \"^6.1.1\",\n+        \"babel-preset-jest\": \"^29.6.3\",\n+        \"chalk\": \"^4.0.0\",\n+        \"graceful-fs\": \"^4.2.9\",\n+        \"slash\": \"^3.0.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n+      },\n+      \"peerDependencies\": {\n+        \"@babel/core\": \"^7.8.0\"\n+      }\n+    },\n+    \"node_modules/babel-plugin-istanbul\": {\n+      \"version\": \"6.1.1\",\n+      \"resolved\": \"https://registry.npmjs.org/babel-plugin-istanbul/-/babel-plugin-istanbul-6.1.1.tgz\",\n+      \"integrity\": \"sha512-Y1IQok9821cC9onCx5otgFfRm7Lm+I+wwxOx738M/WLPZ9Q42m4IG5W0FNX8WLL2gYMZo3JkuXIH2DOpWM+qwA==\",\n+      \"dev\": true,\n+      \"license\": \"BSD-3-Clause\",\n+      \"dependencies\": {\n+        \"@babel/helper-plugin-utils\": \"^7.0.0\",\n+        \"@istanbuljs/load-nyc-config\": \"^1.0.0\",\n+        \"@istanbuljs/schema\": \"^0.1.2\",\n+        \"istanbul-lib-instrument\": \"^5.0.4\",\n+        \"test-exclude\": \"^6.0.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      }\n+    },\n+    \"node_modules/babel-plugin-istanbul/node_modules/istanbul-lib-instrument\": {\n+      \"version\": \"5.2.1\",\n+      \"resolved\": \"https://registry.npmjs.org/istanbul-lib-instrument/-/istanbul-lib-instrument-5.2.1.tgz\",\n+      \"integrity\": \"sha512-pzqtp31nLv/XFOzXGuvhCb8qhjmTVo5vjVk19XE4CRlSWz0KoeJ3bw9XsA7nOp9YBf4qHjwBxkDzKcME/J29Yg==\",\n+      \"dev\": true,\n+      \"license\": \"BSD-3-Clause\",\n+      \"dependencies\": {\n+        \"@babel/core\": \"^7.12.3\",\n+        \"@babel/parser\": \"^7.14.7\",\n+        \"@istanbuljs/schema\": \"^0.1.2\",\n+        \"istanbul-lib-coverage\": \"^3.2.0\",\n+        \"semver\": \"^6.3.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      }\n+    },\n+    \"node_modules/babel-plugin-istanbul/node_modules/semver\": {\n+      \"version\": \"6.3.1\",\n+      \"resolved\": \"https://registry.npmjs.org/semver/-/semver-6.3.1.tgz\",\n+      \"integrity\": \"sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==\",\n+      \"dev\": true,\n+      \"license\": \"ISC\",\n+      \"bin\": {\n+        \"semver\": \"bin/semver.js\"\n+      }\n+    },\n+    \"node_modules/babel-plugin-jest-hoist\": {\n+      \"version\": \"29.6.3\",\n+      \"resolved\": \"https://registry.npmjs.org/babel-plugin-jest-hoist/-/babel-plugin-jest-hoist-29.6.3.tgz\",\n+      \"integrity\": \"sha512-ESAc/RJvGTFEzRwOTT4+lNDk/GNHMkKbNzsvT0qKRfDyyYTskxB5rnU2njIDYVxXCBHHEI1c0YwHob3WaYujOg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@babel/template\": \"^7.3.3\",\n+        \"@babel/types\": \"^7.3.3\",\n+        \"@types/babel__core\": \"^7.1.14\",\n+        \"@types/babel__traverse\": \"^7.0.6\"\n+      },\n+      \"engines\": {\n+        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n+      }\n+    },\n+    \"node_modules/babel-preset-current-node-syntax\": {\n+      \"version\": \"1.1.0\",\n+      \"resolved\": \"https://registry.npmjs.org/babel-preset-current-node-syntax/-/babel-preset-current-node-syntax-1.1.0.tgz\",\n+      \"integrity\": \"sha512-ldYss8SbBlWva1bs28q78Ju5Zq1F+8BrqBZZ0VFhLBvhh6lCpC2o3gDJi/5DRLs9FgYZCnmPYIVFU4lRXCkyUw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@babel/plugin-syntax-async-generators\": \"^7.8.4\",\n+        \"@babel/plugin-syntax-bigint\": \"^7.8.3\",\n+        \"@babel/plugin-syntax-class-properties\": \"^7.12.13\",\n+        \"@babel/plugin-syntax-class-static-block\": \"^7.14.5\",\n+        \"@babel/plugin-syntax-import-attributes\": \"^7.24.7\",\n+        \"@babel/plugin-syntax-import-meta\": \"^7.10.4\",\n+        \"@babel/plugin-syntax-json-strings\": \"^7.8.3\",\n+        \"@babel/plugin-syntax-logical-assignment-operators\": \"^7.10.4\",\n+        \"@babel/plugin-syntax-nullish-coalescing-operator\": \"^7.8.3\",\n+        \"@babel/plugin-syntax-numeric-separator\": \"^7.10.4\",\n+        \"@babel/plugin-syntax-object-rest-spread\": \"^7.8.3\",\n+        \"@babel/plugin-syntax-optional-catch-binding\": \"^7.8.3\",\n+        \"@babel/plugin-syntax-optional-chaining\": \"^7.8.3\",\n+        \"@babel/plugin-syntax-private-property-in-object\": \"^7.14.5\",\n+        \"@babel/plugin-syntax-top-level-await\": \"^7.14.5\"\n+      },\n+      \"peerDependencies\": {\n+        \"@babel/core\": \"^7.0.0\"\n+      }\n+    },\n+    \"node_modules/babel-preset-jest\": {\n+      \"version\": \"29.6.3\",\n+      \"resolved\": \"https://registry.npmjs.org/babel-preset-jest/-/babel-preset-jest-29.6.3.tgz\",\n+      \"integrity\": \"sha512-0B3bhxR6snWXJZtR/RliHTDPRgn1sNHOR0yVtq/IiQFyuOVjFS+wuio/R4gSNkyYmKmJB4wGZv2NZanmKmTnNA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"babel-plugin-jest-hoist\": \"^29.6.3\",\n+        \"babel-preset-current-node-syntax\": \"^1.0.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n+      },\n+      \"peerDependencies\": {\n+        \"@babel/core\": \"^7.0.0\"\n+      }\n+    },\n+    \"node_modules/balanced-match\": {\n+      \"version\": \"1.0.2\",\n+      \"resolved\": \"https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz\",\n+      \"integrity\": \"sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/brace-expansion\": {\n+      \"version\": \"2.0.2\",\n+      \"resolved\": \"https://registry.npmjs.org/brace-expansion/-/brace-expansion-2.0.2.tgz\",\n+      \"integrity\": \"sha512-Jt0vHyM+jmUBqojB7E1NIYadt0vI0Qxjxd2TErW94wDz+E2LAm5vKMXXwg6ZZBTHPuUlDgQHKXvjGBdfcF1ZDQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"balanced-match\": \"^1.0.0\"\n+      }\n+    },\n+    \"node_modules/braces\": {\n+      \"version\": \"3.0.3\",\n+      \"resolved\": \"https://registry.npmjs.org/braces/-/braces-3.0.3.tgz\",\n+      \"integrity\": \"sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"fill-range\": \"^7.1.1\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      }\n+    },\n+    \"node_modules/browserslist\": {\n+      \"version\": \"4.25.1\",\n+      \"resolved\": \"https://registry.npmjs.org/browserslist/-/browserslist-4.25.1.tgz\",\n+      \"integrity\": \"sha512-KGj0KoOMXLpSNkkEI6Z6mShmQy0bc1I+T7K9N81k4WWMrfz+6fQ6es80B/YLAeRoKvjYE1YSHHOW1qe9xIVzHw==\",\n+      \"dev\": true,\n+      \"funding\": [\n+        {\n+          \"type\": \"opencollective\",\n+          \"url\": \"https://opencollective.com/browserslist\"\n+        },\n+        {\n+          \"type\": \"tidelift\",\n+          \"url\": \"https://tidelift.com/funding/github/npm/browserslist\"\n+        },\n+        {\n+          \"type\": \"github\",\n+          \"url\": \"https://github.com/sponsors/ai\"\n+        }\n+      ],\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"caniuse-lite\": \"^1.0.30001726\",\n+        \"electron-to-chromium\": \"^1.5.173\",\n+        \"node-releases\": \"^2.0.19\",\n+        \"update-browserslist-db\": \"^1.1.3\"\n+      },\n+      \"bin\": {\n+        \"browserslist\": \"cli.js\"\n+      },\n+      \"engines\": {\n+        \"node\": \"^6 || ^7 || ^8 || ^9 || ^10 || ^11 || ^12 || >=13.7\"\n+      }\n+    },\n+    \"node_modules/bs-logger\": {\n+      \"version\": \"0.2.6\",\n+      \"resolved\": \"https://registry.npmjs.org/bs-logger/-/bs-logger-0.2.6.tgz\",\n+      \"integrity\": \"sha512-pd8DCoxmbgc7hyPKOvxtqNcjYoOsABPQdcCUjGp3d42VR2CX1ORhk2A87oqqu5R1kk+76nsxZupkmyd+MVtCog==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"fast-json-stable-stringify\": \"2.x\"\n+      },\n+      \"engines\": {\n+        \"node\": \">= 6\"\n+      }\n+    },\n+    \"node_modules/bser\": {\n+      \"version\": \"2.1.1\",\n+      \"resolved\": \"https://registry.npmjs.org/bser/-/bser-2.1.1.tgz\",\n+      \"integrity\": \"sha512-gQxTNE/GAfIIrmHLUE3oJyp5FO6HRBfhjnw4/wMmA63ZGDJnWBmgY/lyQBpnDUkGmAhbSe39tx2d/iTOAfglwQ==\",\n+      \"dev\": true,\n+      \"license\": \"Apache-2.0\",\n+      \"dependencies\": {\n+        \"node-int64\": \"^0.4.0\"\n+      }\n+    },\n+    \"node_modules/buffer-from\": {\n+      \"version\": \"1.1.2\",\n+      \"resolved\": \"https://registry.npmjs.org/buffer-from/-/buffer-from-1.1.2.tgz\",\n+      \"integrity\": \"sha512-E+XQCRwSbaaiChtv6k6Dwgc+bx+Bs6vuKJHHl5kox/BaKbhiXzqQOwK4cO22yElGp2OCmjwVhT3HmxgyPGnJfQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/callsites\": {\n+      \"version\": \"3.1.0\",\n+      \"resolved\": \"https://registry.npmjs.org/callsites/-/callsites-3.1.0.tgz\",\n+      \"integrity\": \"sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=6\"\n+      }\n+    },\n+    \"node_modules/camelcase\": {\n+      \"version\": \"5.3.1\",\n+      \"resolved\": \"https://registry.npmjs.org/camelcase/-/camelcase-5.3.1.tgz\",\n+      \"integrity\": \"sha512-L28STB170nwWS63UjtlEOE3dldQApaJXZkOI1uMFfzf3rRuPegHaHesyee+YxQ+W6SvRDQV6UrdOdRiR153wJg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=6\"\n+      }\n+    },\n+    \"node_modules/caniuse-lite\": {\n+      \"version\": \"1.0.30001727\",\n+      \"resolved\": \"https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30001727.tgz\",\n+      \"integrity\": \"sha512-pB68nIHmbN6L/4C6MH1DokyR3bYqFwjaSs/sWDHGj4CTcFtQUQMuJftVwWkXq7mNWOybD3KhUv3oWHoGxgP14Q==\",\n+      \"dev\": true,\n+      \"funding\": [\n+        {\n+          \"type\": \"opencollective\",\n+          \"url\": \"https://opencollective.com/browserslist\"\n+        },\n+        {\n+          \"type\": \"tidelift\",\n+          \"url\": \"https://tidelift.com/funding/github/npm/caniuse-lite\"\n+        },\n+        {\n+          \"type\": \"github\",\n+          \"url\": \"https://github.com/sponsors/ai\"\n+        }\n+      ],\n+      \"license\": \"CC-BY-4.0\"\n+    },\n+    \"node_modules/chalk\": {\n+      \"version\": \"4.1.2\",\n+      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz\",\n+      \"integrity\": \"sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"ansi-styles\": \"^4.1.0\",\n+        \"supports-color\": \"^7.1.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=10\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/chalk/chalk?sponsor=1\"\n+      }\n+    },\n+    \"node_modules/char-regex\": {\n+      \"version\": \"1.0.2\",\n+      \"resolved\": \"https://registry.npmjs.org/char-regex/-/char-regex-1.0.2.tgz\",\n+      \"integrity\": \"sha512-kWWXztvZ5SBQV+eRgKFeh8q5sLuZY2+8WUIzlxWVTg+oGwY14qylx1KbKzHd8P6ZYkAg0xyIDU9JMHhyJMZ1jw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=10\"\n+      }\n+    },\n+    \"node_modules/ci-info\": {\n+      \"version\": \"3.9.0\",\n+      \"resolved\": \"https://registry.npmjs.org/ci-info/-/ci-info-3.9.0.tgz\",\n+      \"integrity\": \"sha512-NIxF55hv4nSqQswkAeiOi1r83xy8JldOFDTWiug55KBu9Jnblncd2U6ViHmYgHf01TPZS77NJBhBMKdWj9HQMQ==\",\n+      \"dev\": true,\n+      \"funding\": [\n+        {\n+          \"type\": \"github\",\n+          \"url\": \"https://github.com/sponsors/sibiraj-s\"\n+        }\n+      ],\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      }\n+    },\n+    \"node_modules/cjs-module-lexer\": {\n+      \"version\": \"1.4.3\",\n+      \"resolved\": \"https://registry.npmjs.org/cjs-module-lexer/-/cjs-module-lexer-1.4.3.tgz\",\n+      \"integrity\": \"sha512-9z8TZaGM1pfswYeXrUpzPrkx8UnWYdhJclsiYMm6x/w5+nN+8Tf/LnAgfLGQCm59qAOxU8WwHEq2vNwF6i4j+Q==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/cliui\": {\n+      \"version\": \"8.0.1\",\n+      \"resolved\": \"https://registry.npmjs.org/cliui/-/cliui-8.0.1.tgz\",\n+      \"integrity\": \"sha512-BSeNnyus75C4//NQ9gQt1/csTXyo/8Sb+afLAkzAptFuMsod9HFokGNudZpi/oQV73hnVK+sR+5PVRMd+Dr7YQ==\",\n+      \"dev\": true,\n+      \"license\": \"ISC\",\n+      \"dependencies\": {\n+        \"string-width\": \"^4.2.0\",\n+        \"strip-ansi\": \"^6.0.1\",\n+        \"wrap-ansi\": \"^7.0.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=12\"\n+      }\n+    },\n+    \"node_modules/co\": {\n+      \"version\": \"4.6.0\",\n+      \"resolved\": \"https://registry.npmjs.org/co/-/co-4.6.0.tgz\",\n+      \"integrity\": \"sha512-QVb0dM5HvG+uaxitm8wONl7jltx8dqhfU33DcqtOZcLSVIKSDDLDi7+0LbAKiyI8hD9u42m2YxXSkMGWThaecQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"iojs\": \">= 1.0.0\",\n+        \"node\": \">= 0.12.0\"\n+      }\n+    },\n+    \"node_modules/collect-v8-coverage\": {\n+      \"version\": \"1.0.2\",\n+      \"resolved\": \"https://registry.npmjs.org/collect-v8-coverage/-/collect-v8-coverage-1.0.2.tgz\",\n+      \"integrity\": \"sha512-lHl4d5/ONEbLlJvaJNtsF/Lz+WvB07u2ycqTYbdrq7UypDXailES4valYb2eWiJFxZlVmpGekfqoxQhzyFdT4Q==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/color-convert\": {\n+      \"version\": \"2.0.1\",\n+      \"resolved\": \"https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz\",\n+      \"integrity\": \"sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"color-name\": \"~1.1.4\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=7.0.0\"\n+      }\n+    },\n+    \"node_modules/color-name\": {\n+      \"version\": \"1.1.4\",\n+      \"resolved\": \"https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz\",\n+      \"integrity\": \"sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/concat-map\": {\n+      \"version\": \"0.0.1\",\n+      \"resolved\": \"https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz\",\n+      \"integrity\": \"sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/convert-source-map\": {\n+      \"version\": \"2.0.0\",\n+      \"resolved\": \"https://registry.npmjs.org/convert-source-map/-/convert-source-map-2.0.0.tgz\",\n+      \"integrity\": \"sha512-Kvp459HrV2FEJ1CAsi1Ku+MY3kasH19TFykTz2xWmMeq6bk2NU3XXvfJ+Q61m0xktWwt+1HSYf3JZsTms3aRJg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/create-jest\": {\n+      \"version\": \"29.7.0\",\n+      \"resolved\": \"https://registry.npmjs.org/create-jest/-/create-jest-29.7.0.tgz\",\n+      \"integrity\": \"sha512-Adz2bdH0Vq3F53KEMJOoftQFutWCukm6J24wbPWRO4k1kMY7gS7ds/uoJkNuV8wDCtWWnuwGcJwpWcih+zEW1Q==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@jest/types\": \"^29.6.3\",\n+        \"chalk\": \"^4.0.0\",\n+        \"exit\": \"^0.1.2\",\n+        \"graceful-fs\": \"^4.2.9\",\n+        \"jest-config\": \"^29.7.0\",\n+        \"jest-util\": \"^29.7.0\",\n+        \"prompts\": \"^2.0.1\"\n+      },\n+      \"bin\": {\n+        \"create-jest\": \"bin/create-jest.js\"\n+      },\n+      \"engines\": {\n+        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n+      }\n+    },\n+    \"node_modules/cross-spawn\": {\n+      \"version\": \"7.0.6\",\n+      \"resolved\": \"https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.6.tgz\",\n+      \"integrity\": \"sha512-uV2QOWP2nWzsy2aMp8aRibhi9dlzF5Hgh5SHaB9OiTGEyDTiJJyx0uy51QXdyWbtAHNua4XJzUKca3OzKUd3vA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"path-key\": \"^3.1.0\",\n+        \"shebang-command\": \"^2.0.0\",\n+        \"which\": \"^2.0.1\"\n+      },\n+      \"engines\": {\n+        \"node\": \">= 8\"\n+      }\n+    },\n+    \"node_modules/debug\": {\n+      \"version\": \"4.4.1\",\n+      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-4.4.1.tgz\",\n+      \"integrity\": \"sha512-KcKCqiftBJcZr++7ykoDIEwSa3XWowTfNPo92BYxjXiyYEVrUQh2aLyhxBCwww+heortUFxEJYcRzosstTEBYQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"ms\": \"^2.1.3\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=6.0\"\n+      },\n+      \"peerDependenciesMeta\": {\n+        \"supports-color\": {\n+          \"optional\": true\n+        }\n+      }\n+    },\n+    \"node_modules/dedent\": {\n+      \"version\": \"1.6.0\",\n+      \"resolved\": \"https://registry.npmjs.org/dedent/-/dedent-1.6.0.tgz\",\n+      \"integrity\": \"sha512-F1Z+5UCFpmQUzJa11agbyPVMbpgT/qA3/SKyJ1jyBgm7dUcUEa8v9JwDkerSQXfakBwFljIxhOJqGkjUwZ9FSA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"peerDependencies\": {\n+        \"babel-plugin-macros\": \"^3.1.0\"\n+      },\n+      \"peerDependenciesMeta\": {\n+        \"babel-plugin-macros\": {\n+          \"optional\": true\n+        }\n+      }\n+    },\n+    \"node_modules/deep-is\": {\n+      \"version\": \"0.1.4\",\n+      \"resolved\": \"https://registry.npmjs.org/deep-is/-/deep-is-0.1.4.tgz\",\n+      \"integrity\": \"sha512-oIPzksmTg4/MriiaYGO+okXDT7ztn/w3Eptv/+gSIdMdKsJo0u4CfYNFJPy+4SKMuCqGw2wxnA+URMg3t8a/bQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/deepmerge\": {\n+      \"version\": \"4.3.1\",\n+      \"resolved\": \"https://registry.npmjs.org/deepmerge/-/deepmerge-4.3.1.tgz\",\n+      \"integrity\": \"sha512-3sUqbMEc77XqpdNO7FRyRog+eW3ph+GYCbj+rK+uYyRMuwsVy0rMiVtPn+QJlKFvWP/1PYpapqYn0Me2knFn+A==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=0.10.0\"\n+      }\n+    },\n+    \"node_modules/detect-newline\": {\n+      \"version\": \"3.1.0\",\n+      \"resolved\": \"https://registry.npmjs.org/detect-newline/-/detect-newline-3.1.0.tgz\",\n+      \"integrity\": \"sha512-TLz+x/vEXm/Y7P7wn1EJFNLxYpUD4TgMosxY6fAVJUnJMbupHBOncxyWUG9OpTaH9EBD7uFI5LfEgmMOc54DsA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      }\n+    },\n+    \"node_modules/diff-sequences\": {\n+      \"version\": \"29.6.3\",\n+      \"resolved\": \"https://registry.npmjs.org/diff-sequences/-/diff-sequences-29.6.3.tgz\",\n+      \"integrity\": \"sha512-EjePK1srD3P08o2j4f0ExnylqRs5B9tJjcp9t1krH2qRi8CCdsYfwe9JgSLurFBWwq4uOlipzfk5fHNvwFKr8Q==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n+      }\n+    },\n+    \"node_modules/dir-glob\": {\n+      \"version\": \"3.0.1\",\n+      \"resolved\": \"https://registry.npmjs.org/dir-glob/-/dir-glob-3.0.1.tgz\",\n+      \"integrity\": \"sha512-WkrWp9GR4KXfKGYzOLmTuGVi1UWFfws377n9cc55/tb6DuqyF6pcQ5AbiHEshaDpY9v6oaSr2XCDidGmMwdzIA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"path-type\": \"^4.0.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      }\n+    },\n+    \"node_modules/doctrine\": {\n+      \"version\": \"3.0.0\",\n+      \"resolved\": \"https://registry.npmjs.org/doctrine/-/doctrine-3.0.0.tgz\",\n+      \"integrity\": \"sha512-yS+Q5i3hBf7GBkd4KG8a7eBNNWNGLTaEwwYWUijIYM7zrlYDM0BFXHjjPWlWZ1Rg7UaddZeIDmi9jF3HmqiQ2w==\",\n+      \"dev\": true,\n+      \"license\": \"Apache-2.0\",\n+      \"dependencies\": {\n+        \"esutils\": \"^2.0.2\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=6.0.0\"\n+      }\n+    },\n+    \"node_modules/ejs\": {\n+      \"version\": \"3.1.10\",\n+      \"resolved\": \"https://registry.npmjs.org/ejs/-/ejs-3.1.10.tgz\",\n+      \"integrity\": \"sha512-UeJmFfOrAQS8OJWPZ4qtgHyWExa088/MtK5UEyoJGFH67cDEXkZSviOiKRCZ4Xij0zxI3JECgYs3oKx+AizQBA==\",\n+      \"dev\": true,\n+      \"license\": \"Apache-2.0\",\n+      \"dependencies\": {\n+        \"jake\": \"^10.8.5\"\n+      },\n+      \"bin\": {\n+        \"ejs\": \"bin/cli.js\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=0.10.0\"\n+      }\n+    },\n+    \"node_modules/electron-to-chromium\": {\n+      \"version\": \"1.5.189\",\n+      \"resolved\": \"https://registry.npmjs.org/electron-to-chromium/-/electron-to-chromium-1.5.189.tgz\",\n+      \"integrity\": \"sha512-y9D1ntS1ruO/pZ/V2FtLE+JXLQe28XoRpZ7QCCo0T8LdQladzdcOVQZH/IWLVJvCw12OGMb6hYOeOAjntCmJRQ==\",\n+      \"dev\": true,\n+      \"license\": \"ISC\"\n+    },\n+    \"node_modules/emittery\": {\n+      \"version\": \"0.13.1\",\n+      \"resolved\": \"https://registry.npmjs.org/emittery/-/emittery-0.13.1.tgz\",\n+      \"integrity\": \"sha512-DeWwawk6r5yR9jFgnDKYt4sLS0LmHJJi3ZOnb5/JdbYwj3nW+FxQnHIjhBKz8YLC7oRNPVM9NQ47I3CVx34eqQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=12\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/sindresorhus/emittery?sponsor=1\"\n+      }\n+    },\n+    \"node_modules/emoji-regex\": {\n+      \"version\": \"8.0.0\",\n+      \"resolved\": \"https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz\",\n+      \"integrity\": \"sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/error-ex\": {\n+      \"version\": \"1.3.2\",\n+      \"resolved\": \"https://registry.npmjs.org/error-ex/-/error-ex-1.3.2.tgz\",\n+      \"integrity\": \"sha512-7dFHNmqeFSEt2ZBsCriorKnn3Z2pj+fd9kmI6QoWw4//DL+icEBfc0U7qJCisqrTsKTjw4fNFy2pW9OqStD84g==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"is-arrayish\": \"^0.2.1\"\n+      }\n+    },\n+    \"node_modules/escalade\": {\n+      \"version\": \"3.2.0\",\n+      \"resolved\": \"https://registry.npmjs.org/escalade/-/escalade-3.2.0.tgz\",\n+      \"integrity\": \"sha512-WUj2qlxaQtO4g6Pq5c29GTcWGDyd8itL8zTlipgECz3JesAiiOKotd8JU6otB3PACgG6xkJUyVhboMS+bje/jA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=6\"\n+      }\n+    },\n+    \"node_modules/escape-string-regexp\": {\n+      \"version\": \"4.0.0\",\n+      \"resolved\": \"https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-4.0.0.tgz\",\n+      \"integrity\": \"sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=10\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/sponsors/sindresorhus\"\n+      }\n+    },\n+    \"node_modules/eslint\": {\n+      \"version\": \"8.57.1\",\n+      \"resolved\": \"https://registry.npmjs.org/eslint/-/eslint-8.57.1.tgz\",\n+      \"integrity\": \"sha512-ypowyDxpVSYpkXr9WPv2PAZCtNip1Mv5KTW0SCurXv/9iOpcrH9PaqUElksqEB6pChqHGDRCFTyrZlGhnLNGiA==\",\n+      \"deprecated\": \"This version is no longer supported. Please see https://eslint.org/version-support for other options.\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@eslint-community/eslint-utils\": \"^4.2.0\",\n+        \"@eslint-community/regexpp\": \"^4.6.1\",\n+        \"@eslint/eslintrc\": \"^2.1.4\",\n+        \"@eslint/js\": \"8.57.1\",\n+        \"@humanwhocodes/config-array\": \"^0.13.0\",\n+        \"@humanwhocodes/module-importer\": \"^1.0.1\",\n+        \"@nodelib/fs.walk\": \"^1.2.8\",\n+        \"@ungap/structured-clone\": \"^1.2.0\",\n+        \"ajv\": \"^6.12.4\",\n+        \"chalk\": \"^4.0.0\",\n+        \"cross-spawn\": \"^7.0.2\",\n+        \"debug\": \"^4.3.2\",\n+        \"doctrine\": \"^3.0.0\",\n+        \"escape-string-regexp\": \"^4.0.0\",\n+        \"eslint-scope\": \"^7.2.2\",\n+        \"eslint-visitor-keys\": \"^3.4.3\",\n+        \"espree\": \"^9.6.1\",\n+        \"esquery\": \"^1.4.2\",\n+        \"esutils\": \"^2.0.2\",\n+        \"fast-deep-equal\": \"^3.1.3\",\n+        \"file-entry-cache\": \"^6.0.1\",\n+        \"find-up\": \"^5.0.0\",\n+        \"glob-parent\": \"^6.0.2\",\n+        \"globals\": \"^13.19.0\",\n+        \"graphemer\": \"^1.4.0\",\n+        \"ignore\": \"^5.2.0\",\n+        \"imurmurhash\": \"^0.1.4\",\n+        \"is-glob\": \"^4.0.0\",\n+        \"is-path-inside\": \"^3.0.3\",\n+        \"js-yaml\": \"^4.1.0\",\n+        \"json-stable-stringify-without-jsonify\": \"^1.0.1\",\n+        \"levn\": \"^0.4.1\",\n+        \"lodash.merge\": \"^4.6.2\",\n+        \"minimatch\": \"^3.1.2\",\n+        \"natural-compare\": \"^1.4.0\",\n+        \"optionator\": \"^0.9.3\",\n+        \"strip-ansi\": \"^6.0.1\",\n+        \"text-table\": \"^0.2.0\"\n+      },\n+      \"bin\": {\n+        \"eslint\": \"bin/eslint.js\"\n+      },\n+      \"engines\": {\n+        \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://opencollective.com/eslint\"\n+      }\n+    },\n+    \"node_modules/eslint-scope\": {\n+      \"version\": \"7.2.2\",\n+      \"resolved\": \"https://registry.npmjs.org/eslint-scope/-/eslint-scope-7.2.2.tgz\",\n+      \"integrity\": \"sha512-dOt21O7lTMhDM+X9mB4GX+DZrZtCUJPL/wlcTqxyrx5IvO0IYtILdtrQGQp+8n5S0gwSVmOf9NQrjMOgfQZlIg==\",\n+      \"dev\": true,\n+      \"license\": \"BSD-2-Clause\",\n+      \"dependencies\": {\n+        \"esrecurse\": \"^4.3.0\",\n+        \"estraverse\": \"^5.2.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://opencollective.com/eslint\"\n+      }\n+    },\n+    \"node_modules/eslint-visitor-keys\": {\n+      \"version\": \"3.4.3\",\n+      \"resolved\": \"https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-3.4.3.tgz\",\n+      \"integrity\": \"sha512-wpc+LXeiyiisxPlEkUzU6svyS1frIO3Mgxj1fdy7Pm8Ygzguax2N3Fa/D/ag1WqbOprdI+uY6wMUl8/a2G+iag==\",\n+      \"dev\": true,\n+      \"license\": \"Apache-2.0\",\n+      \"engines\": {\n+        \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://opencollective.com/eslint\"\n+      }\n+    },\n+    \"node_modules/eslint/node_modules/brace-expansion\": {\n+      \"version\": \"1.1.12\",\n+      \"resolved\": \"https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.12.tgz\",\n+      \"integrity\": \"sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"balanced-match\": \"^1.0.0\",\n+        \"concat-map\": \"0.0.1\"\n+      }\n+    },\n+    \"node_modules/eslint/node_modules/minimatch\": {\n+      \"version\": \"3.1.2\",\n+      \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz\",\n+      \"integrity\": \"sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==\",\n+      \"dev\": true,\n+      \"license\": \"ISC\",\n+      \"dependencies\": {\n+        \"brace-expansion\": \"^1.1.7\"\n+      },\n+      \"engines\": {\n+        \"node\": \"*\"\n+      }\n+    },\n+    \"node_modules/espree\": {\n+      \"version\": \"9.6.1\",\n+      \"resolved\": \"https://registry.npmjs.org/espree/-/espree-9.6.1.tgz\",\n+      \"integrity\": \"sha512-oruZaFkjorTpF32kDSI5/75ViwGeZginGGy2NoOSg3Q9bnwlnmDm4HLnkl0RE3n+njDXR037aY1+x58Z/zFdwQ==\",\n+      \"dev\": true,\n+      \"license\": \"BSD-2-Clause\",\n+      \"dependencies\": {\n+        \"acorn\": \"^8.9.0\",\n+        \"acorn-jsx\": \"^5.3.2\",\n+        \"eslint-visitor-keys\": \"^3.4.1\"\n+      },\n+      \"engines\": {\n+        \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://opencollective.com/eslint\"\n+      }\n+    },\n+    \"node_modules/esprima\": {\n+      \"version\": \"4.0.1\",\n+      \"resolved\": \"https://registry.npmjs.org/esprima/-/esprima-4.0.1.tgz\",\n+      \"integrity\": \"sha512-eGuFFw7Upda+g4p+QHvnW0RyTX/SVeJBDM/gCtMARO0cLuT2HcEKnTPvhjV6aGeqrCB/sbNop0Kszm0jsaWU4A==\",\n+      \"dev\": true,\n+      \"license\": \"BSD-2-Clause\",\n+      \"bin\": {\n+        \"esparse\": \"bin/esparse.js\",\n+        \"esvalidate\": \"bin/esvalidate.js\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=4\"\n+      }\n+    },\n+    \"node_modules/esquery\": {\n+      \"version\": \"1.6.0\",\n+      \"resolved\": \"https://registry.npmjs.org/esquery/-/esquery-1.6.0.tgz\",\n+      \"integrity\": \"sha512-ca9pw9fomFcKPvFLXhBKUK90ZvGibiGOvRJNbjljY7s7uq/5YO4BOzcYtJqExdx99rF6aAcnRxHmcUHcz6sQsg==\",\n+      \"dev\": true,\n+      \"license\": \"BSD-3-Clause\",\n+      \"dependencies\": {\n+        \"estraverse\": \"^5.1.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=0.10\"\n+      }\n+    },\n+    \"node_modules/esrecurse\": {\n+      \"version\": \"4.3.0\",\n+      \"resolved\": \"https://registry.npmjs.org/esrecurse/-/esrecurse-4.3.0.tgz\",\n+      \"integrity\": \"sha512-KmfKL3b6G+RXvP8N1vr3Tq1kL/oCFgn2NYXEtqP8/L3pKapUA4G8cFVaoF3SU323CD4XypR/ffioHmkti6/Tag==\",\n+      \"dev\": true,\n+      \"license\": \"BSD-2-Clause\",\n+      \"dependencies\": {\n+        \"estraverse\": \"^5.2.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=4.0\"\n+      }\n+    },\n+    \"node_modules/estraverse\": {\n+      \"version\": \"5.3.0\",\n+      \"resolved\": \"https://registry.npmjs.org/estraverse/-/estraverse-5.3.0.tgz\",\n+      \"integrity\": \"sha512-MMdARuVEQziNTeJD8DgMqmhwR11BRQ/cBP+pLtYdSTnf3MIO8fFeiINEbX36ZdNlfU/7A9f3gUw49B3oQsvwBA==\",\n+      \"dev\": true,\n+      \"license\": \"BSD-2-Clause\",\n+      \"engines\": {\n+        \"node\": \">=4.0\"\n+      }\n+    },\n+    \"node_modules/esutils\": {\n+      \"version\": \"2.0.3\",\n+      \"resolved\": \"https://registry.npmjs.org/esutils/-/esutils-2.0.3.tgz\",\n+      \"integrity\": \"sha512-kVscqXk4OCp68SZ0dkgEKVi6/8ij300KBWTJq32P/dYeWTSwK41WyTxalN1eRmA5Z9UU/LX9D7FWSmV9SAYx6g==\",\n+      \"dev\": true,\n+      \"license\": \"BSD-2-Clause\",\n+      \"engines\": {\n+        \"node\": \">=0.10.0\"\n+      }\n+    },\n+    \"node_modules/execa\": {\n+      \"version\": \"5.1.1\",\n+      \"resolved\": \"https://registry.npmjs.org/execa/-/execa-5.1.1.tgz\",\n+      \"integrity\": \"sha512-8uSpZZocAZRBAPIEINJj3Lo9HyGitllczc27Eh5YYojjMFMn8yHMDMaUHE2Jqfq05D/wucwI4JGURyXt1vchyg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"cross-spawn\": \"^7.0.3\",\n+        \"get-stream\": \"^6.0.0\",\n+        \"human-signals\": \"^2.1.0\",\n+        \"is-stream\": \"^2.0.0\",\n+        \"merge-stream\": \"^2.0.0\",\n+        \"npm-run-path\": \"^4.0.1\",\n+        \"onetime\": \"^5.1.2\",\n+        \"signal-exit\": \"^3.0.3\",\n+        \"strip-final-newline\": \"^2.0.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=10\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/sindresorhus/execa?sponsor=1\"\n+      }\n+    },\n+    \"node_modules/exit\": {\n+      \"version\": \"0.1.2\",\n+      \"resolved\": \"https://registry.npmjs.org/exit/-/exit-0.1.2.tgz\",\n+      \"integrity\": \"sha512-Zk/eNKV2zbjpKzrsQ+n1G6poVbErQxJ0LBOJXaKZ1EViLzH+hrLu9cdXI4zw9dBQJslwBEpbQ2P1oS7nDxs6jQ==\",\n+      \"dev\": true,\n+      \"engines\": {\n+        \"node\": \">= 0.8.0\"\n+      }\n+    },\n+    \"node_modules/expect\": {\n+      \"version\": \"29.7.0\",\n+      \"resolved\": \"https://registry.npmjs.org/expect/-/expect-29.7.0.tgz\",\n+      \"integrity\": \"sha512-2Zks0hf1VLFYI1kbh0I5jP3KHHyCHpkfyHBzsSXRFgl/Bg9mWYfMW8oD+PdMPlEwy5HNsR9JutYy6pMeOh61nw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@jest/expect-utils\": \"^29.7.0\",\n+        \"jest-get-type\": \"^29.6.3\",\n+        \"jest-matcher-utils\": \"^29.7.0\",\n+        \"jest-message-util\": \"^29.7.0\",\n+        \"jest-util\": \"^29.7.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n+      }\n+    },\n+    \"node_modules/fast-deep-equal\": {\n+      \"version\": \"3.1.3\",\n+      \"resolved\": \"https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-3.1.3.tgz\",\n+      \"integrity\": \"sha512-f3qQ9oQy9j2AhBe/H9VC91wLmKBCCU/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/fast-glob\": {\n+      \"version\": \"3.3.3\",\n+      \"resolved\": \"https://registry.npmjs.org/fast-glob/-/fast-glob-3.3.3.tgz\",\n+      \"integrity\": \"sha512-7MptL8U0cqcFdzIzwOTHoilX9x5BrNqye7Z/LuC7kCMRio1EMSyqRK3BEAUD7sXRq4iT4AzTVuZdhgQ2TCvYLg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@nodelib/fs.stat\": \"^2.0.2\",\n+        \"@nodelib/fs.walk\": \"^1.2.3\",\n+        \"glob-parent\": \"^5.1.2\",\n+        \"merge2\": \"^1.3.0\",\n+        \"micromatch\": \"^4.0.8\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=8.6.0\"\n+      }\n+    },\n+    \"node_modules/fast-glob/node_modules/glob-parent\": {\n+      \"version\": \"5.1.2\",\n+      \"resolved\": \"https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz\",\n+      \"integrity\": \"sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==\",\n+      \"dev\": true,\n+      \"license\": \"ISC\",\n+      \"dependencies\": {\n+        \"is-glob\": \"^4.0.1\"\n+      },\n+      \"engines\": {\n+        \"node\": \">= 6\"\n+      }\n+    },\n+    \"node_modules/fast-json-stable-stringify\": {\n+      \"version\": \"2.1.0\",\n+      \"resolved\": \"https://registry.npmjs.org/fast-json-stable-stringify/-/fast-json-stable-stringify-2.1.0.tgz\",\n+      \"integrity\": \"sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/fast-levenshtein\": {\n+      \"version\": \"2.0.6\",\n+      \"resolved\": \"https://registry.npmjs.org/fast-levenshtein/-/fast-levenshtein-2.0.6.tgz\",\n+      \"integrity\": \"sha512-DCXu6Ifhqcks7TZKY3Hxp3y6qphY5SJZmrWMDrKcERSOXWQdMhU9Ig/PYrzyw/ul9jOIyh0N4M0tbC5hodg8dw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/fastq\": {\n+      \"version\": \"1.19.1\",\n+      \"resolved\": \"https://registry.npmjs.org/fastq/-/fastq-1.19.1.tgz\",\n+      \"integrity\": \"sha512-GwLTyxkCXjXbxqIhTsMI2Nui8huMPtnxg7krajPJAjnEG/iiOS7i+zCtWGZR9G0NBKbXKh6X9m9UIsYX/N6vvQ==\",\n+      \"dev\": true,\n+      \"license\": \"ISC\",\n+      \"dependencies\": {\n+        \"reusify\": \"^1.0.4\"\n+      }\n+    },\n+    \"node_modules/fb-watchman\": {\n+      \"version\": \"2.0.2\",\n+      \"resolved\": \"https://registry.npmjs.org/fb-watchman/-/fb-watchman-2.0.2.tgz\",\n+      \"integrity\": \"sha512-p5161BqbuCaSnB8jIbzQHOlpgsPmK5rJVDfDKO91Axs5NC1uu3HRQm6wt9cd9/+GtQQIO53JdGXXoyDpTAsgYA==\",\n+      \"dev\": true,\n+      \"license\": \"Apache-2.0\",\n+      \"dependencies\": {\n+        \"bser\": \"2.1.1\"\n+      }\n+    },\n+    \"node_modules/file-entry-cache\": {\n+      \"version\": \"6.0.1\",\n+      \"resolved\": \"https://registry.npmjs.org/file-entry-cache/-/file-entry-cache-6.0.1.tgz\",\n+      \"integrity\": \"sha512-7Gps/XWymbLk2QLYK4NzpMOrYjMhdIxXuIvy2QBsLE6ljuodKvdkWs/cpyJJ3CVIVpH0Oi1Hvg1ovbMzLdFBBg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"flat-cache\": \"^3.0.4\"\n+      },\n+      \"engines\": {\n+        \"node\": \"^10.12.0 || >=12.0.0\"\n+      }\n+    },\n+    \"node_modules/filelist\": {\n+      \"version\": \"1.0.4\",\n+      \"resolved\": \"https://registry.npmjs.org/filelist/-/filelist-1.0.4.tgz\",\n+      \"integrity\": \"sha512-w1cEuf3S+DrLCQL7ET6kz+gmlJdbq9J7yXCSjK/OZCPA+qEN1WyF4ZAf0YYJa4/shHJra2t/d/r8SV4Ji+x+8Q==\",\n+      \"dev\": true,\n+      \"license\": \"Apache-2.0\",\n+      \"dependencies\": {\n+        \"minimatch\": \"^5.0.1\"\n+      }\n+    },\n+    \"node_modules/filelist/node_modules/minimatch\": {\n+      \"version\": \"5.1.6\",\n+      \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-5.1.6.tgz\",\n+      \"integrity\": \"sha512-lKwV/1brpG6mBUFHtb7NUmtABCb2WZZmm2wNiOA5hAb8VdCS4B3dtMWyvcoViccwAW/COERjXLt0zP1zXUN26g==\",\n+      \"dev\": true,\n+      \"license\": \"ISC\",\n+      \"dependencies\": {\n+        \"brace-expansion\": \"^2.0.1\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=10\"\n+      }\n+    },\n+    \"node_modules/fill-range\": {\n+      \"version\": \"7.1.1\",\n+      \"resolved\": \"https://registry.npmjs.org/fill-range/-/fill-range-7.1.1.tgz\",\n+      \"integrity\": \"sha512-YsGpe3WHLK8ZYi4tWDg2Jy3ebRz2rXowDxnld4bkQB00cc/1Zw9AWnC0i9ztDJitivtQvaI9KaLyKrc+hBW0yg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"to-regex-range\": \"^5.0.1\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      }\n+    },\n+    \"node_modules/find-up\": {\n+      \"version\": \"5.0.0\",\n+      \"resolved\": \"https://registry.npmjs.org/find-up/-/find-up-5.0.0.tgz\",\n+      \"integrity\": \"sha512-78/PXT1wlLLDgTzDs7sjq9hzz0vXD+zn+7wypEe4fXQxCmdmqfGsEPQxmiCSQI3ajFV91bVSsvNtrJRiW6nGng==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"locate-path\": \"^6.0.0\",\n+        \"path-exists\": \"^4.0.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=10\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/sponsors/sindresorhus\"\n+      }\n+    },\n+    \"node_modules/flat-cache\": {\n+      \"version\": \"3.2.0\",\n+      \"resolved\": \"https://registry.npmjs.org/flat-cache/-/flat-cache-3.2.0.tgz\",\n+      \"integrity\": \"sha512-CYcENa+FtcUKLmhhqyctpclsq7QF38pKjZHsGNiSQF5r4FtoKDWabFDl3hzaEQMvT1LHEysw5twgLvpYYb4vbw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"flatted\": \"^3.2.9\",\n+        \"keyv\": \"^4.5.3\",\n+        \"rimraf\": \"^3.0.2\"\n+      },\n+      \"engines\": {\n+        \"node\": \"^10.12.0 || >=12.0.0\"\n+      }\n+    },\n+    \"node_modules/flatted\": {\n+      \"version\": \"3.3.3\",\n+      \"resolved\": \"https://registry.npmjs.org/flatted/-/flatted-3.3.3.tgz\",\n+      \"integrity\": \"sha512-GX+ysw4PBCz0PzosHDepZGANEuFCMLrnRTiEy9McGjmkCQYwRq4A/X786G/fjM/+OjsWSU1ZrY5qyARZmO/uwg==\",\n+      \"dev\": true,\n+      \"license\": \"ISC\"\n+    },\n+    \"node_modules/fs.realpath\": {\n+      \"version\": \"1.0.0\",\n+      \"resolved\": \"https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz\",\n+      \"integrity\": \"sha512-OO0pH2lK6a0hZnAdau5ItzHPI6pUlvI7jMVnxUQRtw4owF2wk8lOSabtGDCTP4Ggrg2MbGnWO9X8K1t4+fGMDw==\",\n+      \"dev\": true,\n+      \"license\": \"ISC\"\n+    },\n+    \"node_modules/fsevents\": {\n+      \"version\": \"2.3.3\",\n+      \"resolved\": \"https://registry.npmjs.org/fsevents/-/fsevents-2.3.3.tgz\",\n+      \"integrity\": \"sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==\",\n+      \"dev\": true,\n+      \"hasInstallScript\": true,\n+      \"license\": \"MIT\",\n+      \"optional\": true,\n+      \"os\": [\n+        \"darwin\"\n+      ],\n+      \"engines\": {\n+        \"node\": \"^8.16.0 || ^10.6.0 || >=11.0.0\"\n+      }\n+    },\n+    \"node_modules/function-bind\": {\n+      \"version\": \"1.1.2\",\n+      \"resolved\": \"https://registry.npmjs.org/function-bind/-/function-bind-1.1.2.tgz\",\n+      \"integrity\": \"sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"funding\": {\n+        \"url\": \"https://github.com/sponsors/ljharb\"\n+      }\n+    },\n+    \"node_modules/gensync\": {\n+      \"version\": \"1.0.0-beta.2\",\n+      \"resolved\": \"https://registry.npmjs.org/gensync/-/gensync-1.0.0-beta.2.tgz\",\n+      \"integrity\": \"sha512-3hN7NaskYvMDLQY55gnW3NQ+mesEAepTqlg+VEbj7zzqEMBVNhzcGYYeqFo/TlYz6eQiFcp1HcsCZO+nGgS8zg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=6.9.0\"\n+      }\n+    },\n+    \"node_modules/get-caller-file\": {\n+      \"version\": \"2.0.5\",\n+      \"resolved\": \"https://registry.npmjs.org/get-caller-file/-/get-caller-file-2.0.5.tgz\",\n+      \"integrity\": \"sha512-DyFP3BM/3YHTQOCUL/w0OZHR0lpKeGrxotcHWcqNEdnltqFwXVfhEBQ94eIo34AfQpo0rGki4cyIiftY06h2Fg==\",\n+      \"dev\": true,\n+      \"license\": \"ISC\",\n+      \"engines\": {\n+        \"node\": \"6.* || 8.* || >= 10.*\"\n+      }\n+    },\n+    \"node_modules/get-package-type\": {\n+      \"version\": \"0.1.0\",\n+      \"resolved\": \"https://registry.npmjs.org/get-package-type/-/get-package-type-0.1.0.tgz\",\n+      \"integrity\": \"sha512-pjzuKtY64GYfWizNAJ0fr9VqttZkNiK2iS430LtIHzjBEr6bX8Am2zm4sW4Ro5wjWW5cAlRL1qAMTcXbjNAO2Q==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=8.0.0\"\n+      }\n+    },\n+    \"node_modules/get-stream\": {\n+      \"version\": \"6.0.1\",\n+      \"resolved\": \"https://registry.npmjs.org/get-stream/-/get-stream-6.0.1.tgz\",\n+      \"integrity\": \"sha512-ts6Wi+2j3jQjqi70w5AlN8DFnkSwC+MqmxEzdEALB2qXZYV3X/b1CTfgPLGJNMeAWxdPfU8FO1ms3NUfaHCPYg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=10\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/sponsors/sindresorhus\"\n+      }\n+    },\n+    \"node_modules/glob\": {\n+      \"version\": \"7.2.3\",\n+      \"resolved\": \"https://registry.npmjs.org/glob/-/glob-7.2.3.tgz\",\n+      \"integrity\": \"sha512-nFR0zLpU2YCaRxwoCJvL6UvCH2JFyFVIvwTLsIf21AuHlMskA1hhTdk+LlYJtOlYt9v6dvszD2BGRqBL+iQK9Q==\",\n+      \"deprecated\": \"Glob versions prior to v9 are no longer supported\",\n+      \"dev\": true,\n+      \"license\": \"ISC\",\n+      \"dependencies\": {\n+        \"fs.realpath\": \"^1.0.0\",\n+        \"inflight\": \"^1.0.4\",\n+        \"inherits\": \"2\",\n+        \"minimatch\": \"^3.1.1\",\n+        \"once\": \"^1.3.0\",\n+        \"path-is-absolute\": \"^1.0.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \"*\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/sponsors/isaacs\"\n+      }\n+    },\n+    \"node_modules/glob-parent\": {\n+      \"version\": \"6.0.2\",\n+      \"resolved\": \"https://registry.npmjs.org/glob-parent/-/glob-parent-6.0.2.tgz\",\n+      \"integrity\": \"sha512-XxwI8EOhVQgWp6iDL+3b0r86f4d6AX6zSU55HfB4ydCEuXLXc5FcYeOu+nnGftS4TEju/11rt4KJPTMgbfmv4A==\",\n+      \"dev\": true,\n+      \"license\": \"ISC\",\n+      \"dependencies\": {\n+        \"is-glob\": \"^4.0.3\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=10.13.0\"\n+      }\n+    },\n+    \"node_modules/glob/node_modules/brace-expansion\": {\n+      \"version\": \"1.1.12\",\n+      \"resolved\": \"https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.12.tgz\",\n+      \"integrity\": \"sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"balanced-match\": \"^1.0.0\",\n+        \"concat-map\": \"0.0.1\"\n+      }\n+    },\n+    \"node_modules/glob/node_modules/minimatch\": {\n+      \"version\": \"3.1.2\",\n+      \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz\",\n+      \"integrity\": \"sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==\",\n+      \"dev\": true,\n+      \"license\": \"ISC\",\n+      \"dependencies\": {\n+        \"brace-expansion\": \"^1.1.7\"\n+      },\n+      \"engines\": {\n+        \"node\": \"*\"\n+      }\n+    },\n+    \"node_modules/globals\": {\n+      \"version\": \"13.24.0\",\n+      \"resolved\": \"https://registry.npmjs.org/globals/-/globals-13.24.0.tgz\",\n+      \"integrity\": \"sha512-AhO5QUcj8llrbG09iWhPU2B204J1xnPeL8kQmVorSsy+Sjj1sk8gIyh6cUocGmH4L0UuhAJy+hJMRA4mgA4mFQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"type-fest\": \"^0.20.2\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/sponsors/sindresorhus\"\n+      }\n+    },\n+    \"node_modules/globby\": {\n+      \"version\": \"11.1.0\",\n+      \"resolved\": \"https://registry.npmjs.org/globby/-/globby-11.1.0.tgz\",\n+      \"integrity\": \"sha512-jhIXaOzy1sb8IyocaruWSn1TjmnBVs8Ayhcy83rmxNJ8q2uWKCAj3CnJY+KpGSXCueAPc0i05kVvVKtP1t9S3g==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"array-union\": \"^2.1.0\",\n+        \"dir-glob\": \"^3.0.1\",\n+        \"fast-glob\": \"^3.2.9\",\n+        \"ignore\": \"^5.2.0\",\n+        \"merge2\": \"^1.4.1\",\n+        \"slash\": \"^3.0.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=10\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/sponsors/sindresorhus\"\n+      }\n+    },\n+    \"node_modules/graceful-fs\": {\n+      \"version\": \"4.2.11\",\n+      \"resolved\": \"https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.2.11.tgz\",\n+      \"integrity\": \"sha512-RbJ5/jmFcNNCcDV5o9eTnBLJ/HszWV0P73bc+Ff4nS/rJj+YaS6IGyiOL0VoBYX+l1Wrl3k63h/KrH+nhJ0XvQ==\",\n+      \"dev\": true,\n+      \"license\": \"ISC\"\n+    },\n+    \"node_modules/graphemer\": {\n+      \"version\": \"1.4.0\",\n+      \"resolved\": \"https://registry.npmjs.org/graphemer/-/graphemer-1.4.0.tgz\",\n+      \"integrity\": \"sha512-EtKwoO6kxCL9WO5xipiHTZlSzBm7WLT627TqC/uVRd0HKmq8NXyebnNYxDoBi7wt8eTWrUrKXCOVaFq9x1kgag==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/has-flag\": {\n+      \"version\": \"4.0.0\",\n+      \"resolved\": \"https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz\",\n+      \"integrity\": \"sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      }\n+    },\n+    \"node_modules/hasown\": {\n+      \"version\": \"2.0.2\",\n+      \"resolved\": \"https://registry.npmjs.org/hasown/-/hasown-2.0.2.tgz\",\n+      \"integrity\": \"sha512-0hJU9SCPvmMzIBdZFqNPXWa6dqh7WdH0cII9y+CyS8rG3nL48Bclra9HmKhVVUHyPWNH5Y7xDwAB7bfgSjkUMQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"function-bind\": \"^1.1.2\"\n+      },\n+      \"engines\": {\n+        \"node\": \">= 0.4\"\n+      }\n+    },\n+    \"node_modules/html-escaper\": {\n+      \"version\": \"2.0.2\",\n+      \"resolved\": \"https://registry.npmjs.org/html-escaper/-/html-escaper-2.0.2.tgz\",\n+      \"integrity\": \"sha512-H2iMtd0I4Mt5eYiapRdIDjp+XzelXQ0tFE4JS7YFwFevXXMmOp9myNrUvCg0D6ws8iqkRPBfKHgbwig1SmlLfg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/human-signals\": {\n+      \"version\": \"2.1.0\",\n+      \"resolved\": \"https://registry.npmjs.org/human-signals/-/human-signals-2.1.0.tgz\",\n+      \"integrity\": \"sha512-B4FFZ6q/T2jhhksgkbEW3HBvWIfDW85snkQgawt07S7J5QXTk6BkNV+0yAeZrM5QpMAdYlocGoljn0sJ/WQkFw==\",\n+      \"dev\": true,\n+      \"license\": \"Apache-2.0\",\n+      \"engines\": {\n+        \"node\": \">=10.17.0\"\n+      }\n+    },\n+    \"node_modules/ignore\": {\n+      \"version\": \"5.3.2\",\n+      \"resolved\": \"https://registry.npmjs.org/ignore/-/ignore-5.3.2.tgz\",\n+      \"integrity\": \"sha512-hsBTNUqQTDwkWtcdYI2i06Y/nUBEsNEDJKjWdigLvegy8kDuJAS8uRlpkkcQpyEXL0Z/pjDy5HBmMjRCJ2gq+g==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">= 4\"\n+      }\n+    },\n+    \"node_modules/import-fresh\": {\n+      \"version\": \"3.3.1\",\n+      \"resolved\": \"https://registry.npmjs.org/import-fresh/-/import-fresh-3.3.1.tgz\",\n+      \"integrity\": \"sha512-TR3KfrTZTYLPB6jUjfx6MF9WcWrHL9su5TObK4ZkYgBdWKPOFoSoQIdEuTuR82pmtxH2spWG9h6etwfr1pLBqQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"parent-module\": \"^1.0.0\",\n+        \"resolve-from\": \"^4.0.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=6\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/sponsors/sindresorhus\"\n+      }\n+    },\n+    \"node_modules/import-local\": {\n+      \"version\": \"3.2.0\",\n+      \"resolved\": \"https://registry.npmjs.org/import-local/-/import-local-3.2.0.tgz\",\n+      \"integrity\": \"sha512-2SPlun1JUPWoM6t3F0dw0FkCF/jWY8kttcY4f599GLTSjh2OCuuhdTkJQsEcZzBqbXZGKMK2OqW1oZsjtf/gQA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"pkg-dir\": \"^4.2.0\",\n+        \"resolve-cwd\": \"^3.0.0\"\n+      },\n+      \"bin\": {\n+        \"import-local-fixture\": \"fixtures/cli.js\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/sponsors/sindresorhus\"\n+      }\n+    },\n+    \"node_modules/imurmurhash\": {\n+      \"version\": \"0.1.4\",\n+      \"resolved\": \"https://registry.npmjs.org/imurmurhash/-/imurmurhash-0.1.4.tgz\",\n+      \"integrity\": \"sha512-JmXMZ6wuvDmLiHEml9ykzqO6lwFbof0GG4IkcGaENdCRDDmMVnny7s5HsIgHCbaq0w2MyPhDqkhTUgS2LU2PHA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=0.8.19\"\n+      }\n+    },\n+    \"node_modules/inflight\": {\n+      \"version\": \"1.0.6\",\n+      \"resolved\": \"https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz\",\n+      \"integrity\": \"sha512-k92I/b08q4wvFscXCLvqfsHCrjrF7yiXsQuIVvVE7N82W3+aqpzuUdBbfhWcy/FZR3/4IgflMgKLOsvPDrGCJA==\",\n+      \"deprecated\": \"This module is not supported, and leaks memory. Do not use it. Check out lru-cache if you want a good and tested way to coalesce async requests by a key value, which is much more comprehensive and powerful.\",\n+      \"dev\": true,\n+      \"license\": \"ISC\",\n+      \"dependencies\": {\n+        \"once\": \"^1.3.0\",\n+        \"wrappy\": \"1\"\n+      }\n+    },\n+    \"node_modules/inherits\": {\n+      \"version\": \"2.0.4\",\n+      \"resolved\": \"https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz\",\n+      \"integrity\": \"sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==\",\n+      \"dev\": true,\n+      \"license\": \"ISC\"\n+    },\n+    \"node_modules/is-arrayish\": {\n+      \"version\": \"0.2.1\",\n+      \"resolved\": \"https://registry.npmjs.org/is-arrayish/-/is-arrayish-0.2.1.tgz\",\n+      \"integrity\": \"sha512-zz06S8t0ozoDXMG+ube26zeCTNXcKIPJZJi8hBrF4idCLms4CG9QtK7qBl1boi5ODzFpjswb5JPmHCbMpjaYzg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/is-core-module\": {\n+      \"version\": \"2.16.1\",\n+      \"resolved\": \"https://registry.npmjs.org/is-core-module/-/is-core-module-2.16.1.tgz\",\n+      \"integrity\": \"sha512-UfoeMA6fIJ8wTYFEUjelnaGI67v6+N7qXJEvQuIGa99l4xsCruSYOVSQ0uPANn4dAzm8lkYPaKLrrijLq7x23w==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"hasown\": \"^2.0.2\"\n+      },\n+      \"engines\": {\n+        \"node\": \">= 0.4\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/sponsors/ljharb\"\n+      }\n+    },\n+    \"node_modules/is-extglob\": {\n+      \"version\": \"2.1.1\",\n+      \"resolved\": \"https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz\",\n+      \"integrity\": \"sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=0.10.0\"\n+      }\n+    },\n+    \"node_modules/is-fullwidth-code-point\": {\n+      \"version\": \"3.0.0\",\n+      \"resolved\": \"https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz\",\n+      \"integrity\": \"sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      }\n+    },\n+    \"node_modules/is-generator-fn\": {\n+      \"version\": \"2.1.0\",\n+      \"resolved\": \"https://registry.npmjs.org/is-generator-fn/-/is-generator-fn-2.1.0.tgz\",\n+      \"integrity\": \"sha512-cTIB4yPYL/Grw0EaSzASzg6bBy9gqCofvWN8okThAYIxKJZC+udlRAmGbM0XLeniEJSs8uEgHPGuHSe1XsOLSQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=6\"\n+      }\n+    },\n+    \"node_modules/is-glob\": {\n+      \"version\": \"4.0.3\",\n+      \"resolved\": \"https://registry.npmjs.org/is-glob/-/is-glob-4.0.3.tgz\",\n+      \"integrity\": \"sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"is-extglob\": \"^2.1.1\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=0.10.0\"\n+      }\n+    },\n+    \"node_modules/is-number\": {\n+      \"version\": \"7.0.0\",\n+      \"resolved\": \"https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz\",\n+      \"integrity\": \"sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=0.12.0\"\n+      }\n+    },\n+    \"node_modules/is-path-inside\": {\n+      \"version\": \"3.0.3\",\n+      \"resolved\": \"https://registry.npmjs.org/is-path-inside/-/is-path-inside-3.0.3.tgz\",\n+      \"integrity\": \"sha512-Fd4gABb+ycGAmKou8eMftCupSir5lRxqf4aD/vd0cD2qc4HL07OjCeuHMr8Ro4CoMaeCKDB0/ECBOVWjTwUvPQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      }\n+    },\n+    \"node_modules/is-stream\": {\n+      \"version\": \"2.0.1\",\n+      \"resolved\": \"https://registry.npmjs.org/is-stream/-/is-stream-2.0.1.tgz\",\n+      \"integrity\": \"sha512-hFoiJiTl63nn+kstHGBtewWSKnQLpyb155KHheA1l39uvtO9nWIop1p3udqPcUd/xbF1VLMO4n7OI6p7RbngDg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/sponsors/sindresorhus\"\n+      }\n+    },\n+    \"node_modules/isexe\": {\n+      \"version\": \"2.0.0\",\n+      \"resolved\": \"https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz\",\n+      \"integrity\": \"sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw==\",\n+      \"dev\": true,\n+      \"license\": \"ISC\"\n+    },\n+    \"node_modules/istanbul-lib-coverage\": {\n+      \"version\": \"3.2.2\",\n+      \"resolved\": \"https://registry.npmjs.org/istanbul-lib-coverage/-/istanbul-lib-coverage-3.2.2.tgz\",\n+      \"integrity\": \"sha512-O8dpsF+r0WV/8MNRKfnmrtCWhuKjxrq2w+jpzBL5UZKTi2LeVWnWOmWRxFlesJONmc+wLAGvKQZEOanko0LFTg==\",\n+      \"dev\": true,\n+      \"license\": \"BSD-3-Clause\",\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      }\n+    },\n+    \"node_modules/istanbul-lib-instrument\": {\n+      \"version\": \"6.0.3\",\n+      \"resolved\": \"https://registry.npmjs.org/istanbul-lib-instrument/-/istanbul-lib-instrument-6.0.3.tgz\",\n+      \"integrity\": \"sha512-Vtgk7L/R2JHyyGW07spoFlB8/lpjiOLTjMdms6AFMraYt3BaJauod/NGrfnVG/y4Ix1JEuMRPDPEj2ua+zz1/Q==\",\n+      \"dev\": true,\n+      \"license\": \"BSD-3-Clause\",\n+      \"dependencies\": {\n+        \"@babel/core\": \"^7.23.9\",\n+        \"@babel/parser\": \"^7.23.9\",\n+        \"@istanbuljs/schema\": \"^0.1.3\",\n+        \"istanbul-lib-coverage\": \"^3.2.0\",\n+        \"semver\": \"^7.5.4\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=10\"\n+      }\n+    },\n+    \"node_modules/istanbul-lib-report\": {\n+      \"version\": \"3.0.1\",\n+      \"resolved\": \"https://registry.npmjs.org/istanbul-lib-report/-/istanbul-lib-report-3.0.1.tgz\",\n+      \"integrity\": \"sha512-GCfE1mtsHGOELCU8e/Z7YWzpmybrx/+dSTfLrvY8qRmaY6zXTKWn6WQIjaAFw069icm6GVMNkgu0NzI4iPZUNw==\",\n+      \"dev\": true,\n+      \"license\": \"BSD-3-Clause\",\n+      \"dependencies\": {\n+        \"istanbul-lib-coverage\": \"^3.0.0\",\n+        \"make-dir\": \"^4.0.0\",\n+        \"supports-color\": \"^7.1.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=10\"\n+      }\n+    },\n+    \"node_modules/istanbul-lib-source-maps\": {\n+      \"version\": \"4.0.1\",\n+      \"resolved\": \"https://registry.npmjs.org/istanbul-lib-source-maps/-/istanbul-lib-source-maps-4.0.1.tgz\",\n+      \"integrity\": \"sha512-n3s8EwkdFIJCG3BPKBYvskgXGoy88ARzvegkitk60NxRdwltLOTaH7CUiMRXvwYorl0Q712iEjcWB+fK/MrWVw==\",\n+      \"dev\": true,\n+      \"license\": \"BSD-3-Clause\",\n+      \"dependencies\": {\n+        \"debug\": \"^4.1.1\",\n+        \"istanbul-lib-coverage\": \"^3.0.0\",\n+        \"source-map\": \"^0.6.1\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=10\"\n+      }\n+    },\n+    \"node_modules/istanbul-reports\": {\n+      \"version\": \"3.1.7\",\n+      \"resolved\": \"https://registry.npmjs.org/istanbul-reports/-/istanbul-reports-3.1.7.tgz\",\n+      \"integrity\": \"sha512-BewmUXImeuRk2YY0PVbxgKAysvhRPUQE0h5QRM++nVWyubKGV0l8qQ5op8+B2DOmwSe63Jivj0BjkPQVf8fP5g==\",\n+      \"dev\": true,\n+      \"license\": \"BSD-3-Clause\",\n+      \"dependencies\": {\n+        \"html-escaper\": \"^2.0.0\",\n+        \"istanbul-lib-report\": \"^3.0.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      }\n+    },\n+    \"node_modules/jake\": {\n+      \"version\": \"10.9.2\",\n+      \"resolved\": \"https://registry.npmjs.org/jake/-/jake-10.9.2.tgz\",\n+      \"integrity\": \"sha512-2P4SQ0HrLQ+fw6llpLnOaGAvN2Zu6778SJMrCUwns4fOoG9ayrTiZk3VV8sCPkVZF8ab0zksVpS8FDY5pRCNBA==\",\n+      \"dev\": true,\n+      \"license\": \"Apache-2.0\",\n+      \"dependencies\": {\n+        \"async\": \"^3.2.3\",\n+        \"chalk\": \"^4.0.2\",\n+        \"filelist\": \"^1.0.4\",\n+        \"minimatch\": \"^3.1.2\"\n+      },\n+      \"bin\": {\n+        \"jake\": \"bin/cli.js\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=10\"\n+      }\n+    },\n+    \"node_modules/jake/node_modules/brace-expansion\": {\n+      \"version\": \"1.1.12\",\n+      \"resolved\": \"https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.12.tgz\",\n+      \"integrity\": \"sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"balanced-match\": \"^1.0.0\",\n+        \"concat-map\": \"0.0.1\"\n+      }\n+    },\n+    \"node_modules/jake/node_modules/minimatch\": {\n+      \"version\": \"3.1.2\",\n+      \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz\",\n+      \"integrity\": \"sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==\",\n+      \"dev\": true,\n+      \"license\": \"ISC\",\n+      \"dependencies\": {\n+        \"brace-expansion\": \"^1.1.7\"\n+      },\n+      \"engines\": {\n+        \"node\": \"*\"\n+      }\n+    },\n+    \"node_modules/jest\": {\n+      \"version\": \"29.7.0\",\n+      \"resolved\": \"https://registry.npmjs.org/jest/-/jest-29.7.0.tgz\",\n+      \"integrity\": \"sha512-NIy3oAFp9shda19hy4HK0HRTWKtPJmGdnvywu01nOqNC2vZg+Z+fvJDxpMQA88eb2I9EcafcdjYgsDthnYTvGw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@jest/core\": \"^29.7.0\",\n+        \"@jest/types\": \"^29.6.3\",\n+        \"import-local\": \"^3.0.2\",\n+        \"jest-cli\": \"^29.7.0\"\n+      },\n+      \"bin\": {\n+        \"jest\": \"bin/jest.js\"\n+      },\n+      \"engines\": {\n+        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n+      },\n+      \"peerDependencies\": {\n+        \"node-notifier\": \"^8.0.1 || ^9.0.0 || ^10.0.0\"\n+      },\n+      \"peerDependenciesMeta\": {\n+        \"node-notifier\": {\n+          \"optional\": true\n+        }\n+      }\n+    },\n+    \"node_modules/jest-changed-files\": {\n+      \"version\": \"29.7.0\",\n+      \"resolved\": \"https://registry.npmjs.org/jest-changed-files/-/jest-changed-files-29.7.0.tgz\",\n+      \"integrity\": \"sha512-fEArFiwf1BpQ+4bXSprcDc3/x4HSzL4al2tozwVpDFpsxALjLYdyiIK4e5Vz66GQJIbXJ82+35PtysofptNX2w==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"execa\": \"^5.0.0\",\n+        \"jest-util\": \"^29.7.0\",\n+        \"p-limit\": \"^3.1.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n+      }\n+    },\n+    \"node_modules/jest-circus\": {\n+      \"version\": \"29.7.0\",\n+      \"resolved\": \"https://registry.npmjs.org/jest-circus/-/jest-circus-29.7.0.tgz\",\n+      \"integrity\": \"sha512-3E1nCMgipcTkCocFwM90XXQab9bS+GMsjdpmPrlelaxwD93Ad8iVEjX/vvHPdLPnFf+L40u+5+iutRdA1N9myw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@jest/environment\": \"^29.7.0\",\n+        \"@jest/expect\": \"^29.7.0\",\n+        \"@jest/test-result\": \"^29.7.0\",\n+        \"@jest/types\": \"^29.6.3\",\n+        \"@types/node\": \"*\",\n+        \"chalk\": \"^4.0.0\",\n+        \"co\": \"^4.6.0\",\n+        \"dedent\": \"^1.0.0\",\n+        \"is-generator-fn\": \"^2.0.0\",\n+        \"jest-each\": \"^29.7.0\",\n+        \"jest-matcher-utils\": \"^29.7.0\",\n+        \"jest-message-util\": \"^29.7.0\",\n+        \"jest-runtime\": \"^29.7.0\",\n+        \"jest-snapshot\": \"^29.7.0\",\n+        \"jest-util\": \"^29.7.0\",\n+        \"p-limit\": \"^3.1.0\",\n+        \"pretty-format\": \"^29.7.0\",\n+        \"pure-rand\": \"^6.0.0\",\n+        \"slash\": \"^3.0.0\",\n+        \"stack-utils\": \"^2.0.3\"\n+      },\n+      \"engines\": {\n+        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n+      }\n+    },\n+    \"node_modules/jest-cli\": {\n+      \"version\": \"29.7.0\",\n+      \"resolved\": \"https://registry.npmjs.org/jest-cli/-/jest-cli-29.7.0.tgz\",\n+      \"integrity\": \"sha512-OVVobw2IubN/GSYsxETi+gOe7Ka59EFMR/twOU3Jb2GnKKeMGJB5SGUUrEz3SFVmJASUdZUzy83sLNNQ2gZslg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@jest/core\": \"^29.7.0\",\n+        \"@jest/test-result\": \"^29.7.0\",\n+        \"@jest/types\": \"^29.6.3\",\n+        \"chalk\": \"^4.0.0\",\n+        \"create-jest\": \"^29.7.0\",\n+        \"exit\": \"^0.1.2\",\n+        \"import-local\": \"^3.0.2\",\n+        \"jest-config\": \"^29.7.0\",\n+        \"jest-util\": \"^29.7.0\",\n+        \"jest-validate\": \"^29.7.0\",\n+        \"yargs\": \"^17.3.1\"\n+      },\n+      \"bin\": {\n+        \"jest\": \"bin/jest.js\"\n+      },\n+      \"engines\": {\n+        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n+      },\n+      \"peerDependencies\": {\n+        \"node-notifier\": \"^8.0.1 || ^9.0.0 || ^10.0.0\"\n+      },\n+      \"peerDependenciesMeta\": {\n+        \"node-notifier\": {\n+          \"optional\": true\n+        }\n+      }\n+    },\n+    \"node_modules/jest-config\": {\n+      \"version\": \"29.7.0\",\n+      \"resolved\": \"https://registry.npmjs.org/jest-config/-/jest-config-29.7.0.tgz\",\n+      \"integrity\": \"sha512-uXbpfeQ7R6TZBqI3/TxCU4q4ttk3u0PJeC+E0zbfSoSjq6bJ7buBPxzQPL0ifrkY4DNu4JUdk0ImlBUYi840eQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@babel/core\": \"^7.11.6\",\n+        \"@jest/test-sequencer\": \"^29.7.0\",\n+        \"@jest/types\": \"^29.6.3\",\n+        \"babel-jest\": \"^29.7.0\",\n+        \"chalk\": \"^4.0.0\",\n+        \"ci-info\": \"^3.2.0\",\n+        \"deepmerge\": \"^4.2.2\",\n+        \"glob\": \"^7.1.3\",\n+        \"graceful-fs\": \"^4.2.9\",\n+        \"jest-circus\": \"^29.7.0\",\n+        \"jest-environment-node\": \"^29.7.0\",\n+        \"jest-get-type\": \"^29.6.3\",\n+        \"jest-regex-util\": \"^29.6.3\",\n+        \"jest-resolve\": \"^29.7.0\",\n+        \"jest-runner\": \"^29.7.0\",\n+        \"jest-util\": \"^29.7.0\",\n+        \"jest-validate\": \"^29.7.0\",\n+        \"micromatch\": \"^4.0.4\",\n+        \"parse-json\": \"^5.2.0\",\n+        \"pretty-format\": \"^29.7.0\",\n+        \"slash\": \"^3.0.0\",\n+        \"strip-json-comments\": \"^3.1.1\"\n+      },\n+      \"engines\": {\n+        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n+      },\n+      \"peerDependencies\": {\n+        \"@types/node\": \"*\",\n+        \"ts-node\": \">=9.0.0\"\n+      },\n+      \"peerDependenciesMeta\": {\n+        \"@types/node\": {\n+          \"optional\": true\n+        },\n+        \"ts-node\": {\n+          \"optional\": true\n+        }\n+      }\n+    },\n+    \"node_modules/jest-diff\": {\n+      \"version\": \"29.7.0\",\n+      \"resolved\": \"https://registry.npmjs.org/jest-diff/-/jest-diff-29.7.0.tgz\",\n+      \"integrity\": \"sha512-LMIgiIrhigmPrs03JHpxUh2yISK3vLFPkAodPeo0+BuF7wA2FoQbkEg1u8gBYBThncu7e1oEDUfIXVuTqLRUjw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"chalk\": \"^4.0.0\",\n+        \"diff-sequences\": \"^29.6.3\",\n+        \"jest-get-type\": \"^29.6.3\",\n+        \"pretty-format\": \"^29.7.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n+      }\n+    },\n+    \"node_modules/jest-docblock\": {\n+      \"version\": \"29.7.0\",\n+      \"resolved\": \"https://registry.npmjs.org/jest-docblock/-/jest-docblock-29.7.0.tgz\",\n+      \"integrity\": \"sha512-q617Auw3A612guyaFgsbFeYpNP5t2aoUNLwBUbc/0kD1R4t9ixDbyFTHd1nok4epoVFpr7PmeWHrhvuV3XaJ4g==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"detect-newline\": \"^3.0.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n+      }\n+    },\n+    \"node_modules/jest-each\": {\n+      \"version\": \"29.7.0\",\n+      \"resolved\": \"https://registry.npmjs.org/jest-each/-/jest-each-29.7.0.tgz\",\n+      \"integrity\": \"sha512-gns+Er14+ZrEoC5fhOfYCY1LOHHr0TI+rQUHZS8Ttw2l7gl+80eHc/gFf2Ktkw0+SIACDTeWvpFcv3B04VembQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@jest/types\": \"^29.6.3\",\n+        \"chalk\": \"^4.0.0\",\n+        \"jest-get-type\": \"^29.6.3\",\n+        \"jest-util\": \"^29.7.0\",\n+        \"pretty-format\": \"^29.7.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n+      }\n+    },\n+    \"node_modules/jest-environment-node\": {\n+      \"version\": \"29.7.0\",\n+      \"resolved\": \"https://registry.npmjs.org/jest-environment-node/-/jest-environment-node-29.7.0.tgz\",\n+      \"integrity\": \"sha512-DOSwCRqXirTOyheM+4d5YZOrWcdu0LNZ87ewUoywbcb2XR4wKgqiG8vNeYwhjFMbEkfju7wx2GYH0P2gevGvFw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@jest/environment\": \"^29.7.0\",\n+        \"@jest/fake-timers\": \"^29.7.0\",\n+        \"@jest/types\": \"^29.6.3\",\n+        \"@types/node\": \"*\",\n+        \"jest-mock\": \"^29.7.0\",\n+        \"jest-util\": \"^29.7.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n+      }\n+    },\n+    \"node_modules/jest-get-type\": {\n+      \"version\": \"29.6.3\",\n+      \"resolved\": \"https://registry.npmjs.org/jest-get-type/-/jest-get-type-29.6.3.tgz\",\n+      \"integrity\": \"sha512-zrteXnqYxfQh7l5FHyL38jL39di8H8rHoecLH3JNxH3BwOrBsNeabdap5e0I23lD4HHI8W5VFBZqG4Eaq5LNcw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n+      }\n+    },\n+    \"node_modules/jest-haste-map\": {\n+      \"version\": \"29.7.0\",\n+      \"resolved\": \"https://registry.npmjs.org/jest-haste-map/-/jest-haste-map-29.7.0.tgz\",\n+      \"integrity\": \"sha512-fP8u2pyfqx0K1rGn1R9pyE0/KTn+G7PxktWidOBTqFPLYX0b9ksaMFkhK5vrS3DVun09pckLdlx90QthlW7AmA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@jest/types\": \"^29.6.3\",\n+        \"@types/graceful-fs\": \"^4.1.3\",\n+        \"@types/node\": \"*\",\n+        \"anymatch\": \"^3.0.3\",\n+        \"fb-watchman\": \"^2.0.0\",\n+        \"graceful-fs\": \"^4.2.9\",\n+        \"jest-regex-util\": \"^29.6.3\",\n+        \"jest-util\": \"^29.7.0\",\n+        \"jest-worker\": \"^29.7.0\",\n+        \"micromatch\": \"^4.0.4\",\n+        \"walker\": \"^1.0.8\"\n+      },\n+      \"engines\": {\n+        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n+      },\n+      \"optionalDependencies\": {\n+        \"fsevents\": \"^2.3.2\"\n+      }\n+    },\n+    \"node_modules/jest-leak-detector\": {\n+      \"version\": \"29.7.0\",\n+      \"resolved\": \"https://registry.npmjs.org/jest-leak-detector/-/jest-leak-detector-29.7.0.tgz\",\n+      \"integrity\": \"sha512-kYA8IJcSYtST2BY9I+SMC32nDpBT3J2NvWJx8+JCuCdl/CR1I4EKUJROiP8XtCcxqgTTBGJNdbB1A8XRKbTetw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"jest-get-type\": \"^29.6.3\",\n+        \"pretty-format\": \"^29.7.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n+      }\n+    },\n+    \"node_modules/jest-matcher-utils\": {\n+      \"version\": \"29.7.0\",\n+      \"resolved\": \"https://registry.npmjs.org/jest-matcher-utils/-/jest-matcher-utils-29.7.0.tgz\",\n+      \"integrity\": \"sha512-sBkD+Xi9DtcChsI3L3u0+N0opgPYnCRPtGcQYrgXmR+hmt/fYfWAL0xRXYU8eWOdfuLgBe0YCW3AFtnRLagq/g==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"chalk\": \"^4.0.0\",\n+        \"jest-diff\": \"^29.7.0\",\n+        \"jest-get-type\": \"^29.6.3\",\n+        \"pretty-format\": \"^29.7.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n+      }\n+    },\n+    \"node_modules/jest-message-util\": {\n+      \"version\": \"29.7.0\",\n+      \"resolved\": \"https://registry.npmjs.org/jest-message-util/-/jest-message-util-29.7.0.tgz\",\n+      \"integrity\": \"sha512-GBEV4GRADeP+qtB2+6u61stea8mGcOT4mCtrYISZwfu9/ISHFJ/5zOMXYbpBE9RsS5+Gb63DW4FgmnKJ79Kf6w==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@babel/code-frame\": \"^7.12.13\",\n+        \"@jest/types\": \"^29.6.3\",\n+        \"@types/stack-utils\": \"^2.0.0\",\n+        \"chalk\": \"^4.0.0\",\n+        \"graceful-fs\": \"^4.2.9\",\n+        \"micromatch\": \"^4.0.4\",\n+        \"pretty-format\": \"^29.7.0\",\n+        \"slash\": \"^3.0.0\",\n+        \"stack-utils\": \"^2.0.3\"\n+      },\n+      \"engines\": {\n+        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n+      }\n+    },\n+    \"node_modules/jest-mock\": {\n+      \"version\": \"29.7.0\",\n+      \"resolved\": \"https://registry.npmjs.org/jest-mock/-/jest-mock-29.7.0.tgz\",\n+      \"integrity\": \"sha512-ITOMZn+UkYS4ZFh83xYAOzWStloNzJFO2s8DWrE4lhtGD+AorgnbkiKERe4wQVBydIGPx059g6riW5Btp6Llnw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@jest/types\": \"^29.6.3\",\n+        \"@types/node\": \"*\",\n+        \"jest-util\": \"^29.7.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n+      }\n+    },\n+    \"node_modules/jest-pnp-resolver\": {\n+      \"version\": \"1.2.3\",\n+      \"resolved\": \"https://registry.npmjs.org/jest-pnp-resolver/-/jest-pnp-resolver-1.2.3.tgz\",\n+      \"integrity\": \"sha512-+3NpwQEnRoIBtx4fyhblQDPgJI0H1IEIkX7ShLUjPGA7TtUTvI1oiKi3SR4oBR0hQhQR80l4WAe5RrXBwWMA8w==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=6\"\n+      },\n+      \"peerDependencies\": {\n+        \"jest-resolve\": \"*\"\n+      },\n+      \"peerDependenciesMeta\": {\n+        \"jest-resolve\": {\n+          \"optional\": true\n+        }\n+      }\n+    },\n+    \"node_modules/jest-regex-util\": {\n+      \"version\": \"29.6.3\",\n+      \"resolved\": \"https://registry.npmjs.org/jest-regex-util/-/jest-regex-util-29.6.3.tgz\",\n+      \"integrity\": \"sha512-KJJBsRCyyLNWCNBOvZyRDnAIfUiRJ8v+hOBQYGn8gDyF3UegwiP4gwRR3/SDa42g1YbVycTidUF3rKjyLFDWbg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n+      }\n+    },\n+    \"node_modules/jest-resolve\": {\n+      \"version\": \"29.7.0\",\n+      \"resolved\": \"https://registry.npmjs.org/jest-resolve/-/jest-resolve-29.7.0.tgz\",\n+      \"integrity\": \"sha512-IOVhZSrg+UvVAshDSDtHyFCCBUl/Q3AAJv8iZ6ZjnZ74xzvwuzLXid9IIIPgTnY62SJjfuupMKZsZQRsCvxEgA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"chalk\": \"^4.0.0\",\n+        \"graceful-fs\": \"^4.2.9\",\n+        \"jest-haste-map\": \"^29.7.0\",\n+        \"jest-pnp-resolver\": \"^1.2.2\",\n+        \"jest-util\": \"^29.7.0\",\n+        \"jest-validate\": \"^29.7.0\",\n+        \"resolve\": \"^1.20.0\",\n+        \"resolve.exports\": \"^2.0.0\",\n+        \"slash\": \"^3.0.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n+      }\n+    },\n+    \"node_modules/jest-resolve-dependencies\": {\n+      \"version\": \"29.7.0\",\n+      \"resolved\": \"https://registry.npmjs.org/jest-resolve-dependencies/-/jest-resolve-dependencies-29.7.0.tgz\",\n+      \"integrity\": \"sha512-un0zD/6qxJ+S0et7WxeI3H5XSe9lTBBR7bOHCHXkKR6luG5mwDDlIzVQ0V5cZCuoTgEdcdwzTghYkTWfubi+nA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"jest-regex-util\": \"^29.6.3\",\n+        \"jest-snapshot\": \"^29.7.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n+      }\n+    },\n+    \"node_modules/jest-runner\": {\n+      \"version\": \"29.7.0\",\n+      \"resolved\": \"https://registry.npmjs.org/jest-runner/-/jest-runner-29.7.0.tgz\",\n+      \"integrity\": \"sha512-fsc4N6cPCAahybGBfTRcq5wFR6fpLznMg47sY5aDpsoejOcVYFb07AHuSnR0liMcPTgBsA3ZJL6kFOjPdoNipQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@jest/console\": \"^29.7.0\",\n+        \"@jest/environment\": \"^29.7.0\",\n+        \"@jest/test-result\": \"^29.7.0\",\n+        \"@jest/transform\": \"^29.7.0\",\n+        \"@jest/types\": \"^29.6.3\",\n+        \"@types/node\": \"*\",\n+        \"chalk\": \"^4.0.0\",\n+        \"emittery\": \"^0.13.1\",\n+        \"graceful-fs\": \"^4.2.9\",\n+        \"jest-docblock\": \"^29.7.0\",\n+        \"jest-environment-node\": \"^29.7.0\",\n+        \"jest-haste-map\": \"^29.7.0\",\n+        \"jest-leak-detector\": \"^29.7.0\",\n+        \"jest-message-util\": \"^29.7.0\",\n+        \"jest-resolve\": \"^29.7.0\",\n+        \"jest-runtime\": \"^29.7.0\",\n+        \"jest-util\": \"^29.7.0\",\n+        \"jest-watcher\": \"^29.7.0\",\n+        \"jest-worker\": \"^29.7.0\",\n+        \"p-limit\": \"^3.1.0\",\n+        \"source-map-support\": \"0.5.13\"\n+      },\n+      \"engines\": {\n+        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n+      }\n+    },\n+    \"node_modules/jest-runtime\": {\n+      \"version\": \"29.7.0\",\n+      \"resolved\": \"https://registry.npmjs.org/jest-runtime/-/jest-runtime-29.7.0.tgz\",\n+      \"integrity\": \"sha512-gUnLjgwdGqW7B4LvOIkbKs9WGbn+QLqRQQ9juC6HndeDiezIwhDP+mhMwHWCEcfQ5RUXa6OPnFF8BJh5xegwwQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@jest/environment\": \"^29.7.0\",\n+        \"@jest/fake-timers\": \"^29.7.0\",\n+        \"@jest/globals\": \"^29.7.0\",\n+        \"@jest/source-map\": \"^29.6.3\",\n+        \"@jest/test-result\": \"^29.7.0\",\n+        \"@jest/transform\": \"^29.7.0\",\n+        \"@jest/types\": \"^29.6.3\",\n+        \"@types/node\": \"*\",\n+        \"chalk\": \"^4.0.0\",\n+        \"cjs-module-lexer\": \"^1.0.0\",\n+        \"collect-v8-coverage\": \"^1.0.0\",\n+        \"glob\": \"^7.1.3\",\n+        \"graceful-fs\": \"^4.2.9\",\n+        \"jest-haste-map\": \"^29.7.0\",\n+        \"jest-message-util\": \"^29.7.0\",\n+        \"jest-mock\": \"^29.7.0\",\n+        \"jest-regex-util\": \"^29.6.3\",\n+        \"jest-resolve\": \"^29.7.0\",\n+        \"jest-snapshot\": \"^29.7.0\",\n+        \"jest-util\": \"^29.7.0\",\n+        \"slash\": \"^3.0.0\",\n+        \"strip-bom\": \"^4.0.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n+      }\n+    },\n+    \"node_modules/jest-snapshot\": {\n+      \"version\": \"29.7.0\",\n+      \"resolved\": \"https://registry.npmjs.org/jest-snapshot/-/jest-snapshot-29.7.0.tgz\",\n+      \"integrity\": \"sha512-Rm0BMWtxBcioHr1/OX5YCP8Uov4riHvKPknOGs804Zg9JGZgmIBkbtlxJC/7Z4msKYVbIJtfU+tKb8xlYNfdkw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@babel/core\": \"^7.11.6\",\n+        \"@babel/generator\": \"^7.7.2\",\n+        \"@babel/plugin-syntax-jsx\": \"^7.7.2\",\n+        \"@babel/plugin-syntax-typescript\": \"^7.7.2\",\n+        \"@babel/types\": \"^7.3.3\",\n+        \"@jest/expect-utils\": \"^29.7.0\",\n+        \"@jest/transform\": \"^29.7.0\",\n+        \"@jest/types\": \"^29.6.3\",\n+        \"babel-preset-current-node-syntax\": \"^1.0.0\",\n+        \"chalk\": \"^4.0.0\",\n+        \"expect\": \"^29.7.0\",\n+        \"graceful-fs\": \"^4.2.9\",\n+        \"jest-diff\": \"^29.7.0\",\n+        \"jest-get-type\": \"^29.6.3\",\n+        \"jest-matcher-utils\": \"^29.7.0\",\n+        \"jest-message-util\": \"^29.7.0\",\n+        \"jest-util\": \"^29.7.0\",\n+        \"natural-compare\": \"^1.4.0\",\n+        \"pretty-format\": \"^29.7.0\",\n+        \"semver\": \"^7.5.3\"\n+      },\n+      \"engines\": {\n+        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n+      }\n+    },\n+    \"node_modules/jest-util\": {\n+      \"version\": \"29.7.0\",\n+      \"resolved\": \"https://registry.npmjs.org/jest-util/-/jest-util-29.7.0.tgz\",\n+      \"integrity\": \"sha512-z6EbKajIpqGKU56y5KBUgy1dt1ihhQJgWzUlZHArA/+X2ad7Cb5iF+AK1EWVL/Bo7Rz9uurpqw6SiBCefUbCGA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@jest/types\": \"^29.6.3\",\n+        \"@types/node\": \"*\",\n+        \"chalk\": \"^4.0.0\",\n+        \"ci-info\": \"^3.2.0\",\n+        \"graceful-fs\": \"^4.2.9\",\n+        \"picomatch\": \"^2.2.3\"\n+      },\n+      \"engines\": {\n+        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n+      }\n+    },\n+    \"node_modules/jest-validate\": {\n+      \"version\": \"29.7.0\",\n+      \"resolved\": \"https://registry.npmjs.org/jest-validate/-/jest-validate-29.7.0.tgz\",\n+      \"integrity\": \"sha512-ZB7wHqaRGVw/9hST/OuFUReG7M8vKeq0/J2egIGLdvjHCmYqGARhzXmtgi+gVeZ5uXFF219aOc3Ls2yLg27tkw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@jest/types\": \"^29.6.3\",\n+        \"camelcase\": \"^6.2.0\",\n+        \"chalk\": \"^4.0.0\",\n+        \"jest-get-type\": \"^29.6.3\",\n+        \"leven\": \"^3.1.0\",\n+        \"pretty-format\": \"^29.7.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n+      }\n+    },\n+    \"node_modules/jest-validate/node_modules/camelcase\": {\n+      \"version\": \"6.3.0\",\n+      \"resolved\": \"https://registry.npmjs.org/camelcase/-/camelcase-6.3.0.tgz\",\n+      \"integrity\": \"sha512-Gmy6FhYlCY7uOElZUSbxo2UCDH8owEk996gkbrpsgGtrJLM3J7jGxl9Ic7Qwwj4ivOE5AWZWRMecDdF7hqGjFA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=10\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/sponsors/sindresorhus\"\n+      }\n+    },\n+    \"node_modules/jest-watcher\": {\n+      \"version\": \"29.7.0\",\n+      \"resolved\": \"https://registry.npmjs.org/jest-watcher/-/jest-watcher-29.7.0.tgz\",\n+      \"integrity\": \"sha512-49Fg7WXkU3Vl2h6LbLtMQ/HyB6rXSIX7SqvBLQmssRBGN9I0PNvPmAmCWSOY6SOvrjhI/F7/bGAv9RtnsPA03g==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@jest/test-result\": \"^29.7.0\",\n+        \"@jest/types\": \"^29.6.3\",\n+        \"@types/node\": \"*\",\n+        \"ansi-escapes\": \"^4.2.1\",\n+        \"chalk\": \"^4.0.0\",\n+        \"emittery\": \"^0.13.1\",\n+        \"jest-util\": \"^29.7.0\",\n+        \"string-length\": \"^4.0.1\"\n+      },\n+      \"engines\": {\n+        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n+      }\n+    },\n+    \"node_modules/jest-worker\": {\n+      \"version\": \"29.7.0\",\n+      \"resolved\": \"https://registry.npmjs.org/jest-worker/-/jest-worker-29.7.0.tgz\",\n+      \"integrity\": \"sha512-eIz2msL/EzL9UFTFFx7jBTkeZfku0yUAyZZZmJ93H2TYEiroIx2PQjEXcwYtYl8zXCxb+PAmA2hLIt/6ZEkPHw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@types/node\": \"*\",\n+        \"jest-util\": \"^29.7.0\",\n+        \"merge-stream\": \"^2.0.0\",\n+        \"supports-color\": \"^8.0.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n+      }\n+    },\n+    \"node_modules/jest-worker/node_modules/supports-color\": {\n+      \"version\": \"8.1.1\",\n+      \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-8.1.1.tgz\",\n+      \"integrity\": \"sha512-MpUEN2OodtUzxvKQl72cUF7RQ5EiHsGvSsVG0ia9c5RbWGL2CI4C7EpPS8UTBIplnlzZiNuV56w+FuNxy3ty2Q==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"has-flag\": \"^4.0.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=10\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/chalk/supports-color?sponsor=1\"\n+      }\n+    },\n+    \"node_modules/js-tokens\": {\n+      \"version\": \"4.0.0\",\n+      \"resolved\": \"https://registry.npmjs.org/js-tokens/-/js-tokens-4.0.0.tgz\",\n+      \"integrity\": \"sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/js-yaml\": {\n+      \"version\": \"4.1.0\",\n+      \"resolved\": \"https://registry.npmjs.org/js-yaml/-/js-yaml-4.1.0.tgz\",\n+      \"integrity\": \"sha512-wpxZs9NoxZaJESJGIZTyDEaYpl0FKSA+FB9aJiyemKhMwkxQg63h4T1KJgUGHpTqPDNRcmmYLugrRjJlBtWvRA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"argparse\": \"^2.0.1\"\n+      },\n+      \"bin\": {\n+        \"js-yaml\": \"bin/js-yaml.js\"\n+      }\n+    },\n+    \"node_modules/jsesc\": {\n+      \"version\": \"3.1.0\",\n+      \"resolved\": \"https://registry.npmjs.org/jsesc/-/jsesc-3.1.0.tgz\",\n+      \"integrity\": \"sha512-/sM3dO2FOzXjKQhJuo0Q173wf2KOo8t4I8vHy6lF9poUp7bKT0/NHE8fPX23PwfhnykfqnC2xRxOnVw5XuGIaA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"bin\": {\n+        \"jsesc\": \"bin/jsesc\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=6\"\n+      }\n+    },\n+    \"node_modules/json-buffer\": {\n+      \"version\": \"3.0.1\",\n+      \"resolved\": \"https://registry.npmjs.org/json-buffer/-/json-buffer-3.0.1.tgz\",\n+      \"integrity\": \"sha512-4bV5BfR2mqfQTJm+V5tPPdf+ZpuhiIvTuAB5g8kcrXOZpTT/QwwVRWBywX1ozr6lEuPdbHxwaJlm9G6mI2sfSQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/json-parse-even-better-errors\": {\n+      \"version\": \"2.3.1\",\n+      \"resolved\": \"https://registry.npmjs.org/json-parse-even-better-errors/-/json-parse-even-better-errors-2.3.1.tgz\",\n+      \"integrity\": \"sha512-xyFwyhro/JEof6Ghe2iz2NcXoj2sloNsWr/XsERDK/oiPCfaNhl5ONfp+jQdAZRQQ0IJWNzH9zIZF7li91kh2w==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/json-schema-traverse\": {\n+      \"version\": \"0.4.1\",\n+      \"resolved\": \"https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-0.4.1.tgz\",\n+      \"integrity\": \"sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/json-stable-stringify-without-jsonify\": {\n+      \"version\": \"1.0.1\",\n+      \"resolved\": \"https://registry.npmjs.org/json-stable-stringify-without-jsonify/-/json-stable-stringify-without-jsonify-1.0.1.tgz\",\n+      \"integrity\": \"sha512-Bdboy+l7tA3OGW6FjyFHWkP5LuByj1Tk33Ljyq0axyzdk9//JSi2u3fP1QSmd1KNwq6VOKYGlAu87CisVir6Pw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/json5\": {\n+      \"version\": \"2.2.3\",\n+      \"resolved\": \"https://registry.npmjs.org/json5/-/json5-2.2.3.tgz\",\n+      \"integrity\": \"sha512-XmOWe7eyHYH14cLdVPoyg+GOH3rYX++KpzrylJwSW98t3Nk+U8XOl8FWKOgwtzdb8lXGf6zYwDUzeHMWfxasyg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"bin\": {\n+        \"json5\": \"lib/cli.js\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=6\"\n+      }\n+    },\n+    \"node_modules/keyv\": {\n+      \"version\": \"4.5.4\",\n+      \"resolved\": \"https://registry.npmjs.org/keyv/-/keyv-4.5.4.tgz\",\n+      \"integrity\": \"sha512-oxVHkHR/EJf2CNXnWxRLW6mg7JyCCUcG0DtEGmL2ctUo1PNTin1PUil+r/+4r5MpVgC/fn1kjsx7mjSujKqIpw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"json-buffer\": \"3.0.1\"\n+      }\n+    },\n+    \"node_modules/kleur\": {\n+      \"version\": \"3.0.3\",\n+      \"resolved\": \"https://registry.npmjs.org/kleur/-/kleur-3.0.3.tgz\",\n+      \"integrity\": \"sha512-eTIzlVOSUR+JxdDFepEYcBMtZ9Qqdef+rnzWdRZuMbOywu5tO2w2N7rqjoANZ5k9vywhL6Br1VRjUIgTQx4E8w==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=6\"\n+      }\n+    },\n+    \"node_modules/leven\": {\n+      \"version\": \"3.1.0\",\n+      \"resolved\": \"https://registry.npmjs.org/leven/-/leven-3.1.0.tgz\",\n+      \"integrity\": \"sha512-qsda+H8jTaUaN/x5vzW2rzc+8Rw4TAQ/4KjB46IwK5VH+IlVeeeje/EoZRpiXvIqjFgK84QffqPztGI3VBLG1A==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=6\"\n+      }\n+    },\n+    \"node_modules/levn\": {\n+      \"version\": \"0.4.1\",\n+      \"resolved\": \"https://registry.npmjs.org/levn/-/levn-0.4.1.tgz\",\n+      \"integrity\": \"sha512-+bT2uH4E5LGE7h/n3evcS/sQlJXCpIp6ym8OWJ5eV6+67Dsql/LaaT7qJBAt2rzfoa/5QBGBhxDix1dMt2kQKQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"prelude-ls\": \"^1.2.1\",\n+        \"type-check\": \"~0.4.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">= 0.8.0\"\n+      }\n+    },\n+    \"node_modules/lines-and-columns\": {\n+      \"version\": \"1.2.4\",\n+      \"resolved\": \"https://registry.npmjs.org/lines-and-columns/-/lines-and-columns-1.2.4.tgz\",\n+      \"integrity\": \"sha512-7ylylesZQ/PV29jhEDl3Ufjo6ZX7gCqJr5F7PKrqc93v7fzSymt1BpwEU8nAUXs8qzzvqhbjhK5QZg6Mt/HkBg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/locate-path\": {\n+      \"version\": \"6.0.0\",\n+      \"resolved\": \"https://registry.npmjs.org/locate-path/-/locate-path-6.0.0.tgz\",\n+      \"integrity\": \"sha512-iPZK6eYjbxRu3uB4/WZ3EsEIMJFMqAoopl3R+zuq0UjcAm/MO6KCweDgPfP3elTztoKP3KtnVHxTn2NHBSDVUw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"p-locate\": \"^5.0.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=10\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/sponsors/sindresorhus\"\n+      }\n+    },\n+    \"node_modules/lodash.memoize\": {\n+      \"version\": \"4.1.2\",\n+      \"resolved\": \"https://registry.npmjs.org/lodash.memoize/-/lodash.memoize-4.1.2.tgz\",\n+      \"integrity\": \"sha512-t7j+NzmgnQzTAYXcsHYLgimltOV1MXHtlOWf6GjL9Kj8GK5FInw5JotxvbOs+IvV1/Dzo04/fCGfLVs7aXb4Ag==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/lodash.merge\": {\n+      \"version\": \"4.6.2\",\n+      \"resolved\": \"https://registry.npmjs.org/lodash.merge/-/lodash.merge-4.6.2.tgz\",\n+      \"integrity\": \"sha512-0KpjqXRVvrYyCsX1swR/XTK0va6VQkQM6MNo7PqW77ByjAhoARA8EfrP1N4+KlKj8YS0ZUCtRT/YUuhyYDujIQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/lru-cache\": {\n+      \"version\": \"5.1.1\",\n+      \"resolved\": \"https://registry.npmjs.org/lru-cache/-/lru-cache-5.1.1.tgz\",\n+      \"integrity\": \"sha512-KpNARQA3Iwv+jTA0utUVVbrh+Jlrr1Fv0e56GGzAFOXN7dk/FviaDW8LHmK52DlcH4WP2n6gI8vN1aesBFgo9w==\",\n+      \"dev\": true,\n+      \"license\": \"ISC\",\n+      \"dependencies\": {\n+        \"yallist\": \"^3.0.2\"\n+      }\n+    },\n+    \"node_modules/make-dir\": {\n+      \"version\": \"4.0.0\",\n+      \"resolved\": \"https://registry.npmjs.org/make-dir/-/make-dir-4.0.0.tgz\",\n+      \"integrity\": \"sha512-hXdUTZYIVOt1Ex//jAQi+wTZZpUpwBj/0QsOzqegb3rGMMeJiSEu5xLHnYfBrRV4RH2+OCSOO95Is/7x1WJ4bw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"semver\": \"^7.5.3\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=10\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/sponsors/sindresorhus\"\n+      }\n+    },\n+    \"node_modules/make-error\": {\n+      \"version\": \"1.3.6\",\n+      \"resolved\": \"https://registry.npmjs.org/make-error/-/make-error-1.3.6.tgz\",\n+      \"integrity\": \"sha512-s8UhlNe7vPKomQhC1qFelMokr/Sc3AgNbso3n74mVPA5LTZwkB9NlXf4XPamLxJE8h0gh73rM94xvwRT2CVInw==\",\n+      \"dev\": true,\n+      \"license\": \"ISC\"\n+    },\n+    \"node_modules/makeerror\": {\n+      \"version\": \"1.0.12\",\n+      \"resolved\": \"https://registry.npmjs.org/makeerror/-/makeerror-1.0.12.tgz\",\n+      \"integrity\": \"sha512-JmqCvUhmt43madlpFzG4BQzG2Z3m6tvQDNKdClZnO3VbIudJYmxsT0FNJMeiB2+JTSlTQTSbU8QdesVmwJcmLg==\",\n+      \"dev\": true,\n+      \"license\": \"BSD-3-Clause\",\n+      \"dependencies\": {\n+        \"tmpl\": \"1.0.5\"\n+      }\n+    },\n+    \"node_modules/merge-stream\": {\n+      \"version\": \"2.0.0\",\n+      \"resolved\": \"https://registry.npmjs.org/merge-stream/-/merge-stream-2.0.0.tgz\",\n+      \"integrity\": \"sha512-abv/qOcuPfk3URPfDzmZU1LKmuw8kT+0nIHvKrKgFrwifol/doWcdA4ZqsWQ8ENrFKkd67Mfpo/LovbIUsbt3w==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/merge2\": {\n+      \"version\": \"1.4.1\",\n+      \"resolved\": \"https://registry.npmjs.org/merge2/-/merge2-1.4.1.tgz\",\n+      \"integrity\": \"sha512-8q7VEgMJW4J8tcfVPy8g09NcQwZdbwFEqhe/WZkoIzjn/3TGDwtOCYtXGxA3O8tPzpczCCDgv+P2P5y00ZJOOg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">= 8\"\n+      }\n+    },\n+    \"node_modules/micromatch\": {\n+      \"version\": \"4.0.8\",\n+      \"resolved\": \"https://registry.npmjs.org/micromatch/-/micromatch-4.0.8.tgz\",\n+      \"integrity\": \"sha512-PXwfBhYu0hBCPw8Dn0E+WDYb7af3dSLVWKi3HGv84IdF4TyFoC0ysxFd0Goxw7nSv4T/PzEJQxsYsEiFCKo2BA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"braces\": \"^3.0.3\",\n+        \"picomatch\": \"^2.3.1\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=8.6\"\n+      }\n+    },\n+    \"node_modules/mimic-fn\": {\n+      \"version\": \"2.1.0\",\n+      \"resolved\": \"https://registry.npmjs.org/mimic-fn/-/mimic-fn-2.1.0.tgz\",\n+      \"integrity\": \"sha512-OqbOk5oEQeAZ8WXWydlu9HJjz9WVdEIvamMCcXmuqUYjTknH/sqsWvhQ3vgwKFRR1HpjvNBKQ37nbJgYzGqGcg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=6\"\n+      }\n+    },\n+    \"node_modules/minimatch\": {\n+      \"version\": \"9.0.3\",\n+      \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-9.0.3.tgz\",\n+      \"integrity\": \"sha512-RHiac9mvaRw0x3AYRgDC1CxAP7HTcNrrECeA8YYJeWnpo+2Q5CegtZjaotWTWxDG3UeGA1coE05iH1mPjT/2mg==\",\n+      \"dev\": true,\n+      \"license\": \"ISC\",\n+      \"dependencies\": {\n+        \"brace-expansion\": \"^2.0.1\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=16 || 14 >=14.17\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/sponsors/isaacs\"\n+      }\n+    },\n+    \"node_modules/ms\": {\n+      \"version\": \"2.1.3\",\n+      \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.3.tgz\",\n+      \"integrity\": \"sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/natural-compare\": {\n+      \"version\": \"1.4.0\",\n+      \"resolved\": \"https://registry.npmjs.org/natural-compare/-/natural-compare-1.4.0.tgz\",\n+      \"integrity\": \"sha512-OWND8ei3VtNC9h7V60qff3SVobHr996CTwgxubgyQYEpg290h9J0buyECNNJexkFm5sOajh5G116RYA1c8ZMSw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/node-int64\": {\n+      \"version\": \"0.4.0\",\n+      \"resolved\": \"https://registry.npmjs.org/node-int64/-/node-int64-0.4.0.tgz\",\n+      \"integrity\": \"sha512-O5lz91xSOeoXP6DulyHfllpq+Eg00MWitZIbtPfoSEvqIHdl5gfcY6hYzDWnj0qD5tz52PI08u9qUvSVeUBeHw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/node-releases\": {\n+      \"version\": \"2.0.19\",\n+      \"resolved\": \"https://registry.npmjs.org/node-releases/-/node-releases-2.0.19.tgz\",\n+      \"integrity\": \"sha512-xxOWJsBKtzAq7DY0J+DTzuz58K8e7sJbdgwkbMWQe8UYB6ekmsQ45q0M/tJDsGaZmbC+l7n57UV8Hl5tHxO9uw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/normalize-path\": {\n+      \"version\": \"3.0.0\",\n+      \"resolved\": \"https://registry.npmjs.org/normalize-path/-/normalize-path-3.0.0.tgz\",\n+      \"integrity\": \"sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=0.10.0\"\n+      }\n+    },\n+    \"node_modules/npm-run-path\": {\n+      \"version\": \"4.0.1\",\n+      \"resolved\": \"https://registry.npmjs.org/npm-run-path/-/npm-run-path-4.0.1.tgz\",\n+      \"integrity\": \"sha512-S48WzZW777zhNIrn7gxOlISNAqi9ZC/uQFnRdbeIHhZhCA6UqpkOT8T1G7BvfdgP4Er8gF4sUbaS0i7QvIfCWw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"path-key\": \"^3.0.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      }\n+    },\n+    \"node_modules/once\": {\n+      \"version\": \"1.4.0\",\n+      \"resolved\": \"https://registry.npmjs.org/once/-/once-1.4.0.tgz\",\n+      \"integrity\": \"sha512-lNaJgI+2Q5URQBkccEKHTQOPaXdUxnZZElQTZY0MFUAuaEqe1E+Nyvgdz/aIyNi6Z9MzO5dv1H8n58/GELp3+w==\",\n+      \"dev\": true,\n+      \"license\": \"ISC\",\n+      \"dependencies\": {\n+        \"wrappy\": \"1\"\n+      }\n+    },\n+    \"node_modules/onetime\": {\n+      \"version\": \"5.1.2\",\n+      \"resolved\": \"https://registry.npmjs.org/onetime/-/onetime-5.1.2.tgz\",\n+      \"integrity\": \"sha512-kbpaSSGJTWdAY5KPVeMOKXSrPtr8C8C7wodJbcsd51jRnmD+GZu8Y0VoU6Dm5Z4vWr0Ig/1NKuWRKf7j5aaYSg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"mimic-fn\": \"^2.1.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=6\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/sponsors/sindresorhus\"\n+      }\n+    },\n+    \"node_modules/optionator\": {\n+      \"version\": \"0.9.4\",\n+      \"resolved\": \"https://registry.npmjs.org/optionator/-/optionator-0.9.4.tgz\",\n+      \"integrity\": \"sha512-6IpQ7mKUxRcZNLIObR0hz7lxsapSSIYNZJwXPGeF0mTVqGKFIXj1DQcMoT22S3ROcLyY/rz0PWaWZ9ayWmad9g==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"deep-is\": \"^0.1.3\",\n+        \"fast-levenshtein\": \"^2.0.6\",\n+        \"levn\": \"^0.4.1\",\n+        \"prelude-ls\": \"^1.2.1\",\n+        \"type-check\": \"^0.4.0\",\n+        \"word-wrap\": \"^1.2.5\"\n+      },\n+      \"engines\": {\n+        \"node\": \">= 0.8.0\"\n+      }\n+    },\n+    \"node_modules/p-limit\": {\n+      \"version\": \"3.1.0\",\n+      \"resolved\": \"https://registry.npmjs.org/p-limit/-/p-limit-3.1.0.tgz\",\n+      \"integrity\": \"sha512-TYOanM3wGwNGsZN2cVTYPArw454xnXj5qmWF1bEoAc4+cU/ol7GVh7odevjp1FNHduHc3KZMcFduxU5Xc6uJRQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"yocto-queue\": \"^0.1.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=10\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/sponsors/sindresorhus\"\n+      }\n+    },\n+    \"node_modules/p-locate\": {\n+      \"version\": \"5.0.0\",\n+      \"resolved\": \"https://registry.npmjs.org/p-locate/-/p-locate-5.0.0.tgz\",\n+      \"integrity\": \"sha512-LaNjtRWUBY++zB5nE/NwcaoMylSPk+S+ZHNB1TzdbMJMny6dynpAGt7X/tl/QYq3TIeE6nxHppbo2LGymrG5Pw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"p-limit\": \"^3.0.2\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=10\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/sponsors/sindresorhus\"\n+      }\n+    },\n+    \"node_modules/p-try\": {\n+      \"version\": \"2.2.0\",\n+      \"resolved\": \"https://registry.npmjs.org/p-try/-/p-try-2.2.0.tgz\",\n+      \"integrity\": \"sha512-R4nPAVTAU0B9D35/Gk3uJf/7XYbQcyohSKdvAxIRSNghFl4e71hVoGnBNQz9cWaXxO2I10KTC+3jMdvvoKw6dQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=6\"\n+      }\n+    },\n+    \"node_modules/parent-module\": {\n+      \"version\": \"1.0.1\",\n+      \"resolved\": \"https://registry.npmjs.org/parent-module/-/parent-module-1.0.1.tgz\",\n+      \"integrity\": \"sha512-GQ2EWRpQV8/o+Aw8YqtfZZPfNRWZYkbidE9k5rpl/hC3vtHHBfGm2Ifi6qWV+coDGkrUKZAxE3Lot5kcsRlh+g==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"callsites\": \"^3.0.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=6\"\n+      }\n+    },\n+    \"node_modules/parse-json\": {\n+      \"version\": \"5.2.0\",\n+      \"resolved\": \"https://registry.npmjs.org/parse-json/-/parse-json-5.2.0.tgz\",\n+      \"integrity\": \"sha512-ayCKvm/phCGxOkYRSCM82iDwct8/EonSEgCSxWxD7ve6jHggsFl4fZVQBPRNgQoKiuV/odhFrGzQXZwbifC8Rg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@babel/code-frame\": \"^7.0.0\",\n+        \"error-ex\": \"^1.3.1\",\n+        \"json-parse-even-better-errors\": \"^2.3.0\",\n+        \"lines-and-columns\": \"^1.1.6\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/sponsors/sindresorhus\"\n+      }\n+    },\n+    \"node_modules/path-exists\": {\n+      \"version\": \"4.0.0\",\n+      \"resolved\": \"https://registry.npmjs.org/path-exists/-/path-exists-4.0.0.tgz\",\n+      \"integrity\": \"sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      }\n+    },\n+    \"node_modules/path-is-absolute\": {\n+      \"version\": \"1.0.1\",\n+      \"resolved\": \"https://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.1.tgz\",\n+      \"integrity\": \"sha512-AVbw3UJ2e9bq64vSaS9Am0fje1Pa8pbGqTTsmXfaIiMpnr5DlDhfJOuLj9Sf95ZPVDAUerDfEk88MPmPe7UCQg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=0.10.0\"\n+      }\n+    },\n+    \"node_modules/path-key\": {\n+      \"version\": \"3.1.1\",\n+      \"resolved\": \"https://registry.npmjs.org/path-key/-/path-key-3.1.1.tgz\",\n+      \"integrity\": \"sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      }\n+    },\n+    \"node_modules/path-parse\": {\n+      \"version\": \"1.0.7\",\n+      \"resolved\": \"https://registry.npmjs.org/path-parse/-/path-parse-1.0.7.tgz\",\n+      \"integrity\": \"sha512-LDJzPVEEEPR+y48z93A0Ed0yXb8pAByGWo/k5YYdYgpY2/2EsOsksJrq7lOHxryrVOn1ejG6oAp8ahvOIQD8sw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/path-type\": {\n+      \"version\": \"4.0.0\",\n+      \"resolved\": \"https://registry.npmjs.org/path-type/-/path-type-4.0.0.tgz\",\n+      \"integrity\": \"sha512-gDKb8aZMDeD/tZWs9P6+q0J9Mwkdl6xMV8TjnGP3qJVJ06bdMgkbBlLU8IdfOsIsFz2BW1rNVT3XuNEl8zPAvw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      }\n+    },\n+    \"node_modules/picocolors\": {\n+      \"version\": \"1.1.1\",\n+      \"resolved\": \"https://registry.npmjs.org/picocolors/-/picocolors-1.1.1.tgz\",\n+      \"integrity\": \"sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA==\",\n+      \"dev\": true,\n+      \"license\": \"ISC\"\n+    },\n+    \"node_modules/picomatch\": {\n+      \"version\": \"2.3.1\",\n+      \"resolved\": \"https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz\",\n+      \"integrity\": \"sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=8.6\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/sponsors/jonschlinkert\"\n+      }\n+    },\n+    \"node_modules/pirates\": {\n+      \"version\": \"4.0.7\",\n+      \"resolved\": \"https://registry.npmjs.org/pirates/-/pirates-4.0.7.tgz\",\n+      \"integrity\": \"sha512-TfySrs/5nm8fQJDcBDuUng3VOUKsd7S+zqvbOTiGXHfxX4wK31ard+hoNuvkicM/2YFzlpDgABOevKSsB4G/FA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">= 6\"\n+      }\n+    },\n+    \"node_modules/pkg-dir\": {\n+      \"version\": \"4.2.0\",\n+      \"resolved\": \"https://registry.npmjs.org/pkg-dir/-/pkg-dir-4.2.0.tgz\",\n+      \"integrity\": \"sha512-HRDzbaKjC+AOWVXxAU/x54COGeIv9eb+6CkDSQoNTt4XyWoIJvuPsXizxu/Fr23EiekbtZwmh1IcIG/l/a10GQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"find-up\": \"^4.0.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      }\n+    },\n+    \"node_modules/pkg-dir/node_modules/find-up\": {\n+      \"version\": \"4.1.0\",\n+      \"resolved\": \"https://registry.npmjs.org/find-up/-/find-up-4.1.0.tgz\",\n+      \"integrity\": \"sha512-PpOwAdQ/YlXQ2vj8a3h8IipDuYRi3wceVQQGYWxNINccq40Anw7BlsEXCMbt1Zt+OLA6Fq9suIpIWD0OsnISlw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"locate-path\": \"^5.0.0\",\n+        \"path-exists\": \"^4.0.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      }\n+    },\n+    \"node_modules/pkg-dir/node_modules/locate-path\": {\n+      \"version\": \"5.0.0\",\n+      \"resolved\": \"https://registry.npmjs.org/locate-path/-/locate-path-5.0.0.tgz\",\n+      \"integrity\": \"sha512-t7hw9pI+WvuwNJXwk5zVHpyhIqzg2qTlklJOf0mVxGSbe3Fp2VieZcduNYjaLDoy6p9uGpQEGWG87WpMKlNq8g==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"p-locate\": \"^4.1.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      }\n+    },\n+    \"node_modules/pkg-dir/node_modules/p-limit\": {\n+      \"version\": \"2.3.0\",\n+      \"resolved\": \"https://registry.npmjs.org/p-limit/-/p-limit-2.3.0.tgz\",\n+      \"integrity\": \"sha512-//88mFWSJx8lxCzwdAABTJL2MyWB12+eIY7MDL2SqLmAkeKU9qxRvWuSyTjm3FUmpBEMuFfckAIqEaVGUDxb6w==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"p-try\": \"^2.0.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=6\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/sponsors/sindresorhus\"\n+      }\n+    },\n+    \"node_modules/pkg-dir/node_modules/p-locate\": {\n+      \"version\": \"4.1.0\",\n+      \"resolved\": \"https://registry.npmjs.org/p-locate/-/p-locate-4.1.0.tgz\",\n+      \"integrity\": \"sha512-R79ZZ/0wAxKGu3oYMlz8jy/kbhsNrS7SKZ7PxEHBgJ5+F2mtFW2fK2cOtBh1cHYkQsbzFV7I+EoRKe6Yt0oK7A==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"p-limit\": \"^2.2.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      }\n+    },\n+    \"node_modules/prelude-ls\": {\n+      \"version\": \"1.2.1\",\n+      \"resolved\": \"https://registry.npmjs.org/prelude-ls/-/prelude-ls-1.2.1.tgz\",\n+      \"integrity\": \"sha512-vkcDPrRZo1QZLbn5RLGPpg/WmIQ65qoWWhcGKf/b5eplkkarX0m9z8ppCat4mlOqUsWpyNuYgO3VRyrYHSzX5g==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">= 0.8.0\"\n+      }\n+    },\n+    \"node_modules/pretty-format\": {\n+      \"version\": \"29.7.0\",\n+      \"resolved\": \"https://registry.npmjs.org/pretty-format/-/pretty-format-29.7.0.tgz\",\n+      \"integrity\": \"sha512-Pdlw/oPxN+aXdmM9R00JVC9WVFoCLTKJvDVLgmJ+qAffBMxsV85l/Lu7sNx4zSzPyoL2euImuEwHhOXdEgNFZQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@jest/schemas\": \"^29.6.3\",\n+        \"ansi-styles\": \"^5.0.0\",\n+        \"react-is\": \"^18.0.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n+      }\n+    },\n+    \"node_modules/pretty-format/node_modules/ansi-styles\": {\n+      \"version\": \"5.2.0\",\n+      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-5.2.0.tgz\",\n+      \"integrity\": \"sha512-Cxwpt2SfTzTtXcfOlzGEee8O+c+MmUgGrNiBcXnuWxuFJHe6a5Hz7qwhwe5OgaSYI0IJvkLqWX1ASG+cJOkEiA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=10\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/chalk/ansi-styles?sponsor=1\"\n+      }\n+    },\n+    \"node_modules/prompts\": {\n+      \"version\": \"2.4.2\",\n+      \"resolved\": \"https://registry.npmjs.org/prompts/-/prompts-2.4.2.tgz\",\n+      \"integrity\": \"sha512-NxNv/kLguCA7p3jE8oL2aEBsrJWgAakBpgmgK6lpPWV+WuOmY6r2/zbAVnP+T8bQlA0nzHXSJSJW0Hq7ylaD2Q==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"kleur\": \"^3.0.3\",\n+        \"sisteransi\": \"^1.0.5\"\n+      },\n+      \"engines\": {\n+        \"node\": \">= 6\"\n+      }\n+    },\n+    \"node_modules/punycode\": {\n+      \"version\": \"2.3.1\",\n+      \"resolved\": \"https://registry.npmjs.org/punycode/-/punycode-2.3.1.tgz\",\n+      \"integrity\": \"sha512-vYt7UD1U9Wg6138shLtLOvdAu+8DsC/ilFtEVHcH+wydcSpNE20AfSOduf6MkRFahL5FY7X1oU7nKVZFtfq8Fg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=6\"\n+      }\n+    },\n+    \"node_modules/pure-rand\": {\n+      \"version\": \"6.1.0\",\n+      \"resolved\": \"https://registry.npmjs.org/pure-rand/-/pure-rand-6.1.0.tgz\",\n+      \"integrity\": \"sha512-bVWawvoZoBYpp6yIoQtQXHZjmz35RSVHnUOTefl8Vcjr8snTPY1wnpSPMWekcFwbxI6gtmT7rSYPFvz71ldiOA==\",\n+      \"dev\": true,\n+      \"funding\": [\n+        {\n+          \"type\": \"individual\",\n+          \"url\": \"https://github.com/sponsors/dubzzz\"\n+        },\n+        {\n+          \"type\": \"opencollective\",\n+          \"url\": \"https://opencollective.com/fast-check\"\n+        }\n+      ],\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/queue-microtask\": {\n+      \"version\": \"1.2.3\",\n+      \"resolved\": \"https://registry.npmjs.org/queue-microtask/-/queue-microtask-1.2.3.tgz\",\n+      \"integrity\": \"sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5RqkDBHA7r4hej3K9A==\",\n+      \"dev\": true,\n+      \"funding\": [\n+        {\n+          \"type\": \"github\",\n+          \"url\": \"https://github.com/sponsors/feross\"\n+        },\n+        {\n+          \"type\": \"patreon\",\n+          \"url\": \"https://www.patreon.com/feross\"\n+        },\n+        {\n+          \"type\": \"consulting\",\n+          \"url\": \"https://feross.org/support\"\n+        }\n+      ],\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/react-is\": {\n+      \"version\": \"18.3.1\",\n+      \"resolved\": \"https://registry.npmjs.org/react-is/-/react-is-18.3.1.tgz\",\n+      \"integrity\": \"sha512-/LLMVyas0ljjAtoYiPqYiL8VWXzUUdThrmU5+n20DZv+a+ClRoevUzw5JxU+Ieh5/c87ytoTBV9G1FiKfNJdmg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/require-directory\": {\n+      \"version\": \"2.1.1\",\n+      \"resolved\": \"https://registry.npmjs.org/require-directory/-/require-directory-2.1.1.tgz\",\n+      \"integrity\": \"sha512-fGxEI7+wsG9xrvdjsrlmL22OMTTiHRwAMroiEeMgq8gzoLC/PQr7RsRDSTLUg/bZAZtF+TVIkHc6/4RIKrui+Q==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=0.10.0\"\n+      }\n+    },\n+    \"node_modules/resolve\": {\n+      \"version\": \"1.22.10\",\n+      \"resolved\": \"https://registry.npmjs.org/resolve/-/resolve-1.22.10.tgz\",\n+      \"integrity\": \"sha512-NPRy+/ncIMeDlTAsuqwKIiferiawhefFJtkNSW0qZJEqMEb+qBt/77B/jGeeek+F0uOeN05CDa6HXbbIgtVX4w==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"is-core-module\": \"^2.16.0\",\n+        \"path-parse\": \"^1.0.7\",\n+        \"supports-preserve-symlinks-flag\": \"^1.0.0\"\n+      },\n+      \"bin\": {\n+        \"resolve\": \"bin/resolve\"\n+      },\n+      \"engines\": {\n+        \"node\": \">= 0.4\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/sponsors/ljharb\"\n+      }\n+    },\n+    \"node_modules/resolve-cwd\": {\n+      \"version\": \"3.0.0\",\n+      \"resolved\": \"https://registry.npmjs.org/resolve-cwd/-/resolve-cwd-3.0.0.tgz\",\n+      \"integrity\": \"sha512-OrZaX2Mb+rJCpH/6CpSqt9xFVpN++x01XnN2ie9g6P5/3xelLAkXWVADpdz1IHD/KFfEXyE6V0U01OQ3UO2rEg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"resolve-from\": \"^5.0.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      }\n+    },\n+    \"node_modules/resolve-cwd/node_modules/resolve-from\": {\n+      \"version\": \"5.0.0\",\n+      \"resolved\": \"https://registry.npmjs.org/resolve-from/-/resolve-from-5.0.0.tgz\",\n+      \"integrity\": \"sha512-qYg9KP24dD5qka9J47d0aVky0N+b4fTU89LN9iDnjB5waksiC49rvMB0PrUJQGoTmH50XPiqOvAjDfaijGxYZw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      }\n+    },\n+    \"node_modules/resolve-from\": {\n+      \"version\": \"4.0.0\",\n+      \"resolved\": \"https://registry.npmjs.org/resolve-from/-/resolve-from-4.0.0.tgz\",\n+      \"integrity\": \"sha512-pb/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp/+vgZqsCGJapvy8N3Q+4o7FwvquPJcnZ7RYy4g==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=4\"\n+      }\n+    },\n+    \"node_modules/resolve.exports\": {\n+      \"version\": \"2.0.3\",\n+      \"resolved\": \"https://registry.npmjs.org/resolve.exports/-/resolve.exports-2.0.3.tgz\",\n+      \"integrity\": \"sha512-OcXjMsGdhL4XnbShKpAcSqPMzQoYkYyhbEaeSko47MjRP9NfEQMhZkXL1DoFlt9LWQn4YttrdnV6X2OiyzBi+A==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=10\"\n+      }\n+    },\n+    \"node_modules/reusify\": {\n+      \"version\": \"1.1.0\",\n+      \"resolved\": \"https://registry.npmjs.org/reusify/-/reusify-1.1.0.tgz\",\n+      \"integrity\": \"sha512-g6QUff04oZpHs0eG5p83rFLhHeV00ug/Yf9nZM6fLeUrPguBTkTQOdpAWWspMh55TZfVQDPaN3NQJfbVRAxdIw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"iojs\": \">=1.0.0\",\n+        \"node\": \">=0.10.0\"\n+      }\n+    },\n+    \"node_modules/rimraf\": {\n+      \"version\": \"3.0.2\",\n+      \"resolved\": \"https://registry.npmjs.org/rimraf/-/rimraf-3.0.2.tgz\",\n+      \"integrity\": \"sha512-JZkJMZkAGFFPP2YqXZXPbMlMBgsxzE8ILs4lMIX/2o0L9UBw9O/Y3o6wFw/i9YLapcUJWwqbi3kdxIPdC62TIA==\",\n+      \"deprecated\": \"Rimraf versions prior to v4 are no longer supported\",\n+      \"dev\": true,\n+      \"license\": \"ISC\",\n+      \"dependencies\": {\n+        \"glob\": \"^7.1.3\"\n+      },\n+      \"bin\": {\n+        \"rimraf\": \"bin.js\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/sponsors/isaacs\"\n+      }\n+    },\n+    \"node_modules/run-parallel\": {\n+      \"version\": \"1.2.0\",\n+      \"resolved\": \"https://registry.npmjs.org/run-parallel/-/run-parallel-1.2.0.tgz\",\n+      \"integrity\": \"sha512-5l4VyZR86LZ/lDxZTR6jqL8AFE2S0IFLMP26AbjsLVADxHdhB/c0GUsH+y39UfCi3dzz8OlQuPmnaJOMoDHQBA==\",\n+      \"dev\": true,\n+      \"funding\": [\n+        {\n+          \"type\": \"github\",\n+          \"url\": \"https://github.com/sponsors/feross\"\n+        },\n+        {\n+          \"type\": \"patreon\",\n+          \"url\": \"https://www.patreon.com/feross\"\n+        },\n+        {\n+          \"type\": \"consulting\",\n+          \"url\": \"https://feross.org/support\"\n+        }\n+      ],\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"queue-microtask\": \"^1.2.2\"\n+      }\n+    },\n+    \"node_modules/semver\": {\n+      \"version\": \"7.7.2\",\n+      \"resolved\": \"https://registry.npmjs.org/semver/-/semver-7.7.2.tgz\",\n+      \"integrity\": \"sha512-RF0Fw+rO5AMf9MAyaRXI4AV0Ulj5lMHqVxxdSgiVbixSCXoEmmX/jk0CuJw4+3SqroYO9VoUh+HcuJivvtJemA==\",\n+      \"dev\": true,\n+      \"license\": \"ISC\",\n+      \"bin\": {\n+        \"semver\": \"bin/semver.js\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=10\"\n+      }\n+    },\n+    \"node_modules/shebang-command\": {\n+      \"version\": \"2.0.0\",\n+      \"resolved\": \"https://registry.npmjs.org/shebang-command/-/shebang-command-2.0.0.tgz\",\n+      \"integrity\": \"sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"shebang-regex\": \"^3.0.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      }\n+    },\n+    \"node_modules/shebang-regex\": {\n+      \"version\": \"3.0.0\",\n+      \"resolved\": \"https://registry.npmjs.org/shebang-regex/-/shebang-regex-3.0.0.tgz\",\n+      \"integrity\": \"sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      }\n+    },\n+    \"node_modules/signal-exit\": {\n+      \"version\": \"3.0.7\",\n+      \"resolved\": \"https://registry.npmjs.org/signal-exit/-/signal-exit-3.0.7.tgz\",\n+      \"integrity\": \"sha512-wnD2ZE+l+SPC/uoS0vXeE9L1+0wuaMqKlfz9AMUo38JsyLSBWSFcHR1Rri62LZc12vLr1gb3jl7iwQhgwpAbGQ==\",\n+      \"dev\": true,\n+      \"license\": \"ISC\"\n+    },\n+    \"node_modules/sisteransi\": {\n+      \"version\": \"1.0.5\",\n+      \"resolved\": \"https://registry.npmjs.org/sisteransi/-/sisteransi-1.0.5.tgz\",\n+      \"integrity\": \"sha512-bLGGlR1QxBcynn2d5YmDX4MGjlZvy2MRBDRNHLJ8VI6l6+9FUiyTFNJ0IveOSP0bcXgVDPRcfGqA0pjaqUpfVg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/slash\": {\n+      \"version\": \"3.0.0\",\n+      \"resolved\": \"https://registry.npmjs.org/slash/-/slash-3.0.0.tgz\",\n+      \"integrity\": \"sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz0V1G85A4MyAdDMi2Q==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      }\n+    },\n+    \"node_modules/source-map\": {\n+      \"version\": \"0.6.1\",\n+      \"resolved\": \"https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz\",\n+      \"integrity\": \"sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==\",\n+      \"dev\": true,\n+      \"license\": \"BSD-3-Clause\",\n+      \"engines\": {\n+        \"node\": \">=0.10.0\"\n+      }\n+    },\n+    \"node_modules/source-map-support\": {\n+      \"version\": \"0.5.13\",\n+      \"resolved\": \"https://registry.npmjs.org/source-map-support/-/source-map-support-0.5.13.tgz\",\n+      \"integrity\": \"sha512-SHSKFHadjVA5oR4PPqhtAVdcBWwRYVd6g6cAXnIbRiIwc2EhPrTuKUBdSLvlEKyIP3GCf89fltvcZiP9MMFA1w==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"buffer-from\": \"^1.0.0\",\n+        \"source-map\": \"^0.6.0\"\n+      }\n+    },\n+    \"node_modules/sprintf-js\": {\n+      \"version\": \"1.0.3\",\n+      \"resolved\": \"https://registry.npmjs.org/sprintf-js/-/sprintf-js-1.0.3.tgz\",\n+      \"integrity\": \"sha512-D9cPgkvLlV3t3IzL0D0YLvGA9Ahk4PcvVwUbN0dSGr1aP0Nrt4AEnTUbuGvquEC0mA64Gqt1fzirlRs5ibXx8g==\",\n+      \"dev\": true,\n+      \"license\": \"BSD-3-Clause\"\n+    },\n+    \"node_modules/stack-utils\": {\n+      \"version\": \"2.0.6\",\n+      \"resolved\": \"https://registry.npmjs.org/stack-utils/-/stack-utils-2.0.6.tgz\",\n+      \"integrity\": \"sha512-XlkWvfIm6RmsWtNJx+uqtKLS8eqFbxUg0ZzLXqY0caEy9l7hruX8IpiDnjsLavoBgqCCR71TqWO8MaXYheJ3RQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"escape-string-regexp\": \"^2.0.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=10\"\n+      }\n+    },\n+    \"node_modules/stack-utils/node_modules/escape-string-regexp\": {\n+      \"version\": \"2.0.0\",\n+      \"resolved\": \"https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-2.0.0.tgz\",\n+      \"integrity\": \"sha512-UpzcLCXolUWcNu5HtVMHYdXJjArjsF9C0aNnquZYY4uW/Vu0miy5YoWvbV345HauVvcAUnpRuhMMcqTcGOY2+w==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      }\n+    },\n+    \"node_modules/string-length\": {\n+      \"version\": \"4.0.2\",\n+      \"resolved\": \"https://registry.npmjs.org/string-length/-/string-length-4.0.2.tgz\",\n+      \"integrity\": \"sha512-+l6rNN5fYHNhZZy41RXsYptCjA2Igmq4EG7kZAYFQI1E1VTXarr6ZPXBg6eq7Y6eK4FEhY6AJlyuFIb/v/S0VQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"char-regex\": \"^1.0.2\",\n+        \"strip-ansi\": \"^6.0.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=10\"\n+      }\n+    },\n+    \"node_modules/string-width\": {\n+      \"version\": \"4.2.3\",\n+      \"resolved\": \"https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz\",\n+      \"integrity\": \"sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"emoji-regex\": \"^8.0.0\",\n+        \"is-fullwidth-code-point\": \"^3.0.0\",\n+        \"strip-ansi\": \"^6.0.1\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      }\n+    },\n+    \"node_modules/strip-ansi\": {\n+      \"version\": \"6.0.1\",\n+      \"resolved\": \"https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz\",\n+      \"integrity\": \"sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"ansi-regex\": \"^5.0.1\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      }\n+    },\n+    \"node_modules/strip-bom\": {\n+      \"version\": \"4.0.0\",\n+      \"resolved\": \"https://registry.npmjs.org/strip-bom/-/strip-bom-4.0.0.tgz\",\n+      \"integrity\": \"sha512-3xurFv5tEgii33Zi8Jtp55wEIILR9eh34FAW00PZf+JnSsTmV/ioewSgQl97JHvgjoRGwPShsWm+IdrxB35d0w==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      }\n+    },\n+    \"node_modules/strip-final-newline\": {\n+      \"version\": \"2.0.0\",\n+      \"resolved\": \"https://registry.npmjs.org/strip-final-newline/-/strip-final-newline-2.0.0.tgz\",\n+      \"integrity\": \"sha512-BrpvfNAE3dcvq7ll3xVumzjKjZQ5tI1sEUIKr3Uoks0XUl45St3FlatVqef9prk4jRDzhW6WZg+3bk93y6pLjA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=6\"\n+      }\n+    },\n+    \"node_modules/strip-json-comments\": {\n+      \"version\": \"3.1.1\",\n+      \"resolved\": \"https://registry.npmjs.org/strip-json-comments/-/strip-json-comments-3.1.1.tgz\",\n+      \"integrity\": \"sha512-6fPc+R4ihwqP6N/aIv2f1gMH8lOVtWQHoqC4yK6oSDVVocumAsfCqjkXnqiYMhmMwS/mEHLp7Vehlt3ql6lEig==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/sponsors/sindresorhus\"\n+      }\n+    },\n+    \"node_modules/supports-color\": {\n+      \"version\": \"7.2.0\",\n+      \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz\",\n+      \"integrity\": \"sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"has-flag\": \"^4.0.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      }\n+    },\n+    \"node_modules/supports-preserve-symlinks-flag\": {\n+      \"version\": \"1.0.0\",\n+      \"resolved\": \"https://registry.npmjs.org/supports-preserve-symlinks-flag/-/supports-preserve-symlinks-flag-1.0.0.tgz\",\n+      \"integrity\": \"sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">= 0.4\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/sponsors/ljharb\"\n+      }\n+    },\n+    \"node_modules/test-exclude\": {\n+      \"version\": \"6.0.0\",\n+      \"resolved\": \"https://registry.npmjs.org/test-exclude/-/test-exclude-6.0.0.tgz\",\n+      \"integrity\": \"sha512-cAGWPIyOHU6zlmg88jwm7VRyXnMN7iV68OGAbYDk/Mh/xC/pzVPlQtY6ngoIH/5/tciuhGfvESU8GrHrcxD56w==\",\n+      \"dev\": true,\n+      \"license\": \"ISC\",\n+      \"dependencies\": {\n+        \"@istanbuljs/schema\": \"^0.1.2\",\n+        \"glob\": \"^7.1.4\",\n+        \"minimatch\": \"^3.0.4\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      }\n+    },\n+    \"node_modules/test-exclude/node_modules/brace-expansion\": {\n+      \"version\": \"1.1.12\",\n+      \"resolved\": \"https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.12.tgz\",\n+      \"integrity\": \"sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"balanced-match\": \"^1.0.0\",\n+        \"concat-map\": \"0.0.1\"\n+      }\n+    },\n+    \"node_modules/test-exclude/node_modules/minimatch\": {\n+      \"version\": \"3.1.2\",\n+      \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz\",\n+      \"integrity\": \"sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==\",\n+      \"dev\": true,\n+      \"license\": \"ISC\",\n+      \"dependencies\": {\n+        \"brace-expansion\": \"^1.1.7\"\n+      },\n+      \"engines\": {\n+        \"node\": \"*\"\n+      }\n+    },\n+    \"node_modules/text-table\": {\n+      \"version\": \"0.2.0\",\n+      \"resolved\": \"https://registry.npmjs.org/text-table/-/text-table-0.2.0.tgz\",\n+      \"integrity\": \"sha512-N+8UisAXDGk8PFXP4HAzVR9nbfmVJ3zYLAWiTIoqC5v5isinhr+r5uaO8+7r3BMfuNIufIsA7RdpVgacC2cSpw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/tmpl\": {\n+      \"version\": \"1.0.5\",\n+      \"resolved\": \"https://registry.npmjs.org/tmpl/-/tmpl-1.0.5.tgz\",\n+      \"integrity\": \"sha512-3f0uOEAQwIqGuWW2MVzYg8fV/QNnc/IpuJNG837rLuczAaLVHslWHZQj4IGiEl5Hs3kkbhwL9Ab7Hrsmuj+Smw==\",\n+      \"dev\": true,\n+      \"license\": \"BSD-3-Clause\"\n+    },\n+    \"node_modules/to-regex-range\": {\n+      \"version\": \"5.0.1\",\n+      \"resolved\": \"https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz\",\n+      \"integrity\": \"sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"is-number\": \"^7.0.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=8.0\"\n+      }\n+    },\n+    \"node_modules/ts-api-utils\": {\n+      \"version\": \"1.4.3\",\n+      \"resolved\": \"https://registry.npmjs.org/ts-api-utils/-/ts-api-utils-1.4.3.tgz\",\n+      \"integrity\": \"sha512-i3eMG77UTMD0hZhgRS562pv83RC6ukSAC2GMNWc+9dieh/+jDM5u5YG+NHX6VNDRHQcHwmsTHctP9LhbC3WxVw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=16\"\n+      },\n+      \"peerDependencies\": {\n+        \"typescript\": \">=4.2.0\"\n+      }\n+    },\n+    \"node_modules/ts-jest\": {\n+      \"version\": \"29.4.0\",\n+      \"resolved\": \"https://registry.npmjs.org/ts-jest/-/ts-jest-29.4.0.tgz\",\n+      \"integrity\": \"sha512-d423TJMnJGu80/eSgfQ5w/R+0zFJvdtTxwtF9KzFFunOpSeD+79lHJQIiAhluJoyGRbvj9NZJsl9WjCUo0ND7Q==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"bs-logger\": \"^0.2.6\",\n+        \"ejs\": \"^3.1.10\",\n+        \"fast-json-stable-stringify\": \"^2.1.0\",\n+        \"json5\": \"^2.2.3\",\n+        \"lodash.memoize\": \"^4.1.2\",\n+        \"make-error\": \"^1.3.6\",\n+        \"semver\": \"^7.7.2\",\n+        \"type-fest\": \"^4.41.0\",\n+        \"yargs-parser\": \"^21.1.1\"\n+      },\n+      \"bin\": {\n+        \"ts-jest\": \"cli.js\"\n+      },\n+      \"engines\": {\n+        \"node\": \"^14.15.0 || ^16.10.0 || ^18.0.0 || >=20.0.0\"\n+      },\n+      \"peerDependencies\": {\n+        \"@babel/core\": \">=7.0.0-beta.0 <8\",\n+        \"@jest/transform\": \"^29.0.0 || ^30.0.0\",\n+        \"@jest/types\": \"^29.0.0 || ^30.0.0\",\n+        \"babel-jest\": \"^29.0.0 || ^30.0.0\",\n+        \"jest\": \"^29.0.0 || ^30.0.0\",\n+        \"jest-util\": \"^29.0.0 || ^30.0.0\",\n+        \"typescript\": \">=4.3 <6\"\n+      },\n+      \"peerDependenciesMeta\": {\n+        \"@babel/core\": {\n+          \"optional\": true\n+        },\n+        \"@jest/transform\": {\n+          \"optional\": true\n+        },\n+        \"@jest/types\": {\n+          \"optional\": true\n+        },\n+        \"babel-jest\": {\n+          \"optional\": true\n+        },\n+        \"esbuild\": {\n+          \"optional\": true\n+        },\n+        \"jest-util\": {\n+          \"optional\": true\n+        }\n+      }\n+    },\n+    \"node_modules/ts-jest/node_modules/type-fest\": {\n+      \"version\": \"4.41.0\",\n+      \"resolved\": \"https://registry.npmjs.org/type-fest/-/type-fest-4.41.0.tgz\",\n+      \"integrity\": \"sha512-TeTSQ6H5YHvpqVwBRcnLDCBnDOHWYu7IvGbHT6N8AOymcr9PJGjc1GTtiWZTYg0NCgYwvnYWEkVChQAr9bjfwA==\",\n+      \"dev\": true,\n+      \"license\": \"(MIT OR CC0-1.0)\",\n+      \"engines\": {\n+        \"node\": \">=16\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/sponsors/sindresorhus\"\n+      }\n+    },\n+    \"node_modules/type-check\": {\n+      \"version\": \"0.4.0\",\n+      \"resolved\": \"https://registry.npmjs.org/type-check/-/type-check-0.4.0.tgz\",\n+      \"integrity\": \"sha512-XleUoc9uwGXqjWwXaUTZAmzMcFZ5858QA2vvx1Ur5xIcixXIP+8LnFDgRplU30us6teqdlskFfu+ae4K79Ooew==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"prelude-ls\": \"^1.2.1\"\n+      },\n+      \"engines\": {\n+        \"node\": \">= 0.8.0\"\n+      }\n+    },\n+    \"node_modules/type-detect\": {\n+      \"version\": \"4.0.8\",\n+      \"resolved\": \"https://registry.npmjs.org/type-detect/-/type-detect-4.0.8.tgz\",\n+      \"integrity\": \"sha512-0fr/mIH1dlO+x7TlcMy+bIDqKPsw/70tVyeHW787goQjhmqaZe10uwLujubK9q9Lg6Fiho1KUKDYz0Z7k7g5/g==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=4\"\n+      }\n+    },\n+    \"node_modules/type-fest\": {\n+      \"version\": \"0.20.2\",\n+      \"resolved\": \"https://registry.npmjs.org/type-fest/-/type-fest-0.20.2.tgz\",\n+      \"integrity\": \"sha512-Ne+eE4r0/iWnpAxD852z3A+N0Bt5RN//NjJwRd2VFHEmrywxf5vsZlh4R6lixl6B+wz/8d+maTSAkN1FIkI3LQ==\",\n+      \"dev\": true,\n+      \"license\": \"(MIT OR CC0-1.0)\",\n+      \"engines\": {\n+        \"node\": \">=10\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/sponsors/sindresorhus\"\n+      }\n+    },\n+    \"node_modules/typescript\": {\n+      \"version\": \"5.8.3\",\n+      \"resolved\": \"https://registry.npmjs.org/typescript/-/typescript-5.8.3.tgz\",\n+      \"integrity\": \"sha512-p1diW6TqL9L07nNxvRMM7hMMw4c5XOo/1ibL4aAIGmSAt9slTE1Xgw5KWuof2uTOvCg9BY7ZRi+GaF+7sfgPeQ==\",\n+      \"dev\": true,\n+      \"license\": \"Apache-2.0\",\n+      \"bin\": {\n+        \"tsc\": \"bin/tsc\",\n+        \"tsserver\": \"bin/tsserver\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=14.17\"\n+      }\n+    },\n+    \"node_modules/undici-types\": {\n+      \"version\": \"6.21.0\",\n+      \"resolved\": \"https://registry.npmjs.org/undici-types/-/undici-types-6.21.0.tgz\",\n+      \"integrity\": \"sha512-iwDZqg0QAGrg9Rav5H4n0M64c3mkR59cJ6wQp+7C4nI0gsmExaedaYLNO44eT4AtBBwjbTiGPMlt2Md0T9H9JQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/update-browserslist-db\": {\n+      \"version\": \"1.1.3\",\n+      \"resolved\": \"https://registry.npmjs.org/update-browserslist-db/-/update-browserslist-db-1.1.3.tgz\",\n+      \"integrity\": \"sha512-UxhIZQ+QInVdunkDAaiazvvT/+fXL5Osr0JZlJulepYu6Jd7qJtDZjlur0emRlT71EN3ScPoE7gvsuIKKNavKw==\",\n+      \"dev\": true,\n+      \"funding\": [\n+        {\n+          \"type\": \"opencollective\",\n+          \"url\": \"https://opencollective.com/browserslist\"\n+        },\n+        {\n+          \"type\": \"tidelift\",\n+          \"url\": \"https://tidelift.com/funding/github/npm/browserslist\"\n+        },\n+        {\n+          \"type\": \"github\",\n+          \"url\": \"https://github.com/sponsors/ai\"\n+        }\n+      ],\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"escalade\": \"^3.2.0\",\n+        \"picocolors\": \"^1.1.1\"\n+      },\n+      \"bin\": {\n+        \"update-browserslist-db\": \"cli.js\"\n+      },\n+      \"peerDependencies\": {\n+        \"browserslist\": \">= 4.21.0\"\n+      }\n+    },\n+    \"node_modules/uri-js\": {\n+      \"version\": \"4.4.1\",\n+      \"resolved\": \"https://registry.npmjs.org/uri-js/-/uri-js-4.4.1.tgz\",\n+      \"integrity\": \"sha512-7rKUyy33Q1yc98pQ1DAmLtwX109F7TIfWlW1Ydo8Wl1ii1SeHieeh0HHfPeL2fMXK6z0s8ecKs9frCuLJvndBg==\",\n+      \"dev\": true,\n+      \"license\": \"BSD-2-Clause\",\n+      \"dependencies\": {\n+        \"punycode\": \"^2.1.0\"\n+      }\n+    },\n+    \"node_modules/v8-to-istanbul\": {\n+      \"version\": \"9.3.0\",\n+      \"resolved\": \"https://registry.npmjs.org/v8-to-istanbul/-/v8-to-istanbul-9.3.0.tgz\",\n+      \"integrity\": \"sha512-kiGUalWN+rgBJ/1OHZsBtU4rXZOfj/7rKQxULKlIzwzQSvMJUUNgPwJEEh7gU6xEVxC0ahoOBvN2YI8GH6FNgA==\",\n+      \"dev\": true,\n+      \"license\": \"ISC\",\n+      \"dependencies\": {\n+        \"@jridgewell/trace-mapping\": \"^0.3.12\",\n+        \"@types/istanbul-lib-coverage\": \"^2.0.1\",\n+        \"convert-source-map\": \"^2.0.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=10.12.0\"\n+      }\n+    },\n+    \"node_modules/walker\": {\n+      \"version\": \"1.0.8\",\n+      \"resolved\": \"https://registry.npmjs.org/walker/-/walker-1.0.8.tgz\",\n+      \"integrity\": \"sha512-ts/8E8l5b7kY0vlWLewOkDXMmPdLcVV4GmOQLyxuSswIJsweeFZtAsMF7k1Nszz+TYBQrlYRmzOnr398y1JemQ==\",\n+      \"dev\": true,\n+      \"license\": \"Apache-2.0\",\n+      \"dependencies\": {\n+        \"makeerror\": \"1.0.12\"\n+      }\n+    },\n+    \"node_modules/which\": {\n+      \"version\": \"2.0.2\",\n+      \"resolved\": \"https://registry.npmjs.org/which/-/which-2.0.2.tgz\",\n+      \"integrity\": \"sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==\",\n+      \"dev\": true,\n+      \"license\": \"ISC\",\n+      \"dependencies\": {\n+        \"isexe\": \"^2.0.0\"\n+      },\n+      \"bin\": {\n+        \"node-which\": \"bin/node-which\"\n+      },\n+      \"engines\": {\n+        \"node\": \">= 8\"\n+      }\n+    },\n+    \"node_modules/word-wrap\": {\n+      \"version\": \"1.2.5\",\n+      \"resolved\": \"https://registry.npmjs.org/word-wrap/-/word-wrap-1.2.5.tgz\",\n+      \"integrity\": \"sha512-BN22B5eaMMI9UMtjrGd5g5eCYPpCPDUy0FJXbYsaT5zYxjFOckS53SQDE3pWkVoWpHXVb3BrYcEN4Twa55B5cA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=0.10.0\"\n+      }\n+    },\n+    \"node_modules/wrap-ansi\": {\n+      \"version\": \"7.0.0\",\n+      \"resolved\": \"https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-7.0.0.tgz\",\n+      \"integrity\": \"sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"ansi-styles\": \"^4.0.0\",\n+        \"string-width\": \"^4.1.0\",\n+        \"strip-ansi\": \"^6.0.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=10\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/chalk/wrap-ansi?sponsor=1\"\n+      }\n+    },\n+    \"node_modules/wrappy\": {\n+      \"version\": \"1.0.2\",\n+      \"resolved\": \"https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz\",\n+      \"integrity\": \"sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS1xUsZ3u7/IQO4wxtcFB4bgpQPRcR3QCvezPcQ==\",\n+      \"dev\": true,\n+      \"license\": \"ISC\"\n+    },\n+    \"node_modules/write-file-atomic\": {\n+      \"version\": \"4.0.2\",\n+      \"resolved\": \"https://registry.npmjs.org/write-file-atomic/-/write-file-atomic-4.0.2.tgz\",\n+      \"integrity\": \"sha512-7KxauUdBmSdWnmpaGFg+ppNjKF8uNLry8LyzjauQDOVONfFLNKrKvQOxZ/VuTIcS/gge/YNahf5RIIQWTSarlg==\",\n+      \"dev\": true,\n+      \"license\": \"ISC\",\n+      \"dependencies\": {\n+        \"imurmurhash\": \"^0.1.4\",\n+        \"signal-exit\": \"^3.0.7\"\n+      },\n+      \"engines\": {\n+        \"node\": \"^12.13.0 || ^14.15.0 || >=16.0.0\"\n+      }\n+    },\n+    \"node_modules/y18n\": {\n+      \"version\": \"5.0.8\",\n+      \"resolved\": \"https://registry.npmjs.org/y18n/-/y18n-5.0.8.tgz\",\n+      \"integrity\": \"sha512-0pfFzegeDWJHJIAmTLRP2DwHjdF5s7jo9tuztdQxAhINCdvS+3nGINqPd00AphqJR/0LhANUS6/+7SCb98YOfA==\",\n+      \"dev\": true,\n+      \"license\": \"ISC\",\n+      \"engines\": {\n+        \"node\": \">=10\"\n+      }\n+    },\n+    \"node_modules/yallist\": {\n+      \"version\": \"3.1.1\",\n+      \"resolved\": \"https://registry.npmjs.org/yallist/-/yallist-3.1.1.tgz\",\n+      \"integrity\": \"sha512-a4UGQaWPH59mOXUYnAG2ewncQS4i4F43Tv3JoAM+s2VDAmS9NsK8GpDMLrCHPksFT7h3K6TOoUNn2pb7RoXx4g==\",\n+      \"dev\": true,\n+      \"license\": \"ISC\"\n+    },\n+    \"node_modules/yargs\": {\n+      \"version\": \"17.7.2\",\n+      \"resolved\": \"https://registry.npmjs.org/yargs/-/yargs-17.7.2.tgz\",\n+      \"integrity\": \"sha512-7dSzzRQ++CKnNI/krKnYRV7JKKPUXMEh61soaHKg9mrWEhzFWhFnxPxGl+69cD1Ou63C13NUPCnmIcrvqCuM6w==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"cliui\": \"^8.0.1\",\n+        \"escalade\": \"^3.1.1\",\n+        \"get-caller-file\": \"^2.0.5\",\n+        \"require-directory\": \"^2.1.1\",\n+        \"string-width\": \"^4.2.3\",\n+        \"y18n\": \"^5.0.5\",\n+        \"yargs-parser\": \"^21.1.1\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=12\"\n+      }\n+    },\n+    \"node_modules/yargs-parser\": {\n+      \"version\": \"21.1.1\",\n+      \"resolved\": \"https://registry.npmjs.org/yargs-parser/-/yargs-parser-21.1.1.tgz\",\n+      \"integrity\": \"sha512-tVpsJW7DdjecAiFpbIB1e3qxIQsE6NoPc5/eTdrbbIC4h0LVsWhnoa3g+m2HclBIujHzsxZ4VJVA+GUuc2/LBw==\",\n+      \"dev\": true,\n+      \"license\": \"ISC\",\n+      \"engines\": {\n+        \"node\": \">=12\"\n+      }\n+    },\n+    \"node_modules/yocto-queue\": {\n+      \"version\": \"0.1.0\",\n+      \"resolved\": \"https://registry.npmjs.org/yocto-queue/-/yocto-queue-0.1.0.tgz\",\n+      \"integrity\": \"sha512-rVksvsnNCdJ/ohGc6xgPwyN8eheCxsiLM8mxuE/t/mOVqJewPuO1miLpTHQiRgTKCLexL4MeAFVagts7HmNZ2Q==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=10\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/sponsors/sindresorhus\"\n+      }\n+    }\n+  }\n+}\n"
    },
    {
      "filepath": "generated-framework-test/package.json",
      "oldHash": "",
      "newHash": "ccff39c095f9da2c876c2df3a8012f23880db58a",
      "timestamp": "2025-07-23T21:16:41.667Z",
      "changeType": "content",
      "gitDiff": "diff --git a/generated-framework-test/package.json b/generated-framework-test/package.json\nnew file mode 100644\nindex 0000000..ccff39c\n--- /dev/null\n+++ b/generated-framework-test/package.json\n@@ -0,0 +1,34 @@\n+{\n+  \"name\": \"inquiry-to-booking-process\",\n+  \"version\": \"1.0.0\",\n+  \"description\": \"Generated business process framework code from BUSY files\",\n+  \"main\": \"dist/index.js\",\n+  \"types\": \"dist/index.d.ts\",\n+  \"scripts\": {\n+    \"build\": \"tsc\",\n+    \"dev\": \"tsc --watch\",\n+    \"test\": \"jest\",\n+    \"lint\": \"eslint src --ext .ts\"\n+  },\n+  \"dependencies\": {\n+    \"@orgata/framework\": \"file:../packages/orgata-framework\"\n+  },\n+  \"devDependencies\": {\n+    \"typescript\": \"^5.0.0\",\n+    \"@types/node\": \"^20.0.0\",\n+    \"jest\": \"^29.0.0\",\n+    \"@types/jest\": \"^29.0.0\",\n+    \"ts-jest\": \"^29.0.0\",\n+    \"eslint\": \"^8.0.0\",\n+    \"@typescript-eslint/eslint-plugin\": \"^6.0.0\",\n+    \"@typescript-eslint/parser\": \"^6.0.0\"\n+  },\n+  \"keywords\": [\n+    \"business-process\",\n+    \"orgata-framework\",\n+    \"typescript\",\n+    \"workflow\"\n+  ],\n+  \"author\": \"Generated by BUSY Compiler\",\n+  \"license\": \"MIT\"\n+}\n\\ No newline at end of file\n"
    },
    {
      "filepath": "generated-framework-test/src/index.ts",
      "oldHash": "",
      "newHash": "80da90343f82f0121b54862859c335068da0a8ba",
      "timestamp": "2025-07-23T21:16:41.706Z",
      "changeType": "content",
      "gitDiff": "diff --git a/generated-framework-test/src/index.ts b/generated-framework-test/src/index.ts\nnew file mode 100644\nindex 0000000..80da903\n--- /dev/null\n+++ b/generated-framework-test/src/index.ts\n@@ -0,0 +1,31 @@\n+/**\n+ * Generated Business Process Framework Code\n+ * \n+ * 🔗 Design Source: ../../design-docs/008-orgata-framework/ORGATA_FRAMEWORK_ARCHITECTURE.md\n+ */\n+\n+// Process exports\n+export { ClientOnboardingProcess } from './processes/client-onboarding-process';\n+export { InquiryToBookingProcess } from './processes/inquiry-to-booking-process';\n+\n+// Step exports\n+export { SendWelcomePackageStep } from './steps/send-welcome-package-step';\n+export { ClientQuestionnaireStep } from './steps/client-questionnaire-step';\n+export { TimelinePlanningStep } from './steps/timeline-planning-step';\n+export { LocationScoutingCoordinationStep } from './steps/location-scouting-coordination-step';\n+export { PreShootCallStep } from './steps/pre-shoot-call-step';\n+export { ShootPreparationHandoffStep } from './steps/shoot-preparation-handoff-step';\n+export { AcknowledgeInquiryStep } from './steps/acknowledge-inquiry-step';\n+export { QualifyLeadStep } from './steps/qualify-lead-step';\n+export { SendPortfolioAndPricingStep } from './steps/send-portfolio-and-pricing-step';\n+export { ScheduleConsultationStep } from './steps/schedule-consultation-step';\n+export { ConductConsultationStep } from './steps/conduct-consultation-step';\n+export { ProcessBookingStep } from './steps/process-booking-step';\n+\n+// Metadata\n+export const GENERATED_METADATA = {\n+  generatedAt: '2025-07-22T02:24:51.271Z',\n+  frameworkVersion: '0.1.0',\n+  processCount: 2,\n+  busySources: ['client-onboarding.busy', 'inquiry-to-booking.busy']\n+};\n\\ No newline at end of file\n"
    },
    {
      "filepath": "generated-framework-test/src/processes/client-onboarding-process.ts",
      "oldHash": "",
      "newHash": "532ba3242709530b3f23acff20de9ee81c94f508",
      "timestamp": "2025-07-23T21:16:41.748Z",
      "changeType": "content",
      "gitDiff": "diff --git a/generated-framework-test/src/processes/client-onboarding-process.ts b/generated-framework-test/src/processes/client-onboarding-process.ts\nnew file mode 100644\nindex 0000000..532ba32\n--- /dev/null\n+++ b/generated-framework-test/src/processes/client-onboarding-process.ts\n@@ -0,0 +1,45 @@\n+/**\n+ * client-onboarding Process\n+ * \n+ * Generated from: client-onboarding.busy\n+ * Description: Comprehensive onboarding process to set expectations and gather shoot requirements\n+ * \n+ * 🔗 Design Source: ../../design-docs/008-orgata-framework/ORGATA_FRAMEWORK_ARCHITECTURE.md\n+ */\n+\n+import { Process, ProcessConfig, ProcessContext, ProcessResult } from '@orgata/framework';\n+import { SendWelcomePackageStep } from '../steps/send-welcome-package-step';\n+import { ClientQuestionnaireStep } from '../steps/client-questionnaire-step';\n+import { TimelinePlanningStep } from '../steps/timeline-planning-step';\n+import { LocationScoutingCoordinationStep } from '../steps/location-scouting-coordination-step';\n+import { PreShootCallStep } from '../steps/pre-shoot-call-step';\n+import { ShootPreparationHandoffStep } from '../steps/shoot-preparation-handoff-step';\n+\n+export class ClientOnboardingProcess extends Process {\n+  constructor() {\n+    super({\n+      name: \"client-onboarding\",\n+      description: \"Comprehensive onboarding process to set expectations and gather shoot requirements\",\n+      layer: \"L0\",\n+      metadata: {\n+        generatedFrom: \"client-onboarding.busy\",\n+        generatedAt: \"2025-07-22T02:24:51.268Z\",\n+        busyVersion: \"1.0.0\"\n+      }\n+    });\n+    \n+    // Add all steps in sequence\n+    this.addStep(new SendWelcomePackageStep());\n+    this.addStep(new ClientQuestionnaireStep());\n+    this.addStep(new TimelinePlanningStep());\n+    this.addStep(new LocationScoutingCoordinationStep());\n+    this.addStep(new PreShootCallStep());\n+    this.addStep(new ShootPreparationHandoffStep());\n+  }\n+  \n+  async execute(context: ProcessContext): Promise<ProcessResult> {\n+    // Framework handles step-by-step execution with complete flexibility\n+    // Users can skip steps, go back, or provide manual data at any point\n+    return await this.executeSteps(context);\n+  }\n+}\n\\ No newline at end of file\n"
    },
    {
      "filepath": "generated-framework-test/src/processes/inquiry-to-booking-process.ts",
      "oldHash": "",
      "newHash": "a5a4688b27d1f050be03c8a9f9bc85242dc490e7",
      "timestamp": "2025-07-23T21:16:41.787Z",
      "changeType": "content",
      "gitDiff": "diff --git a/generated-framework-test/src/processes/inquiry-to-booking-process.ts b/generated-framework-test/src/processes/inquiry-to-booking-process.ts\nnew file mode 100644\nindex 0000000..a5a4688\n--- /dev/null\n+++ b/generated-framework-test/src/processes/inquiry-to-booking-process.ts\n@@ -0,0 +1,45 @@\n+/**\n+ * inquiry-to-booking Process\n+ * \n+ * Generated from: inquiry-to-booking.busy\n+ * Description: Systematic process for converting inquiries into confirmed bookings\n+ * \n+ * 🔗 Design Source: ../../design-docs/008-orgata-framework/ORGATA_FRAMEWORK_ARCHITECTURE.md\n+ */\n+\n+import { Process, ProcessConfig, ProcessContext, ProcessResult } from '@orgata/framework';\n+import { AcknowledgeInquiryStep } from '../steps/acknowledge-inquiry-step';\n+import { QualifyLeadStep } from '../steps/qualify-lead-step';\n+import { SendPortfolioAndPricingStep } from '../steps/send-portfolio-and-pricing-step';\n+import { ScheduleConsultationStep } from '../steps/schedule-consultation-step';\n+import { ConductConsultationStep } from '../steps/conduct-consultation-step';\n+import { ProcessBookingStep } from '../steps/process-booking-step';\n+\n+export class InquiryToBookingProcess extends Process {\n+  constructor() {\n+    super({\n+      name: \"inquiry-to-booking\",\n+      description: \"Systematic process for converting inquiries into confirmed bookings\",\n+      layer: \"L0\",\n+      metadata: {\n+        generatedFrom: \"inquiry-to-booking.busy\",\n+        generatedAt: \"2025-07-22T02:24:51.270Z\",\n+        busyVersion: \"1.0.0\"\n+      }\n+    });\n+    \n+    // Add all steps in sequence\n+    this.addStep(new AcknowledgeInquiryStep());\n+    this.addStep(new QualifyLeadStep());\n+    this.addStep(new SendPortfolioAndPricingStep());\n+    this.addStep(new ScheduleConsultationStep());\n+    this.addStep(new ConductConsultationStep());\n+    this.addStep(new ProcessBookingStep());\n+  }\n+  \n+  async execute(context: ProcessContext): Promise<ProcessResult> {\n+    // Framework handles step-by-step execution with complete flexibility\n+    // Users can skip steps, go back, or provide manual data at any point\n+    return await this.executeSteps(context);\n+  }\n+}\n\\ No newline at end of file\n"
    },
    {
      "filepath": "generated-framework-test/src/steps/acknowledge-inquiry-step.ts",
      "oldHash": "",
      "newHash": "a6566ea375d18fee68a1075af91c50dd3d1466bb",
      "timestamp": "2025-07-23T21:16:41.830Z",
      "changeType": "content",
      "gitDiff": "diff --git a/generated-framework-test/src/steps/acknowledge-inquiry-step.ts b/generated-framework-test/src/steps/acknowledge-inquiry-step.ts\nnew file mode 100644\nindex 0000000..a6566ea\n--- /dev/null\n+++ b/generated-framework-test/src/steps/acknowledge-inquiry-step.ts\n@@ -0,0 +1,48 @@\n+/**\n+ * acknowledge_inquiry - Send immediate acknowledgment to prospect\n+ * \n+ * Algorithm step with automated processing and manual override capability.\n+ * \n+ * 🔗 Design Source: ../../design-docs/008-orgata-framework/FRAMEWORK_API_SPECIFICATION.md\n+ */\n+\n+import { AlgorithmStep, AlgorithmStepConfig, StepContext, StepResult, AlgorithmInput, AlgorithmOutput, StepType } from '@orgata/framework';\n+\n+export class AcknowledgeInquiryStep extends AlgorithmStep {\n+  constructor() {\n+    super({\n+      id: 'acknowledge_inquiry',\n+      name: 'Acknowledge Inquiry',\n+      description: 'Send immediate acknowledgment to prospect',\n+      type: StepType.ALGORITHM,\n+      implementation: {\n+        type: 'auto_response_generation',\n+        version: '1.0.0',\n+        config: {\n+          timeout: 30000,\n+          retryAttempts: 3\n+        }\n+      },\n+      parameters: {}\n+    });\n+  }\n+  \n+  protected async executeAlgorithm(input: AlgorithmInput): Promise<AlgorithmOutput> {\n+    // TODO: Implement algorithm for: Send immediate acknowledgment to prospect\n+    // \n+    // Algorithm type: auto_response_generation\n+    // Estimated duration: unknown\n+    //\n+    // Framework ensures users can always override this with manual data\n+    \n+    throw new Error('Algorithm implementation required for acknowledge_inquiry');\n+  }\n+  \n+  protected extractInputs(context: StepContext): AlgorithmInput {\n+    // TODO: Extract required inputs from previous steps\n+    return {\n+      stepContext: context.inputData,\n+      parameters: this.parameters\n+    };\n+  }\n+}\n\\ No newline at end of file\n"
    },
    {
      "filepath": "generated-framework-test/src/steps/client-questionnaire-step.ts",
      "oldHash": "",
      "newHash": "955c04b998c0779f4bd92801c39e585fceab64a0",
      "timestamp": "2025-07-23T21:16:41.872Z",
      "changeType": "content",
      "gitDiff": "diff --git a/generated-framework-test/src/steps/client-questionnaire-step.ts b/generated-framework-test/src/steps/client-questionnaire-step.ts\nnew file mode 100644\nindex 0000000..955c04b\n--- /dev/null\n+++ b/generated-framework-test/src/steps/client-questionnaire-step.ts\n@@ -0,0 +1,48 @@\n+/**\n+ * client_questionnaire - Collect detailed shoot requirements and preferences\n+ * \n+ * Algorithm step with automated processing and manual override capability.\n+ * \n+ * 🔗 Design Source: ../../design-docs/008-orgata-framework/FRAMEWORK_API_SPECIFICATION.md\n+ */\n+\n+import { AlgorithmStep, AlgorithmStepConfig, StepContext, StepResult, AlgorithmInput, AlgorithmOutput, StepType } from '@orgata/framework';\n+\n+export class ClientQuestionnaireStep extends AlgorithmStep {\n+  constructor() {\n+    super({\n+      id: 'client_questionnaire',\n+      name: 'Client Questionnaire',\n+      description: 'Collect detailed shoot requirements and preferences',\n+      type: StepType.ALGORITHM,\n+      implementation: {\n+        type: 'custom',\n+        version: '1.0.0',\n+        config: {\n+          timeout: 30000,\n+          retryAttempts: 3\n+        }\n+      },\n+      parameters: {}\n+    });\n+  }\n+  \n+  protected async executeAlgorithm(input: AlgorithmInput): Promise<AlgorithmOutput> {\n+    // TODO: Implement algorithm for: Collect detailed shoot requirements and preferences\n+    // \n+    // Algorithm type: custom\n+    // Estimated duration: unknown\n+    //\n+    // Framework ensures users can always override this with manual data\n+    \n+    throw new Error('Algorithm implementation required for client_questionnaire');\n+  }\n+  \n+  protected extractInputs(context: StepContext): AlgorithmInput {\n+    // TODO: Extract required inputs from previous steps\n+    return {\n+      stepContext: context.inputData,\n+      parameters: this.parameters\n+    };\n+  }\n+}\n\\ No newline at end of file\n"
    },
    {
      "filepath": "generated-framework-test/src/steps/conduct-consultation-step.ts",
      "oldHash": "",
      "newHash": "64e22d30fcb2ab72276b577f4bead9673a49781b",
      "timestamp": "2025-07-23T21:16:41.916Z",
      "changeType": "content",
      "gitDiff": "diff --git a/generated-framework-test/src/steps/conduct-consultation-step.ts b/generated-framework-test/src/steps/conduct-consultation-step.ts\nnew file mode 100644\nindex 0000000..64e22d3\n--- /dev/null\n+++ b/generated-framework-test/src/steps/conduct-consultation-step.ts\n@@ -0,0 +1,48 @@\n+/**\n+ * conduct_consultation - Lead consultation call to close booking\n+ * \n+ * Algorithm step with automated processing and manual override capability.\n+ * \n+ * 🔗 Design Source: ../../design-docs/008-orgata-framework/FRAMEWORK_API_SPECIFICATION.md\n+ */\n+\n+import { AlgorithmStep, AlgorithmStepConfig, StepContext, StepResult, AlgorithmInput, AlgorithmOutput, StepType } from '@orgata/framework';\n+\n+export class ConductConsultationStep extends AlgorithmStep {\n+  constructor() {\n+    super({\n+      id: 'conduct_consultation',\n+      name: 'Conduct Consultation',\n+      description: 'Lead consultation call to close booking',\n+      type: StepType.ALGORITHM,\n+      implementation: {\n+        type: 'custom',\n+        version: '1.0.0',\n+        config: {\n+          timeout: 30000,\n+          retryAttempts: 3\n+        }\n+      },\n+      parameters: {}\n+    });\n+  }\n+  \n+  protected async executeAlgorithm(input: AlgorithmInput): Promise<AlgorithmOutput> {\n+    // TODO: Implement algorithm for: Lead consultation call to close booking\n+    // \n+    // Algorithm type: custom\n+    // Estimated duration: unknown\n+    //\n+    // Framework ensures users can always override this with manual data\n+    \n+    throw new Error('Algorithm implementation required for conduct_consultation');\n+  }\n+  \n+  protected extractInputs(context: StepContext): AlgorithmInput {\n+    // TODO: Extract required inputs from previous steps\n+    return {\n+      stepContext: context.inputData,\n+      parameters: this.parameters\n+    };\n+  }\n+}\n\\ No newline at end of file\n"
    },
    {
      "filepath": "generated-framework-test/src/steps/location-scouting-coordination-step.ts",
      "oldHash": "",
      "newHash": "a29afdb2ae241036ffd322baa6717b95fc05ef0a",
      "timestamp": "2025-07-23T21:16:41.957Z",
      "changeType": "content",
      "gitDiff": "diff --git a/generated-framework-test/src/steps/location-scouting-coordination-step.ts b/generated-framework-test/src/steps/location-scouting-coordination-step.ts\nnew file mode 100644\nindex 0000000..a29afdb\n--- /dev/null\n+++ b/generated-framework-test/src/steps/location-scouting-coordination-step.ts\n@@ -0,0 +1,48 @@\n+/**\n+ * location_scouting_coordination - Coordinate location details and logistics\n+ * \n+ * Algorithm step with automated processing and manual override capability.\n+ * \n+ * 🔗 Design Source: ../../design-docs/008-orgata-framework/FRAMEWORK_API_SPECIFICATION.md\n+ */\n+\n+import { AlgorithmStep, AlgorithmStepConfig, StepContext, StepResult, AlgorithmInput, AlgorithmOutput, StepType } from '@orgata/framework';\n+\n+export class LocationScoutingCoordinationStep extends AlgorithmStep {\n+  constructor() {\n+    super({\n+      id: 'location_scouting_coordination',\n+      name: 'Location Scouting Coordination',\n+      description: 'Coordinate location details and logistics',\n+      type: StepType.ALGORITHM,\n+      implementation: {\n+        type: 'custom',\n+        version: '1.0.0',\n+        config: {\n+          timeout: 30000,\n+          retryAttempts: 3\n+        }\n+      },\n+      parameters: {}\n+    });\n+  }\n+  \n+  protected async executeAlgorithm(input: AlgorithmInput): Promise<AlgorithmOutput> {\n+    // TODO: Implement algorithm for: Coordinate location details and logistics\n+    // \n+    // Algorithm type: custom\n+    // Estimated duration: unknown\n+    //\n+    // Framework ensures users can always override this with manual data\n+    \n+    throw new Error('Algorithm implementation required for location_scouting_coordination');\n+  }\n+  \n+  protected extractInputs(context: StepContext): AlgorithmInput {\n+    // TODO: Extract required inputs from previous steps\n+    return {\n+      stepContext: context.inputData,\n+      parameters: this.parameters\n+    };\n+  }\n+}\n\\ No newline at end of file\n"
    },
    {
      "filepath": "generated-framework-test/src/steps/pre-shoot-call-step.ts",
      "oldHash": "",
      "newHash": "9454e86dd415a0a60b708fecabf532a5381c3e51",
      "timestamp": "2025-07-23T21:16:42.000Z",
      "changeType": "content",
      "gitDiff": "diff --git a/generated-framework-test/src/steps/pre-shoot-call-step.ts b/generated-framework-test/src/steps/pre-shoot-call-step.ts\nnew file mode 100644\nindex 0000000..9454e86\n--- /dev/null\n+++ b/generated-framework-test/src/steps/pre-shoot-call-step.ts\n@@ -0,0 +1,48 @@\n+/**\n+ * pre_shoot_call - Final preparation call before shoot\n+ * \n+ * Algorithm step with automated processing and manual override capability.\n+ * \n+ * 🔗 Design Source: ../../design-docs/008-orgata-framework/FRAMEWORK_API_SPECIFICATION.md\n+ */\n+\n+import { AlgorithmStep, AlgorithmStepConfig, StepContext, StepResult, AlgorithmInput, AlgorithmOutput, StepType } from '@orgata/framework';\n+\n+export class PreShootCallStep extends AlgorithmStep {\n+  constructor() {\n+    super({\n+      id: 'pre_shoot_call',\n+      name: 'Pre Shoot Call',\n+      description: 'Final preparation call before shoot',\n+      type: StepType.ALGORITHM,\n+      implementation: {\n+        type: 'custom',\n+        version: '1.0.0',\n+        config: {\n+          timeout: 30000,\n+          retryAttempts: 3\n+        }\n+      },\n+      parameters: {}\n+    });\n+  }\n+  \n+  protected async executeAlgorithm(input: AlgorithmInput): Promise<AlgorithmOutput> {\n+    // TODO: Implement algorithm for: Final preparation call before shoot\n+    // \n+    // Algorithm type: custom\n+    // Estimated duration: unknown\n+    //\n+    // Framework ensures users can always override this with manual data\n+    \n+    throw new Error('Algorithm implementation required for pre_shoot_call');\n+  }\n+  \n+  protected extractInputs(context: StepContext): AlgorithmInput {\n+    // TODO: Extract required inputs from previous steps\n+    return {\n+      stepContext: context.inputData,\n+      parameters: this.parameters\n+    };\n+  }\n+}\n\\ No newline at end of file\n"
    },
    {
      "filepath": "generated-framework-test/src/steps/process-booking-step.ts",
      "oldHash": "",
      "newHash": "bee42b4a3b3c2524e0bd31566fa3fcd935aafeb3",
      "timestamp": "2025-07-23T21:16:42.042Z",
      "changeType": "content",
      "gitDiff": "diff --git a/generated-framework-test/src/steps/process-booking-step.ts b/generated-framework-test/src/steps/process-booking-step.ts\nnew file mode 100644\nindex 0000000..bee42b4\n--- /dev/null\n+++ b/generated-framework-test/src/steps/process-booking-step.ts\n@@ -0,0 +1,48 @@\n+/**\n+ * process_booking - Generate contract and process deposit\n+ * \n+ * Algorithm step with automated processing and manual override capability.\n+ * \n+ * 🔗 Design Source: ../../design-docs/008-orgata-framework/FRAMEWORK_API_SPECIFICATION.md\n+ */\n+\n+import { AlgorithmStep, AlgorithmStepConfig, StepContext, StepResult, AlgorithmInput, AlgorithmOutput, StepType } from '@orgata/framework';\n+\n+export class ProcessBookingStep extends AlgorithmStep {\n+  constructor() {\n+    super({\n+      id: 'process_booking',\n+      name: 'Process Booking',\n+      description: 'Generate contract and process deposit',\n+      type: StepType.ALGORITHM,\n+      implementation: {\n+        type: 'contract_generation_and_payment_processing',\n+        version: '1.0.0',\n+        config: {\n+          timeout: 30000,\n+          retryAttempts: 3\n+        }\n+      },\n+      parameters: {}\n+    });\n+  }\n+  \n+  protected async executeAlgorithm(input: AlgorithmInput): Promise<AlgorithmOutput> {\n+    // TODO: Implement algorithm for: Generate contract and process deposit\n+    // \n+    // Algorithm type: contract_generation_and_payment_processing\n+    // Estimated duration: unknown\n+    //\n+    // Framework ensures users can always override this with manual data\n+    \n+    throw new Error('Algorithm implementation required for process_booking');\n+  }\n+  \n+  protected extractInputs(context: StepContext): AlgorithmInput {\n+    // TODO: Extract required inputs from previous steps\n+    return {\n+      stepContext: context.inputData,\n+      parameters: this.parameters\n+    };\n+  }\n+}\n\\ No newline at end of file\n"
    },
    {
      "filepath": "generated-framework-test/src/steps/qualify-lead-step.ts",
      "oldHash": "",
      "newHash": "cf1e7426668121563d08ae630d6c6c0cceb28b7d",
      "timestamp": "2025-07-23T21:16:42.081Z",
      "changeType": "content",
      "gitDiff": "diff --git a/generated-framework-test/src/steps/qualify-lead-step.ts b/generated-framework-test/src/steps/qualify-lead-step.ts\nnew file mode 100644\nindex 0000000..cf1e742\n--- /dev/null\n+++ b/generated-framework-test/src/steps/qualify-lead-step.ts\n@@ -0,0 +1,49 @@\n+/**\n+ * qualify_lead - Assess fit and qualification criteria\n+ * \n+ * AI Agent step with intelligent processing and human review capability.\n+ * \n+ * 🔗 Design Source: ../../design-docs/008-orgata-framework/FRAMEWORK_API_SPECIFICATION.md\n+ */\n+\n+import { AgentStep, AgentStepConfig, StepContext, StepResult, AgentResponse, AlgorithmInput, AlgorithmOutput, StepType } from '@orgata/framework';\n+\n+export class QualifyLeadStep extends AgentStep {\n+  constructor() {\n+    super({\n+      id: 'qualify_lead',\n+      name: 'Qualify Lead',\n+      description: 'Assess fit and qualification criteria',\n+      type: StepType.AGENT,\n+      prompt: {\n+        systemPrompt: `You are an expert assistant helping with assess fit and qualification criteria. \n+        Provide thorough analysis and actionable recommendations.`,\n+        userPrompt: `Please assess fit and qualification criteria based on the provided context: {{context}}`,\n+        context: {\n+          businessDomain: 'business-process',\n+          expectedFormat: 'structured_data',\n+          qualityCriteria: ['accuracy', 'completeness', 'actionability']\n+        },\n+        constraints: {\n+          maxTokens: 1000,\n+          temperature: 0.3,\n+          requireStructuredOutput: true\n+        }\n+      },\n+      context: {} as any, // TODO: Implement proper AgentContext\n+      constraints: {\n+        timeout: 30000,\n+        retryAttempts: 3,\n+        fallbackToHuman: true  // Framework philosophy: always provide escape hatch\n+      }\n+    });\n+  }\n+  \n+  protected extractRelevantContext(context: StepContext): Record<string, any> {\n+    // TODO: Extract relevant data for Assess fit and qualification criteria\n+    return {\n+      context: JSON.stringify(context.inputData),\n+      businessContext: context.businessContext\n+    };\n+  }\n+}\n\\ No newline at end of file\n"
    },
    {
      "filepath": "generated-framework-test/src/steps/schedule-consultation-step.ts",
      "oldHash": "",
      "newHash": "560061735b80071907a3be4ad85967b2af1ed598",
      "timestamp": "2025-07-23T21:16:42.124Z",
      "changeType": "content",
      "gitDiff": "diff --git a/generated-framework-test/src/steps/schedule-consultation-step.ts b/generated-framework-test/src/steps/schedule-consultation-step.ts\nnew file mode 100644\nindex 0000000..5600617\n--- /dev/null\n+++ b/generated-framework-test/src/steps/schedule-consultation-step.ts\n@@ -0,0 +1,48 @@\n+/**\n+ * schedule_consultation - Book consultation call with qualified prospect\n+ * \n+ * Algorithm step with automated processing and manual override capability.\n+ * \n+ * 🔗 Design Source: ../../design-docs/008-orgata-framework/FRAMEWORK_API_SPECIFICATION.md\n+ */\n+\n+import { AlgorithmStep, AlgorithmStepConfig, StepContext, StepResult, AlgorithmInput, AlgorithmOutput, StepType } from '@orgata/framework';\n+\n+export class ScheduleConsultationStep extends AlgorithmStep {\n+  constructor() {\n+    super({\n+      id: 'schedule_consultation',\n+      name: 'Schedule Consultation',\n+      description: 'Book consultation call with qualified prospect',\n+      type: StepType.ALGORITHM,\n+      implementation: {\n+        type: 'calendar_integration_booking',\n+        version: '1.0.0',\n+        config: {\n+          timeout: 30000,\n+          retryAttempts: 3\n+        }\n+      },\n+      parameters: {}\n+    });\n+  }\n+  \n+  protected async executeAlgorithm(input: AlgorithmInput): Promise<AlgorithmOutput> {\n+    // TODO: Implement algorithm for: Book consultation call with qualified prospect\n+    // \n+    // Algorithm type: calendar_integration_booking\n+    // Estimated duration: unknown\n+    //\n+    // Framework ensures users can always override this with manual data\n+    \n+    throw new Error('Algorithm implementation required for schedule_consultation');\n+  }\n+  \n+  protected extractInputs(context: StepContext): AlgorithmInput {\n+    // TODO: Extract required inputs from previous steps\n+    return {\n+      stepContext: context.inputData,\n+      parameters: this.parameters\n+    };\n+  }\n+}\n\\ No newline at end of file\n"
    },
    {
      "filepath": "generated-framework-test/src/steps/send-portfolio-and-pricing-step.ts",
      "oldHash": "",
      "newHash": "c4c5830757fb803c8b16096874bad79ae56788d2",
      "timestamp": "2025-07-23T21:16:42.164Z",
      "changeType": "content",
      "gitDiff": "diff --git a/generated-framework-test/src/steps/send-portfolio-and-pricing-step.ts b/generated-framework-test/src/steps/send-portfolio-and-pricing-step.ts\nnew file mode 100644\nindex 0000000..c4c5830\n--- /dev/null\n+++ b/generated-framework-test/src/steps/send-portfolio-and-pricing-step.ts\n@@ -0,0 +1,48 @@\n+/**\n+ * send_portfolio_and_pricing - Provide portfolio examples and pricing information\n+ * \n+ * Algorithm step with automated processing and manual override capability.\n+ * \n+ * 🔗 Design Source: ../../design-docs/008-orgata-framework/FRAMEWORK_API_SPECIFICATION.md\n+ */\n+\n+import { AlgorithmStep, AlgorithmStepConfig, StepContext, StepResult, AlgorithmInput, AlgorithmOutput, StepType } from '@orgata/framework';\n+\n+export class SendPortfolioAndPricingStep extends AlgorithmStep {\n+  constructor() {\n+    super({\n+      id: 'send_portfolio_and_pricing',\n+      name: 'Send Portfolio And Pricing',\n+      description: 'Provide portfolio examples and pricing information',\n+      type: StepType.ALGORITHM,\n+      implementation: {\n+        type: 'personalized_portfolio_selection',\n+        version: '1.0.0',\n+        config: {\n+          timeout: 30000,\n+          retryAttempts: 3\n+        }\n+      },\n+      parameters: {}\n+    });\n+  }\n+  \n+  protected async executeAlgorithm(input: AlgorithmInput): Promise<AlgorithmOutput> {\n+    // TODO: Implement algorithm for: Provide portfolio examples and pricing information\n+    // \n+    // Algorithm type: personalized_portfolio_selection\n+    // Estimated duration: unknown\n+    //\n+    // Framework ensures users can always override this with manual data\n+    \n+    throw new Error('Algorithm implementation required for send_portfolio_and_pricing');\n+  }\n+  \n+  protected extractInputs(context: StepContext): AlgorithmInput {\n+    // TODO: Extract required inputs from previous steps\n+    return {\n+      stepContext: context.inputData,\n+      parameters: this.parameters\n+    };\n+  }\n+}\n\\ No newline at end of file\n"
    },
    {
      "filepath": "generated-framework-test/src/steps/send-welcome-package-step.ts",
      "oldHash": "",
      "newHash": "d4c78344c422ec6932e42d0bf1f35e7886c70e35",
      "timestamp": "2025-07-23T21:16:42.207Z",
      "changeType": "content",
      "gitDiff": "diff --git a/generated-framework-test/src/steps/send-welcome-package-step.ts b/generated-framework-test/src/steps/send-welcome-package-step.ts\nnew file mode 100644\nindex 0000000..d4c7834\n--- /dev/null\n+++ b/generated-framework-test/src/steps/send-welcome-package-step.ts\n@@ -0,0 +1,48 @@\n+/**\n+ * send_welcome_package - Send welcome email with onboarding materials\n+ * \n+ * Algorithm step with automated processing and manual override capability.\n+ * \n+ * 🔗 Design Source: ../../design-docs/008-orgata-framework/FRAMEWORK_API_SPECIFICATION.md\n+ */\n+\n+import { AlgorithmStep, AlgorithmStepConfig, StepContext, StepResult, AlgorithmInput, AlgorithmOutput, StepType } from '@orgata/framework';\n+\n+export class SendWelcomePackageStep extends AlgorithmStep {\n+  constructor() {\n+    super({\n+      id: 'send_welcome_package',\n+      name: 'Send Welcome Package',\n+      description: 'Send welcome email with onboarding materials',\n+      type: StepType.ALGORITHM,\n+      implementation: {\n+        type: 'personalized_welcome_generation',\n+        version: '1.0.0',\n+        config: {\n+          timeout: 30000,\n+          retryAttempts: 3\n+        }\n+      },\n+      parameters: {}\n+    });\n+  }\n+  \n+  protected async executeAlgorithm(input: AlgorithmInput): Promise<AlgorithmOutput> {\n+    // TODO: Implement algorithm for: Send welcome email with onboarding materials\n+    // \n+    // Algorithm type: personalized_welcome_generation\n+    // Estimated duration: unknown\n+    //\n+    // Framework ensures users can always override this with manual data\n+    \n+    throw new Error('Algorithm implementation required for send_welcome_package');\n+  }\n+  \n+  protected extractInputs(context: StepContext): AlgorithmInput {\n+    // TODO: Extract required inputs from previous steps\n+    return {\n+      stepContext: context.inputData,\n+      parameters: this.parameters\n+    };\n+  }\n+}\n\\ No newline at end of file\n"
    },
    {
      "filepath": "generated-framework-test/src/steps/shoot-preparation-handoff-step.ts",
      "oldHash": "",
      "newHash": "2aa34cce90095cfa8278d222635854b015f89eb2",
      "timestamp": "2025-07-23T21:16:42.247Z",
      "changeType": "content",
      "gitDiff": "diff --git a/generated-framework-test/src/steps/shoot-preparation-handoff-step.ts b/generated-framework-test/src/steps/shoot-preparation-handoff-step.ts\nnew file mode 100644\nindex 0000000..2aa34cc\n--- /dev/null\n+++ b/generated-framework-test/src/steps/shoot-preparation-handoff-step.ts\n@@ -0,0 +1,48 @@\n+/**\n+ * shoot_preparation_handoff - Package all requirements for creative team\n+ * \n+ * Algorithm step with automated processing and manual override capability.\n+ * \n+ * 🔗 Design Source: ../../design-docs/008-orgata-framework/FRAMEWORK_API_SPECIFICATION.md\n+ */\n+\n+import { AlgorithmStep, AlgorithmStepConfig, StepContext, StepResult, AlgorithmInput, AlgorithmOutput, StepType } from '@orgata/framework';\n+\n+export class ShootPreparationHandoffStep extends AlgorithmStep {\n+  constructor() {\n+    super({\n+      id: 'shoot_preparation_handoff',\n+      name: 'Shoot Preparation Handoff',\n+      description: 'Package all requirements for creative team',\n+      type: StepType.ALGORITHM,\n+      implementation: {\n+        type: 'shoot_brief_compilation',\n+        version: '1.0.0',\n+        config: {\n+          timeout: 30000,\n+          retryAttempts: 3\n+        }\n+      },\n+      parameters: {}\n+    });\n+  }\n+  \n+  protected async executeAlgorithm(input: AlgorithmInput): Promise<AlgorithmOutput> {\n+    // TODO: Implement algorithm for: Package all requirements for creative team\n+    // \n+    // Algorithm type: shoot_brief_compilation\n+    // Estimated duration: unknown\n+    //\n+    // Framework ensures users can always override this with manual data\n+    \n+    throw new Error('Algorithm implementation required for shoot_preparation_handoff');\n+  }\n+  \n+  protected extractInputs(context: StepContext): AlgorithmInput {\n+    // TODO: Extract required inputs from previous steps\n+    return {\n+      stepContext: context.inputData,\n+      parameters: this.parameters\n+    };\n+  }\n+}\n\\ No newline at end of file\n"
    },
    {
      "filepath": "generated-framework-test/src/steps/timeline-planning-step.ts",
      "oldHash": "",
      "newHash": "2eb8e70afdb4e7c0f8d928b849365122aa581e9e",
      "timestamp": "2025-07-23T21:16:42.287Z",
      "changeType": "content",
      "gitDiff": "diff --git a/generated-framework-test/src/steps/timeline-planning-step.ts b/generated-framework-test/src/steps/timeline-planning-step.ts\nnew file mode 100644\nindex 0000000..2eb8e70\n--- /dev/null\n+++ b/generated-framework-test/src/steps/timeline-planning-step.ts\n@@ -0,0 +1,48 @@\n+/**\n+ * timeline_planning - Create detailed project timeline and milestones\n+ * \n+ * Algorithm step with automated processing and manual override capability.\n+ * \n+ * 🔗 Design Source: ../../design-docs/008-orgata-framework/FRAMEWORK_API_SPECIFICATION.md\n+ */\n+\n+import { AlgorithmStep, AlgorithmStepConfig, StepContext, StepResult, AlgorithmInput, AlgorithmOutput, StepType } from '@orgata/framework';\n+\n+export class TimelinePlanningStep extends AlgorithmStep {\n+  constructor() {\n+    super({\n+      id: 'timeline_planning',\n+      name: 'Timeline Planning',\n+      description: 'Create detailed project timeline and milestones',\n+      type: StepType.ALGORITHM,\n+      implementation: {\n+        type: 'custom',\n+        version: '1.0.0',\n+        config: {\n+          timeout: 30000,\n+          retryAttempts: 3\n+        }\n+      },\n+      parameters: {}\n+    });\n+  }\n+  \n+  protected async executeAlgorithm(input: AlgorithmInput): Promise<AlgorithmOutput> {\n+    // TODO: Implement algorithm for: Create detailed project timeline and milestones\n+    // \n+    // Algorithm type: custom\n+    // Estimated duration: unknown\n+    //\n+    // Framework ensures users can always override this with manual data\n+    \n+    throw new Error('Algorithm implementation required for timeline_planning');\n+  }\n+  \n+  protected extractInputs(context: StepContext): AlgorithmInput {\n+    // TODO: Extract required inputs from previous steps\n+    return {\n+      stepContext: context.inputData,\n+      parameters: this.parameters\n+    };\n+  }\n+}\n\\ No newline at end of file\n"
    },
    {
      "filepath": "generated-framework-test/test-framework.js",
      "oldHash": "",
      "newHash": "0affc42c2be0768bed7330027775ad96afe330d0",
      "timestamp": "2025-07-23T21:16:42.326Z",
      "changeType": "content",
      "gitDiff": "diff --git a/generated-framework-test/test-framework.js b/generated-framework-test/test-framework.js\nnew file mode 100644\nindex 0000000..0affc42\n--- /dev/null\n+++ b/generated-framework-test/test-framework.js\n@@ -0,0 +1,53 @@\n+#!/usr/bin/env node\n+\n+/**\n+ * Test script to demonstrate the generated Orgata Framework code\n+ */\n+\n+const { InquiryToBookingProcess } = require('./dist/index.js');\n+\n+async function testFrameworkUsage() {\n+  console.log('🚀 Testing Generated Orgata Framework Code\\n');\n+  \n+  try {\n+    // Create a process instance\n+    const process = new InquiryToBookingProcess();\n+    \n+    console.log('📋 Process Information:');\n+    console.log(`  Name: ${process.name}`);\n+    console.log(`  Steps: ${process.getSteps().length}`);\n+    console.log(`  Step Order: ${process.getStepOrder().join(' → ')}`);\n+    \n+    console.log('\\n🔧 Framework Features Demonstrated:');\n+    console.log('  ✅ Process created with complete flexibility');\n+    console.log('  ✅ Steps automatically registered in sequence');\n+    console.log('  ✅ TypeScript compilation successful');\n+    console.log('  ✅ Framework APIs properly imported and working');\n+    \n+    console.log('\\n📊 Process State:');\n+    const state = process.getState();\n+    console.log(`  Status: ${state.status}`);\n+    console.log(`  Current Step: ${state.currentStepId || 'None'}`);\n+    console.log(`  Completion: ${process.getCompletionPercentage()}%`);\n+    \n+    console.log('\\n🎯 Next Steps for Full Implementation:');\n+    console.log('  1. Implement TODO items in step classes');\n+    console.log('  2. Create ProcessContext with business data');\n+    console.log('  3. Execute process with real user interactions');\n+    console.log('  4. Test skip/override functionality');\n+    console.log('  5. Verify audit trail and state management');\n+    \n+    console.log('\\n🌟 Framework Philosophy Validated:');\n+    console.log('  \"Facilitate, Never Constrain\" ✅');\n+    console.log('  - Users can skip any step');\n+    console.log('  - Complete audit trail maintained');\n+    console.log('  - Immutable state with event sourcing');\n+    console.log('  - Forward-only history progression');\n+    \n+  } catch (error) {\n+    console.error('❌ Test failed:', error.message);\n+    process.exit(1);\n+  }\n+}\n+\n+testFrameworkUsage();\n\\ No newline at end of file\n"
    },
    {
      "filepath": "generated-framework-test/tsconfig.json",
      "oldHash": "",
      "newHash": "438c8f9b82c33d5486f39576af74109667a944fb",
      "timestamp": "2025-07-23T21:16:42.372Z",
      "changeType": "content",
      "gitDiff": "diff --git a/generated-framework-test/tsconfig.json b/generated-framework-test/tsconfig.json\nnew file mode 100644\nindex 0000000..438c8f9\n--- /dev/null\n+++ b/generated-framework-test/tsconfig.json\n@@ -0,0 +1,25 @@\n+{\n+  \"compilerOptions\": {\n+    \"target\": \"ES2020\",\n+    \"module\": \"commonjs\",\n+    \"lib\": [\n+      \"ES2020\"\n+    ],\n+    \"outDir\": \"./dist\",\n+    \"rootDir\": \"./src\",\n+    \"strict\": true,\n+    \"esModuleInterop\": true,\n+    \"skipLibCheck\": true,\n+    \"forceConsistentCasingInFileNames\": true,\n+    \"declaration\": true,\n+    \"declarationMap\": true,\n+    \"sourceMap\": true\n+  },\n+  \"include\": [\n+    \"src/**/*\"\n+  ],\n+  \"exclude\": [\n+    \"node_modules\",\n+    \"dist\"\n+  ]\n+}\n\\ No newline at end of file\n"
    },
    {
      "filepath": "packages/orgata-framework/README.md",
      "oldHash": "",
      "newHash": "6f8cb2b0fe350b2c50e7d55aae435e9bb79e953e",
      "timestamp": "2025-07-23T21:16:42.414Z",
      "changeType": "content",
      "gitDiff": "diff --git a/packages/orgata-framework/README.md b/packages/orgata-framework/README.md\nnew file mode 100644\nindex 0000000..6f8cb2b\n--- /dev/null\n+++ b/packages/orgata-framework/README.md\n@@ -0,0 +1,165 @@\n+# @orgata/framework\n+\n+A React-like framework for business process development with complete flexibility and intelligent override capabilities.\n+\n+## Philosophy: \"Facilitate, Never Constrain\"\n+\n+The Orgata Framework is designed around the core principle that business tools should enhance productivity without creating bureaucratic barriers. Users can always skip steps, go back, provide manual data, or request AI assistance to bypass any constraint.\n+\n+## Key Features\n+\n+- **🔄 Immutable State Management**: Event-sourced state with complete audit trail\n+- **⏭️ Universal Flexibility**: Skip any step, go back, provide manual data\n+- **🤖 AI-Powered Overrides**: Conversational assistance to bypass constraints  \n+- **📝 Complete Audit Trail**: Track all decisions and exceptions for improvement\n+- **🎯 Three Step Types**: Human (UI), Agent (AI), Algorithm (Code)\n+- **🚫 Never Rewrite History**: Forward-only updates preserve complete record\n+\n+## Quick Start\n+\n+### Installation\n+\n+```bash\n+npm install @orgata/framework\n+```\n+\n+### Basic Usage\n+\n+```typescript\n+import { Process, HumanStep, ProcessConfig } from '@orgata/framework';\n+\n+// Create a simple process\n+class ClientOnboardingProcess extends Process {\n+  constructor() {\n+    super({\n+      name: \"Client Onboarding\",\n+      layer: \"L0\",\n+      estimatedDuration: \"2 hours\"\n+    });\n+    \n+    this.addStep(new ContactInfoStep());\n+    this.addStep(new NeedsAssessmentStep());\n+  }\n+  \n+  async execute(context) {\n+    return await this.executeSteps(context);\n+  }\n+}\n+\n+// Create a human step with form UI\n+class ContactInfoStep extends HumanStep {\n+  constructor() {\n+    super({\n+      id: 'contact-info',\n+      name: 'Collect Contact Information',\n+      model: {\n+        fields: [\n+          {\n+            id: 'email',\n+            type: FieldType.EMAIL,\n+            label: 'Email Address',\n+            required: true\n+          },\n+          {\n+            id: 'phone',\n+            type: FieldType.PHONE,\n+            label: 'Phone Number',\n+            required: false\n+          }\n+        ]\n+      }\n+    });\n+  }\n+}\n+```\n+\n+### Flexible Navigation\n+\n+```typescript\n+const process = new ClientOnboardingProcess();\n+\n+// Skip a step with manual data\n+await process.skipStep('contact-info', 'Already have contact info', {\n+  email: 'client@example.com',\n+  phone: '+1-555-0123'\n+});\n+\n+// Go back to previous step\n+await process.goBack(1);\n+\n+// Navigate to specific step\n+await process.goToStep('needs-assessment', 'Need to update requirements');\n+```\n+\n+## Core Concepts\n+\n+### Process Class\n+\n+The base `Process` class provides:\n+- Step management and execution\n+- Flexible navigation (skip, go back, jump to step)\n+- Immutable state management\n+- Complete audit trail\n+- AI-powered override system\n+\n+### Step Types\n+\n+**HumanStep**: UI-based user interaction\n+- Automatic form generation from descriptions\n+- Flexible validation and override capabilities\n+- Alternative UI generation for complex requirements\n+\n+**AgentStep**: AI-powered processing  \n+- Context-aware prompt generation\n+- Confidence scoring and human review triggers\n+- Structured output parsing and validation\n+\n+**AlgorithmStep**: Code-based processing\n+- Type-safe input/output handling\n+- Error handling and recovery\n+- Performance monitoring\n+\n+### State Management\n+\n+The framework uses immutable state with event sourcing:\n+- All changes create new events (never modify history)\n+- Complete audit trail of all decisions\n+- Exception tracking for process improvement\n+- Forward-only updates preserve integrity\n+\n+## Design Documentation\n+\n+This framework is based on comprehensive design specifications:\n+\n+- **[Architecture Overview](../design-docs/008-orgata-framework/ORGATA_FRAMEWORK_ARCHITECTURE.md)**: Core design philosophy and principles\n+- **[API Specification](../design-docs/008-orgata-framework/FRAMEWORK_API_SPECIFICATION.md)**: Complete TypeScript API reference  \n+- **[Implementation Plan](../design-docs/008-orgata-framework/IMPLEMENTATION_PLAN.md)**: Development roadmap and timeline\n+- **[Code Generation](../design-docs/008-orgata-framework/CODE_GENERATION_PATTERNS.md)**: Templates for generating framework code\n+\n+## Development Status\n+\n+Current status: **Phase 1 Implementation** (Core Framework)\n+\n+✅ **Completed**:\n+- Core framework classes (Process, Step types)\n+- Immutable state management with event sourcing  \n+- TypeScript types and API structure\n+- Package setup and build configuration\n+\n+🔄 **In Progress**:\n+- Process execution engine\n+- Flexibility and override system\n+- UI integration layer\n+\n+📋 **Planned**:\n+- AI agent integration\n+- Code generation from BUSY files\n+- IDE integration and tooling\n+\n+## Contributing\n+\n+This framework is part of the larger BUSY Language project. See the [main repository](../../README.md) for contribution guidelines.\n+\n+## License\n+\n+MIT - See [LICENSE](../../LICENSE) for details.\n\\ No newline at end of file\n"
    },
    {
      "filepath": "packages/orgata-framework/package-lock.json",
      "oldHash": "",
      "newHash": "9b55647220e294b974499c790a58d45f73f8e26b",
      "timestamp": "2025-07-23T21:16:42.452Z",
      "changeType": "content",
      "gitDiff": "diff --git a/packages/orgata-framework/package-lock.json b/packages/orgata-framework/package-lock.json\nnew file mode 100644\nindex 0000000..9b55647\n--- /dev/null\n+++ b/packages/orgata-framework/package-lock.json\n@@ -0,0 +1,4771 @@\n+{\n+  \"name\": \"@orgata/framework\",\n+  \"version\": \"0.1.0\",\n+  \"lockfileVersion\": 3,\n+  \"requires\": true,\n+  \"packages\": {\n+    \"\": {\n+      \"name\": \"@orgata/framework\",\n+      \"version\": \"0.1.0\",\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@types/node\": \"^20.0.0\",\n+        \"eventemitter3\": \"^5.0.0\",\n+        \"immer\": \"^10.0.0\",\n+        \"zod\": \"^3.22.0\"\n+      },\n+      \"devDependencies\": {\n+        \"@typescript-eslint/eslint-plugin\": \"^6.0.0\",\n+        \"@typescript-eslint/parser\": \"^6.0.0\",\n+        \"eslint\": \"^8.0.0\",\n+        \"tsup\": \"^8.0.0\",\n+        \"typescript\": \"^5.0.0\",\n+        \"vitest\": \"^1.0.0\"\n+      }\n+    },\n+    \"node_modules/@esbuild/aix-ppc64\": {\n+      \"version\": \"0.25.8\",\n+      \"resolved\": \"https://registry.npmjs.org/@esbuild/aix-ppc64/-/aix-ppc64-0.25.8.tgz\",\n+      \"integrity\": \"sha512-urAvrUedIqEiFR3FYSLTWQgLu5tb+m0qZw0NBEasUeo6wuqatkMDaRT+1uABiGXEu5vqgPd7FGE1BhsAIy9QVA==\",\n+      \"cpu\": [\n+        \"ppc64\"\n+      ],\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"optional\": true,\n+      \"os\": [\n+        \"aix\"\n+      ],\n+      \"engines\": {\n+        \"node\": \">=18\"\n+      }\n+    },\n+    \"node_modules/@esbuild/android-arm\": {\n+      \"version\": \"0.25.8\",\n+      \"resolved\": \"https://registry.npmjs.org/@esbuild/android-arm/-/android-arm-0.25.8.tgz\",\n+      \"integrity\": \"sha512-RONsAvGCz5oWyePVnLdZY/HHwA++nxYWIX1atInlaW6SEkwq6XkP3+cb825EUcRs5Vss/lGh/2YxAb5xqc07Uw==\",\n+      \"cpu\": [\n+        \"arm\"\n+      ],\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"optional\": true,\n+      \"os\": [\n+        \"android\"\n+      ],\n+      \"engines\": {\n+        \"node\": \">=18\"\n+      }\n+    },\n+    \"node_modules/@esbuild/android-arm64\": {\n+      \"version\": \"0.25.8\",\n+      \"resolved\": \"https://registry.npmjs.org/@esbuild/android-arm64/-/android-arm64-0.25.8.tgz\",\n+      \"integrity\": \"sha512-OD3p7LYzWpLhZEyATcTSJ67qB5D+20vbtr6vHlHWSQYhKtzUYrETuWThmzFpZtFsBIxRvhO07+UgVA9m0i/O1w==\",\n+      \"cpu\": [\n+        \"arm64\"\n+      ],\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"optional\": true,\n+      \"os\": [\n+        \"android\"\n+      ],\n+      \"engines\": {\n+        \"node\": \">=18\"\n+      }\n+    },\n+    \"node_modules/@esbuild/android-x64\": {\n+      \"version\": \"0.25.8\",\n+      \"resolved\": \"https://registry.npmjs.org/@esbuild/android-x64/-/android-x64-0.25.8.tgz\",\n+      \"integrity\": \"sha512-yJAVPklM5+4+9dTeKwHOaA+LQkmrKFX96BM0A/2zQrbS6ENCmxc4OVoBs5dPkCCak2roAD+jKCdnmOqKszPkjA==\",\n+      \"cpu\": [\n+        \"x64\"\n+      ],\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"optional\": true,\n+      \"os\": [\n+        \"android\"\n+      ],\n+      \"engines\": {\n+        \"node\": \">=18\"\n+      }\n+    },\n+    \"node_modules/@esbuild/darwin-arm64\": {\n+      \"version\": \"0.25.8\",\n+      \"resolved\": \"https://registry.npmjs.org/@esbuild/darwin-arm64/-/darwin-arm64-0.25.8.tgz\",\n+      \"integrity\": \"sha512-Jw0mxgIaYX6R8ODrdkLLPwBqHTtYHJSmzzd+QeytSugzQ0Vg4c5rDky5VgkoowbZQahCbsv1rT1KW72MPIkevw==\",\n+      \"cpu\": [\n+        \"arm64\"\n+      ],\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"optional\": true,\n+      \"os\": [\n+        \"darwin\"\n+      ],\n+      \"engines\": {\n+        \"node\": \">=18\"\n+      }\n+    },\n+    \"node_modules/@esbuild/darwin-x64\": {\n+      \"version\": \"0.25.8\",\n+      \"resolved\": \"https://registry.npmjs.org/@esbuild/darwin-x64/-/darwin-x64-0.25.8.tgz\",\n+      \"integrity\": \"sha512-Vh2gLxxHnuoQ+GjPNvDSDRpoBCUzY4Pu0kBqMBDlK4fuWbKgGtmDIeEC081xi26PPjn+1tct+Bh8FjyLlw1Zlg==\",\n+      \"cpu\": [\n+        \"x64\"\n+      ],\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"optional\": true,\n+      \"os\": [\n+        \"darwin\"\n+      ],\n+      \"engines\": {\n+        \"node\": \">=18\"\n+      }\n+    },\n+    \"node_modules/@esbuild/freebsd-arm64\": {\n+      \"version\": \"0.25.8\",\n+      \"resolved\": \"https://registry.npmjs.org/@esbuild/freebsd-arm64/-/freebsd-arm64-0.25.8.tgz\",\n+      \"integrity\": \"sha512-YPJ7hDQ9DnNe5vxOm6jaie9QsTwcKedPvizTVlqWG9GBSq+BuyWEDazlGaDTC5NGU4QJd666V0yqCBL2oWKPfA==\",\n+      \"cpu\": [\n+        \"arm64\"\n+      ],\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"optional\": true,\n+      \"os\": [\n+        \"freebsd\"\n+      ],\n+      \"engines\": {\n+        \"node\": \">=18\"\n+      }\n+    },\n+    \"node_modules/@esbuild/freebsd-x64\": {\n+      \"version\": \"0.25.8\",\n+      \"resolved\": \"https://registry.npmjs.org/@esbuild/freebsd-x64/-/freebsd-x64-0.25.8.tgz\",\n+      \"integrity\": \"sha512-MmaEXxQRdXNFsRN/KcIimLnSJrk2r5H8v+WVafRWz5xdSVmWLoITZQXcgehI2ZE6gioE6HirAEToM/RvFBeuhw==\",\n+      \"cpu\": [\n+        \"x64\"\n+      ],\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"optional\": true,\n+      \"os\": [\n+        \"freebsd\"\n+      ],\n+      \"engines\": {\n+        \"node\": \">=18\"\n+      }\n+    },\n+    \"node_modules/@esbuild/linux-arm\": {\n+      \"version\": \"0.25.8\",\n+      \"resolved\": \"https://registry.npmjs.org/@esbuild/linux-arm/-/linux-arm-0.25.8.tgz\",\n+      \"integrity\": \"sha512-FuzEP9BixzZohl1kLf76KEVOsxtIBFwCaLupVuk4eFVnOZfU+Wsn+x5Ryam7nILV2pkq2TqQM9EZPsOBuMC+kg==\",\n+      \"cpu\": [\n+        \"arm\"\n+      ],\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"optional\": true,\n+      \"os\": [\n+        \"linux\"\n+      ],\n+      \"engines\": {\n+        \"node\": \">=18\"\n+      }\n+    },\n+    \"node_modules/@esbuild/linux-arm64\": {\n+      \"version\": \"0.25.8\",\n+      \"resolved\": \"https://registry.npmjs.org/@esbuild/linux-arm64/-/linux-arm64-0.25.8.tgz\",\n+      \"integrity\": \"sha512-WIgg00ARWv/uYLU7lsuDK00d/hHSfES5BzdWAdAig1ioV5kaFNrtK8EqGcUBJhYqotlUByUKz5Qo6u8tt7iD/w==\",\n+      \"cpu\": [\n+        \"arm64\"\n+      ],\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"optional\": true,\n+      \"os\": [\n+        \"linux\"\n+      ],\n+      \"engines\": {\n+        \"node\": \">=18\"\n+      }\n+    },\n+    \"node_modules/@esbuild/linux-ia32\": {\n+      \"version\": \"0.25.8\",\n+      \"resolved\": \"https://registry.npmjs.org/@esbuild/linux-ia32/-/linux-ia32-0.25.8.tgz\",\n+      \"integrity\": \"sha512-A1D9YzRX1i+1AJZuFFUMP1E9fMaYY+GnSQil9Tlw05utlE86EKTUA7RjwHDkEitmLYiFsRd9HwKBPEftNdBfjg==\",\n+      \"cpu\": [\n+        \"ia32\"\n+      ],\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"optional\": true,\n+      \"os\": [\n+        \"linux\"\n+      ],\n+      \"engines\": {\n+        \"node\": \">=18\"\n+      }\n+    },\n+    \"node_modules/@esbuild/linux-loong64\": {\n+      \"version\": \"0.25.8\",\n+      \"resolved\": \"https://registry.npmjs.org/@esbuild/linux-loong64/-/linux-loong64-0.25.8.tgz\",\n+      \"integrity\": \"sha512-O7k1J/dwHkY1RMVvglFHl1HzutGEFFZ3kNiDMSOyUrB7WcoHGf96Sh+64nTRT26l3GMbCW01Ekh/ThKM5iI7hQ==\",\n+      \"cpu\": [\n+        \"loong64\"\n+      ],\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"optional\": true,\n+      \"os\": [\n+        \"linux\"\n+      ],\n+      \"engines\": {\n+        \"node\": \">=18\"\n+      }\n+    },\n+    \"node_modules/@esbuild/linux-mips64el\": {\n+      \"version\": \"0.25.8\",\n+      \"resolved\": \"https://registry.npmjs.org/@esbuild/linux-mips64el/-/linux-mips64el-0.25.8.tgz\",\n+      \"integrity\": \"sha512-uv+dqfRazte3BzfMp8PAQXmdGHQt2oC/y2ovwpTteqrMx2lwaksiFZ/bdkXJC19ttTvNXBuWH53zy/aTj1FgGw==\",\n+      \"cpu\": [\n+        \"mips64el\"\n+      ],\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"optional\": true,\n+      \"os\": [\n+        \"linux\"\n+      ],\n+      \"engines\": {\n+        \"node\": \">=18\"\n+      }\n+    },\n+    \"node_modules/@esbuild/linux-ppc64\": {\n+      \"version\": \"0.25.8\",\n+      \"resolved\": \"https://registry.npmjs.org/@esbuild/linux-ppc64/-/linux-ppc64-0.25.8.tgz\",\n+      \"integrity\": \"sha512-GyG0KcMi1GBavP5JgAkkstMGyMholMDybAf8wF5A70CALlDM2p/f7YFE7H92eDeH/VBtFJA5MT4nRPDGg4JuzQ==\",\n+      \"cpu\": [\n+        \"ppc64\"\n+      ],\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"optional\": true,\n+      \"os\": [\n+        \"linux\"\n+      ],\n+      \"engines\": {\n+        \"node\": \">=18\"\n+      }\n+    },\n+    \"node_modules/@esbuild/linux-riscv64\": {\n+      \"version\": \"0.25.8\",\n+      \"resolved\": \"https://registry.npmjs.org/@esbuild/linux-riscv64/-/linux-riscv64-0.25.8.tgz\",\n+      \"integrity\": \"sha512-rAqDYFv3yzMrq7GIcen3XP7TUEG/4LK86LUPMIz6RT8A6pRIDn0sDcvjudVZBiiTcZCY9y2SgYX2lgK3AF+1eg==\",\n+      \"cpu\": [\n+        \"riscv64\"\n+      ],\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"optional\": true,\n+      \"os\": [\n+        \"linux\"\n+      ],\n+      \"engines\": {\n+        \"node\": \">=18\"\n+      }\n+    },\n+    \"node_modules/@esbuild/linux-s390x\": {\n+      \"version\": \"0.25.8\",\n+      \"resolved\": \"https://registry.npmjs.org/@esbuild/linux-s390x/-/linux-s390x-0.25.8.tgz\",\n+      \"integrity\": \"sha512-Xutvh6VjlbcHpsIIbwY8GVRbwoviWT19tFhgdA7DlenLGC/mbc3lBoVb7jxj9Z+eyGqvcnSyIltYUrkKzWqSvg==\",\n+      \"cpu\": [\n+        \"s390x\"\n+      ],\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"optional\": true,\n+      \"os\": [\n+        \"linux\"\n+      ],\n+      \"engines\": {\n+        \"node\": \">=18\"\n+      }\n+    },\n+    \"node_modules/@esbuild/linux-x64\": {\n+      \"version\": \"0.25.8\",\n+      \"resolved\": \"https://registry.npmjs.org/@esbuild/linux-x64/-/linux-x64-0.25.8.tgz\",\n+      \"integrity\": \"sha512-ASFQhgY4ElXh3nDcOMTkQero4b1lgubskNlhIfJrsH5OKZXDpUAKBlNS0Kx81jwOBp+HCeZqmoJuihTv57/jvQ==\",\n+      \"cpu\": [\n+        \"x64\"\n+      ],\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"optional\": true,\n+      \"os\": [\n+        \"linux\"\n+      ],\n+      \"engines\": {\n+        \"node\": \">=18\"\n+      }\n+    },\n+    \"node_modules/@esbuild/netbsd-arm64\": {\n+      \"version\": \"0.25.8\",\n+      \"resolved\": \"https://registry.npmjs.org/@esbuild/netbsd-arm64/-/netbsd-arm64-0.25.8.tgz\",\n+      \"integrity\": \"sha512-d1KfruIeohqAi6SA+gENMuObDbEjn22olAR7egqnkCD9DGBG0wsEARotkLgXDu6c4ncgWTZJtN5vcgxzWRMzcw==\",\n+      \"cpu\": [\n+        \"arm64\"\n+      ],\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"optional\": true,\n+      \"os\": [\n+        \"netbsd\"\n+      ],\n+      \"engines\": {\n+        \"node\": \">=18\"\n+      }\n+    },\n+    \"node_modules/@esbuild/netbsd-x64\": {\n+      \"version\": \"0.25.8\",\n+      \"resolved\": \"https://registry.npmjs.org/@esbuild/netbsd-x64/-/netbsd-x64-0.25.8.tgz\",\n+      \"integrity\": \"sha512-nVDCkrvx2ua+XQNyfrujIG38+YGyuy2Ru9kKVNyh5jAys6n+l44tTtToqHjino2My8VAY6Lw9H7RI73XFi66Cg==\",\n+      \"cpu\": [\n+        \"x64\"\n+      ],\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"optional\": true,\n+      \"os\": [\n+        \"netbsd\"\n+      ],\n+      \"engines\": {\n+        \"node\": \">=18\"\n+      }\n+    },\n+    \"node_modules/@esbuild/openbsd-arm64\": {\n+      \"version\": \"0.25.8\",\n+      \"resolved\": \"https://registry.npmjs.org/@esbuild/openbsd-arm64/-/openbsd-arm64-0.25.8.tgz\",\n+      \"integrity\": \"sha512-j8HgrDuSJFAujkivSMSfPQSAa5Fxbvk4rgNAS5i3K+r8s1X0p1uOO2Hl2xNsGFppOeHOLAVgYwDVlmxhq5h+SQ==\",\n+      \"cpu\": [\n+        \"arm64\"\n+      ],\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"optional\": true,\n+      \"os\": [\n+        \"openbsd\"\n+      ],\n+      \"engines\": {\n+        \"node\": \">=18\"\n+      }\n+    },\n+    \"node_modules/@esbuild/openbsd-x64\": {\n+      \"version\": \"0.25.8\",\n+      \"resolved\": \"https://registry.npmjs.org/@esbuild/openbsd-x64/-/openbsd-x64-0.25.8.tgz\",\n+      \"integrity\": \"sha512-1h8MUAwa0VhNCDp6Af0HToI2TJFAn1uqT9Al6DJVzdIBAd21m/G0Yfc77KDM3uF3T/YaOgQq3qTJHPbTOInaIQ==\",\n+      \"cpu\": [\n+        \"x64\"\n+      ],\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"optional\": true,\n+      \"os\": [\n+        \"openbsd\"\n+      ],\n+      \"engines\": {\n+        \"node\": \">=18\"\n+      }\n+    },\n+    \"node_modules/@esbuild/openharmony-arm64\": {\n+      \"version\": \"0.25.8\",\n+      \"resolved\": \"https://registry.npmjs.org/@esbuild/openharmony-arm64/-/openharmony-arm64-0.25.8.tgz\",\n+      \"integrity\": \"sha512-r2nVa5SIK9tSWd0kJd9HCffnDHKchTGikb//9c7HX+r+wHYCpQrSgxhlY6KWV1nFo1l4KFbsMlHk+L6fekLsUg==\",\n+      \"cpu\": [\n+        \"arm64\"\n+      ],\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"optional\": true,\n+      \"os\": [\n+        \"openharmony\"\n+      ],\n+      \"engines\": {\n+        \"node\": \">=18\"\n+      }\n+    },\n+    \"node_modules/@esbuild/sunos-x64\": {\n+      \"version\": \"0.25.8\",\n+      \"resolved\": \"https://registry.npmjs.org/@esbuild/sunos-x64/-/sunos-x64-0.25.8.tgz\",\n+      \"integrity\": \"sha512-zUlaP2S12YhQ2UzUfcCuMDHQFJyKABkAjvO5YSndMiIkMimPmxA+BYSBikWgsRpvyxuRnow4nS5NPnf9fpv41w==\",\n+      \"cpu\": [\n+        \"x64\"\n+      ],\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"optional\": true,\n+      \"os\": [\n+        \"sunos\"\n+      ],\n+      \"engines\": {\n+        \"node\": \">=18\"\n+      }\n+    },\n+    \"node_modules/@esbuild/win32-arm64\": {\n+      \"version\": \"0.25.8\",\n+      \"resolved\": \"https://registry.npmjs.org/@esbuild/win32-arm64/-/win32-arm64-0.25.8.tgz\",\n+      \"integrity\": \"sha512-YEGFFWESlPva8hGL+zvj2z/SaK+pH0SwOM0Nc/d+rVnW7GSTFlLBGzZkuSU9kFIGIo8q9X3ucpZhu8PDN5A2sQ==\",\n+      \"cpu\": [\n+        \"arm64\"\n+      ],\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"optional\": true,\n+      \"os\": [\n+        \"win32\"\n+      ],\n+      \"engines\": {\n+        \"node\": \">=18\"\n+      }\n+    },\n+    \"node_modules/@esbuild/win32-ia32\": {\n+      \"version\": \"0.25.8\",\n+      \"resolved\": \"https://registry.npmjs.org/@esbuild/win32-ia32/-/win32-ia32-0.25.8.tgz\",\n+      \"integrity\": \"sha512-hiGgGC6KZ5LZz58OL/+qVVoZiuZlUYlYHNAmczOm7bs2oE1XriPFi5ZHHrS8ACpV5EjySrnoCKmcbQMN+ojnHg==\",\n+      \"cpu\": [\n+        \"ia32\"\n+      ],\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"optional\": true,\n+      \"os\": [\n+        \"win32\"\n+      ],\n+      \"engines\": {\n+        \"node\": \">=18\"\n+      }\n+    },\n+    \"node_modules/@esbuild/win32-x64\": {\n+      \"version\": \"0.25.8\",\n+      \"resolved\": \"https://registry.npmjs.org/@esbuild/win32-x64/-/win32-x64-0.25.8.tgz\",\n+      \"integrity\": \"sha512-cn3Yr7+OaaZq1c+2pe+8yxC8E144SReCQjN6/2ynubzYjvyqZjTXfQJpAcQpsdJq3My7XADANiYGHoFC69pLQw==\",\n+      \"cpu\": [\n+        \"x64\"\n+      ],\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"optional\": true,\n+      \"os\": [\n+        \"win32\"\n+      ],\n+      \"engines\": {\n+        \"node\": \">=18\"\n+      }\n+    },\n+    \"node_modules/@eslint-community/eslint-utils\": {\n+      \"version\": \"4.7.0\",\n+      \"resolved\": \"https://registry.npmjs.org/@eslint-community/eslint-utils/-/eslint-utils-4.7.0.tgz\",\n+      \"integrity\": \"sha512-dyybb3AcajC7uha6CvhdVRJqaKyn7w2YKqKyAN37NKYgZT36w+iRb0Dymmc5qEJ549c/S31cMMSFd75bteCpCw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"eslint-visitor-keys\": \"^3.4.3\"\n+      },\n+      \"engines\": {\n+        \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://opencollective.com/eslint\"\n+      },\n+      \"peerDependencies\": {\n+        \"eslint\": \"^6.0.0 || ^7.0.0 || >=8.0.0\"\n+      }\n+    },\n+    \"node_modules/@eslint-community/regexpp\": {\n+      \"version\": \"4.12.1\",\n+      \"resolved\": \"https://registry.npmjs.org/@eslint-community/regexpp/-/regexpp-4.12.1.tgz\",\n+      \"integrity\": \"sha512-CCZCDJuduB9OUkFkY2IgppNZMi2lBQgD2qzwXkEia16cge2pijY/aXi96CJMquDMn3nJdlPV1A5KrJEXwfLNzQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \"^12.0.0 || ^14.0.0 || >=16.0.0\"\n+      }\n+    },\n+    \"node_modules/@eslint/eslintrc\": {\n+      \"version\": \"2.1.4\",\n+      \"resolved\": \"https://registry.npmjs.org/@eslint/eslintrc/-/eslintrc-2.1.4.tgz\",\n+      \"integrity\": \"sha512-269Z39MS6wVJtsoUl10L60WdkhJVdPG24Q4eZTH3nnF6lpvSShEK3wQjDX9JRWAUPvPh7COouPpU9IrqaZFvtQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"ajv\": \"^6.12.4\",\n+        \"debug\": \"^4.3.2\",\n+        \"espree\": \"^9.6.0\",\n+        \"globals\": \"^13.19.0\",\n+        \"ignore\": \"^5.2.0\",\n+        \"import-fresh\": \"^3.2.1\",\n+        \"js-yaml\": \"^4.1.0\",\n+        \"minimatch\": \"^3.1.2\",\n+        \"strip-json-comments\": \"^3.1.1\"\n+      },\n+      \"engines\": {\n+        \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://opencollective.com/eslint\"\n+      }\n+    },\n+    \"node_modules/@eslint/eslintrc/node_modules/brace-expansion\": {\n+      \"version\": \"1.1.12\",\n+      \"resolved\": \"https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.12.tgz\",\n+      \"integrity\": \"sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"balanced-match\": \"^1.0.0\",\n+        \"concat-map\": \"0.0.1\"\n+      }\n+    },\n+    \"node_modules/@eslint/eslintrc/node_modules/minimatch\": {\n+      \"version\": \"3.1.2\",\n+      \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz\",\n+      \"integrity\": \"sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==\",\n+      \"dev\": true,\n+      \"license\": \"ISC\",\n+      \"dependencies\": {\n+        \"brace-expansion\": \"^1.1.7\"\n+      },\n+      \"engines\": {\n+        \"node\": \"*\"\n+      }\n+    },\n+    \"node_modules/@eslint/js\": {\n+      \"version\": \"8.57.1\",\n+      \"resolved\": \"https://registry.npmjs.org/@eslint/js/-/js-8.57.1.tgz\",\n+      \"integrity\": \"sha512-d9zaMRSTIKDLhctzH12MtXvJKSSUhaHcjV+2Z+GK+EEY7XKpP5yR4x+N3TAcHTcu963nIr+TMcCb4DBCYX1z6Q==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n+      }\n+    },\n+    \"node_modules/@humanwhocodes/config-array\": {\n+      \"version\": \"0.13.0\",\n+      \"resolved\": \"https://registry.npmjs.org/@humanwhocodes/config-array/-/config-array-0.13.0.tgz\",\n+      \"integrity\": \"sha512-DZLEEqFWQFiyK6h5YIeynKx7JlvCYWL0cImfSRXZ9l4Sg2efkFGTuFf6vzXjK1cq6IYkU+Eg/JizXw+TD2vRNw==\",\n+      \"deprecated\": \"Use @eslint/config-array instead\",\n+      \"dev\": true,\n+      \"license\": \"Apache-2.0\",\n+      \"dependencies\": {\n+        \"@humanwhocodes/object-schema\": \"^2.0.3\",\n+        \"debug\": \"^4.3.1\",\n+        \"minimatch\": \"^3.0.5\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=10.10.0\"\n+      }\n+    },\n+    \"node_modules/@humanwhocodes/config-array/node_modules/brace-expansion\": {\n+      \"version\": \"1.1.12\",\n+      \"resolved\": \"https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.12.tgz\",\n+      \"integrity\": \"sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"balanced-match\": \"^1.0.0\",\n+        \"concat-map\": \"0.0.1\"\n+      }\n+    },\n+    \"node_modules/@humanwhocodes/config-array/node_modules/minimatch\": {\n+      \"version\": \"3.1.2\",\n+      \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz\",\n+      \"integrity\": \"sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==\",\n+      \"dev\": true,\n+      \"license\": \"ISC\",\n+      \"dependencies\": {\n+        \"brace-expansion\": \"^1.1.7\"\n+      },\n+      \"engines\": {\n+        \"node\": \"*\"\n+      }\n+    },\n+    \"node_modules/@humanwhocodes/module-importer\": {\n+      \"version\": \"1.0.1\",\n+      \"resolved\": \"https://registry.npmjs.org/@humanwhocodes/module-importer/-/module-importer-1.0.1.tgz\",\n+      \"integrity\": \"sha512-bxveV4V8v5Yb4ncFTT3rPSgZBOpCkjfK0y4oVVVJwIuDVBRMDXrPyXRL988i5ap9m9bnyEEjWfm5WkBmtffLfA==\",\n+      \"dev\": true,\n+      \"license\": \"Apache-2.0\",\n+      \"engines\": {\n+        \"node\": \">=12.22\"\n+      },\n+      \"funding\": {\n+        \"type\": \"github\",\n+        \"url\": \"https://github.com/sponsors/nzakas\"\n+      }\n+    },\n+    \"node_modules/@humanwhocodes/object-schema\": {\n+      \"version\": \"2.0.3\",\n+      \"resolved\": \"https://registry.npmjs.org/@humanwhocodes/object-schema/-/object-schema-2.0.3.tgz\",\n+      \"integrity\": \"sha512-93zYdMES/c1D69yZiKDBj0V24vqNzB/koF26KPaagAfd3P/4gUlh3Dys5ogAK+Exi9QyzlD8x/08Zt7wIKcDcA==\",\n+      \"deprecated\": \"Use @eslint/object-schema instead\",\n+      \"dev\": true,\n+      \"license\": \"BSD-3-Clause\"\n+    },\n+    \"node_modules/@isaacs/cliui\": {\n+      \"version\": \"8.0.2\",\n+      \"resolved\": \"https://registry.npmjs.org/@isaacs/cliui/-/cliui-8.0.2.tgz\",\n+      \"integrity\": \"sha512-O8jcjabXaleOG9DQ0+ARXWZBTfnP4WNAqzuiJK7ll44AmxGKv/J2M4TPjxjY3znBCfvBXFzucm1twdyFybFqEA==\",\n+      \"dev\": true,\n+      \"license\": \"ISC\",\n+      \"dependencies\": {\n+        \"string-width\": \"^5.1.2\",\n+        \"string-width-cjs\": \"npm:string-width@^4.2.0\",\n+        \"strip-ansi\": \"^7.0.1\",\n+        \"strip-ansi-cjs\": \"npm:strip-ansi@^6.0.1\",\n+        \"wrap-ansi\": \"^8.1.0\",\n+        \"wrap-ansi-cjs\": \"npm:wrap-ansi@^7.0.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=12\"\n+      }\n+    },\n+    \"node_modules/@isaacs/cliui/node_modules/ansi-regex\": {\n+      \"version\": \"6.1.0\",\n+      \"resolved\": \"https://registry.npmjs.org/ansi-regex/-/ansi-regex-6.1.0.tgz\",\n+      \"integrity\": \"sha512-7HSX4QQb4CspciLpVFwyRe79O3xsIZDDLER21kERQ71oaPodF8jL725AgJMFAYbooIqolJoRLuM81SpeUkpkvA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=12\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/chalk/ansi-regex?sponsor=1\"\n+      }\n+    },\n+    \"node_modules/@isaacs/cliui/node_modules/strip-ansi\": {\n+      \"version\": \"7.1.0\",\n+      \"resolved\": \"https://registry.npmjs.org/strip-ansi/-/strip-ansi-7.1.0.tgz\",\n+      \"integrity\": \"sha512-iq6eVVI64nQQTRYq2KtEg2d2uU7LElhTJwsH4YzIHZshxlgZms/wIc4VoDQTlG/IvVIrBKG06CrZnp0qv7hkcQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"ansi-regex\": \"^6.0.1\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=12\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/chalk/strip-ansi?sponsor=1\"\n+      }\n+    },\n+    \"node_modules/@jest/schemas\": {\n+      \"version\": \"29.6.3\",\n+      \"resolved\": \"https://registry.npmjs.org/@jest/schemas/-/schemas-29.6.3.tgz\",\n+      \"integrity\": \"sha512-mo5j5X+jIZmJQveBKeS/clAueipV7KgiX1vMgCxam1RNYiqE1w62n0/tJJnHtjW8ZHcQco5gY85jA3mi0L+nSA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@sinclair/typebox\": \"^0.27.8\"\n+      },\n+      \"engines\": {\n+        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n+      }\n+    },\n+    \"node_modules/@jridgewell/gen-mapping\": {\n+      \"version\": \"0.3.12\",\n+      \"resolved\": \"https://registry.npmjs.org/@jridgewell/gen-mapping/-/gen-mapping-0.3.12.tgz\",\n+      \"integrity\": \"sha512-OuLGC46TjB5BbN1dH8JULVVZY4WTdkF7tV9Ys6wLL1rubZnCMstOhNHueU5bLCrnRuDhKPDM4g6sw4Bel5Gzqg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@jridgewell/sourcemap-codec\": \"^1.5.0\",\n+        \"@jridgewell/trace-mapping\": \"^0.3.24\"\n+      }\n+    },\n+    \"node_modules/@jridgewell/resolve-uri\": {\n+      \"version\": \"3.1.2\",\n+      \"resolved\": \"https://registry.npmjs.org/@jridgewell/resolve-uri/-/resolve-uri-3.1.2.tgz\",\n+      \"integrity\": \"sha512-bRISgCIjP20/tbWSPWMEi54QVPRZExkuD9lJL+UIxUKtwVJA8wW1Trb1jMs1RFXo1CBTNZ/5hpC9QvmKWdopKw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=6.0.0\"\n+      }\n+    },\n+    \"node_modules/@jridgewell/sourcemap-codec\": {\n+      \"version\": \"1.5.4\",\n+      \"resolved\": \"https://registry.npmjs.org/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.5.4.tgz\",\n+      \"integrity\": \"sha512-VT2+G1VQs/9oz078bLrYbecdZKs912zQlkelYpuf+SXF+QvZDYJlbx/LSx+meSAwdDFnF8FVXW92AVjjkVmgFw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/@jridgewell/trace-mapping\": {\n+      \"version\": \"0.3.29\",\n+      \"resolved\": \"https://registry.npmjs.org/@jridgewell/trace-mapping/-/trace-mapping-0.3.29.tgz\",\n+      \"integrity\": \"sha512-uw6guiW/gcAGPDhLmd77/6lW8QLeiV5RUTsAX46Db6oLhGaVj4lhnPwb184s1bkc8kdVg/+h988dro8GRDpmYQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@jridgewell/resolve-uri\": \"^3.1.0\",\n+        \"@jridgewell/sourcemap-codec\": \"^1.4.14\"\n+      }\n+    },\n+    \"node_modules/@nodelib/fs.scandir\": {\n+      \"version\": \"2.1.5\",\n+      \"resolved\": \"https://registry.npmjs.org/@nodelib/fs.scandir/-/fs.scandir-2.1.5.tgz\",\n+      \"integrity\": \"sha512-vq24Bq3ym5HEQm2NKCr3yXDwjc7vTsEThRDnkp2DK9p1uqLR+DHurm/NOTo0KG7HYHU7eppKZj3MyqYuMBf62g==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@nodelib/fs.stat\": \"2.0.5\",\n+        \"run-parallel\": \"^1.1.9\"\n+      },\n+      \"engines\": {\n+        \"node\": \">= 8\"\n+      }\n+    },\n+    \"node_modules/@nodelib/fs.stat\": {\n+      \"version\": \"2.0.5\",\n+      \"resolved\": \"https://registry.npmjs.org/@nodelib/fs.stat/-/fs.stat-2.0.5.tgz\",\n+      \"integrity\": \"sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">= 8\"\n+      }\n+    },\n+    \"node_modules/@nodelib/fs.walk\": {\n+      \"version\": \"1.2.8\",\n+      \"resolved\": \"https://registry.npmjs.org/@nodelib/fs.walk/-/fs.walk-1.2.8.tgz\",\n+      \"integrity\": \"sha512-oGB+UxlgWcgQkgwo8GcEGwemoTFt3FIO9ababBmaGwXIoBKZ+GTy0pP185beGg7Llih/NSHSV2XAs1lnznocSg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@nodelib/fs.scandir\": \"2.1.5\",\n+        \"fastq\": \"^1.6.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">= 8\"\n+      }\n+    },\n+    \"node_modules/@pkgjs/parseargs\": {\n+      \"version\": \"0.11.0\",\n+      \"resolved\": \"https://registry.npmjs.org/@pkgjs/parseargs/-/parseargs-0.11.0.tgz\",\n+      \"integrity\": \"sha512-+1VkjdD0QBLPodGrJUeqarH8VAIvQODIbwh9XpP5Syisf7YoQgsJKPNFoqqLQlu+VQ/tVSshMR6loPMn8U+dPg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"optional\": true,\n+      \"engines\": {\n+        \"node\": \">=14\"\n+      }\n+    },\n+    \"node_modules/@rollup/rollup-android-arm-eabi\": {\n+      \"version\": \"4.45.1\",\n+      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-android-arm-eabi/-/rollup-android-arm-eabi-4.45.1.tgz\",\n+      \"integrity\": \"sha512-NEySIFvMY0ZQO+utJkgoMiCAjMrGvnbDLHvcmlA33UXJpYBCvlBEbMMtV837uCkS+plG2umfhn0T5mMAxGrlRA==\",\n+      \"cpu\": [\n+        \"arm\"\n+      ],\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"optional\": true,\n+      \"os\": [\n+        \"android\"\n+      ]\n+    },\n+    \"node_modules/@rollup/rollup-android-arm64\": {\n+      \"version\": \"4.45.1\",\n+      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-android-arm64/-/rollup-android-arm64-4.45.1.tgz\",\n+      \"integrity\": \"sha512-ujQ+sMXJkg4LRJaYreaVx7Z/VMgBBd89wGS4qMrdtfUFZ+TSY5Rs9asgjitLwzeIbhwdEhyj29zhst3L1lKsRQ==\",\n+      \"cpu\": [\n+        \"arm64\"\n+      ],\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"optional\": true,\n+      \"os\": [\n+        \"android\"\n+      ]\n+    },\n+    \"node_modules/@rollup/rollup-darwin-arm64\": {\n+      \"version\": \"4.45.1\",\n+      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-darwin-arm64/-/rollup-darwin-arm64-4.45.1.tgz\",\n+      \"integrity\": \"sha512-FSncqHvqTm3lC6Y13xncsdOYfxGSLnP+73k815EfNmpewPs+EyM49haPS105Rh4aF5mJKywk9X0ogzLXZzN9lA==\",\n+      \"cpu\": [\n+        \"arm64\"\n+      ],\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"optional\": true,\n+      \"os\": [\n+        \"darwin\"\n+      ]\n+    },\n+    \"node_modules/@rollup/rollup-darwin-x64\": {\n+      \"version\": \"4.45.1\",\n+      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-darwin-x64/-/rollup-darwin-x64-4.45.1.tgz\",\n+      \"integrity\": \"sha512-2/vVn/husP5XI7Fsf/RlhDaQJ7x9zjvC81anIVbr4b/f0xtSmXQTFcGIQ/B1cXIYM6h2nAhJkdMHTnD7OtQ9Og==\",\n+      \"cpu\": [\n+        \"x64\"\n+      ],\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"optional\": true,\n+      \"os\": [\n+        \"darwin\"\n+      ]\n+    },\n+    \"node_modules/@rollup/rollup-freebsd-arm64\": {\n+      \"version\": \"4.45.1\",\n+      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-freebsd-arm64/-/rollup-freebsd-arm64-4.45.1.tgz\",\n+      \"integrity\": \"sha512-4g1kaDxQItZsrkVTdYQ0bxu4ZIQ32cotoQbmsAnW1jAE4XCMbcBPDirX5fyUzdhVCKgPcrwWuucI8yrVRBw2+g==\",\n+      \"cpu\": [\n+        \"arm64\"\n+      ],\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"optional\": true,\n+      \"os\": [\n+        \"freebsd\"\n+      ]\n+    },\n+    \"node_modules/@rollup/rollup-freebsd-x64\": {\n+      \"version\": \"4.45.1\",\n+      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-freebsd-x64/-/rollup-freebsd-x64-4.45.1.tgz\",\n+      \"integrity\": \"sha512-L/6JsfiL74i3uK1Ti2ZFSNsp5NMiM4/kbbGEcOCps99aZx3g8SJMO1/9Y0n/qKlWZfn6sScf98lEOUe2mBvW9A==\",\n+      \"cpu\": [\n+        \"x64\"\n+      ],\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"optional\": true,\n+      \"os\": [\n+        \"freebsd\"\n+      ]\n+    },\n+    \"node_modules/@rollup/rollup-linux-arm-gnueabihf\": {\n+      \"version\": \"4.45.1\",\n+      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-linux-arm-gnueabihf/-/rollup-linux-arm-gnueabihf-4.45.1.tgz\",\n+      \"integrity\": \"sha512-RkdOTu2jK7brlu+ZwjMIZfdV2sSYHK2qR08FUWcIoqJC2eywHbXr0L8T/pONFwkGukQqERDheaGTeedG+rra6Q==\",\n+      \"cpu\": [\n+        \"arm\"\n+      ],\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"optional\": true,\n+      \"os\": [\n+        \"linux\"\n+      ]\n+    },\n+    \"node_modules/@rollup/rollup-linux-arm-musleabihf\": {\n+      \"version\": \"4.45.1\",\n+      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-linux-arm-musleabihf/-/rollup-linux-arm-musleabihf-4.45.1.tgz\",\n+      \"integrity\": \"sha512-3kJ8pgfBt6CIIr1o+HQA7OZ9mp/zDk3ctekGl9qn/pRBgrRgfwiffaUmqioUGN9hv0OHv2gxmvdKOkARCtRb8Q==\",\n+      \"cpu\": [\n+        \"arm\"\n+      ],\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"optional\": true,\n+      \"os\": [\n+        \"linux\"\n+      ]\n+    },\n+    \"node_modules/@rollup/rollup-linux-arm64-gnu\": {\n+      \"version\": \"4.45.1\",\n+      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-linux-arm64-gnu/-/rollup-linux-arm64-gnu-4.45.1.tgz\",\n+      \"integrity\": \"sha512-k3dOKCfIVixWjG7OXTCOmDfJj3vbdhN0QYEqB+OuGArOChek22hn7Uy5A/gTDNAcCy5v2YcXRJ/Qcnm4/ma1xw==\",\n+      \"cpu\": [\n+        \"arm64\"\n+      ],\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"optional\": true,\n+      \"os\": [\n+        \"linux\"\n+      ]\n+    },\n+    \"node_modules/@rollup/rollup-linux-arm64-musl\": {\n+      \"version\": \"4.45.1\",\n+      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-linux-arm64-musl/-/rollup-linux-arm64-musl-4.45.1.tgz\",\n+      \"integrity\": \"sha512-PmI1vxQetnM58ZmDFl9/Uk2lpBBby6B6rF4muJc65uZbxCs0EA7hhKCk2PKlmZKuyVSHAyIw3+/SiuMLxKxWog==\",\n+      \"cpu\": [\n+        \"arm64\"\n+      ],\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"optional\": true,\n+      \"os\": [\n+        \"linux\"\n+      ]\n+    },\n+    \"node_modules/@rollup/rollup-linux-loongarch64-gnu\": {\n+      \"version\": \"4.45.1\",\n+      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-linux-loongarch64-gnu/-/rollup-linux-loongarch64-gnu-4.45.1.tgz\",\n+      \"integrity\": \"sha512-9UmI0VzGmNJ28ibHW2GpE2nF0PBQqsyiS4kcJ5vK+wuwGnV5RlqdczVocDSUfGX/Na7/XINRVoUgJyFIgipoRg==\",\n+      \"cpu\": [\n+        \"loong64\"\n+      ],\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"optional\": true,\n+      \"os\": [\n+        \"linux\"\n+      ]\n+    },\n+    \"node_modules/@rollup/rollup-linux-powerpc64le-gnu\": {\n+      \"version\": \"4.45.1\",\n+      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-linux-powerpc64le-gnu/-/rollup-linux-powerpc64le-gnu-4.45.1.tgz\",\n+      \"integrity\": \"sha512-7nR2KY8oEOUTD3pBAxIBBbZr0U7U+R9HDTPNy+5nVVHDXI4ikYniH1oxQz9VoB5PbBU1CZuDGHkLJkd3zLMWsg==\",\n+      \"cpu\": [\n+        \"ppc64\"\n+      ],\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"optional\": true,\n+      \"os\": [\n+        \"linux\"\n+      ]\n+    },\n+    \"node_modules/@rollup/rollup-linux-riscv64-gnu\": {\n+      \"version\": \"4.45.1\",\n+      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-linux-riscv64-gnu/-/rollup-linux-riscv64-gnu-4.45.1.tgz\",\n+      \"integrity\": \"sha512-nlcl3jgUultKROfZijKjRQLUu9Ma0PeNv/VFHkZiKbXTBQXhpytS8CIj5/NfBeECZtY2FJQubm6ltIxm/ftxpw==\",\n+      \"cpu\": [\n+        \"riscv64\"\n+      ],\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"optional\": true,\n+      \"os\": [\n+        \"linux\"\n+      ]\n+    },\n+    \"node_modules/@rollup/rollup-linux-riscv64-musl\": {\n+      \"version\": \"4.45.1\",\n+      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-linux-riscv64-musl/-/rollup-linux-riscv64-musl-4.45.1.tgz\",\n+      \"integrity\": \"sha512-HJV65KLS51rW0VY6rvZkiieiBnurSzpzore1bMKAhunQiECPuxsROvyeaot/tcK3A3aGnI+qTHqisrpSgQrpgA==\",\n+      \"cpu\": [\n+        \"riscv64\"\n+      ],\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"optional\": true,\n+      \"os\": [\n+        \"linux\"\n+      ]\n+    },\n+    \"node_modules/@rollup/rollup-linux-s390x-gnu\": {\n+      \"version\": \"4.45.1\",\n+      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-linux-s390x-gnu/-/rollup-linux-s390x-gnu-4.45.1.tgz\",\n+      \"integrity\": \"sha512-NITBOCv3Qqc6hhwFt7jLV78VEO/il4YcBzoMGGNxznLgRQf43VQDae0aAzKiBeEPIxnDrACiMgbqjuihx08OOw==\",\n+      \"cpu\": [\n+        \"s390x\"\n+      ],\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"optional\": true,\n+      \"os\": [\n+        \"linux\"\n+      ]\n+    },\n+    \"node_modules/@rollup/rollup-linux-x64-gnu\": {\n+      \"version\": \"4.45.1\",\n+      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-linux-x64-gnu/-/rollup-linux-x64-gnu-4.45.1.tgz\",\n+      \"integrity\": \"sha512-+E/lYl6qu1zqgPEnTrs4WysQtvc/Sh4fC2nByfFExqgYrqkKWp1tWIbe+ELhixnenSpBbLXNi6vbEEJ8M7fiHw==\",\n+      \"cpu\": [\n+        \"x64\"\n+      ],\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"optional\": true,\n+      \"os\": [\n+        \"linux\"\n+      ]\n+    },\n+    \"node_modules/@rollup/rollup-linux-x64-musl\": {\n+      \"version\": \"4.45.1\",\n+      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-linux-x64-musl/-/rollup-linux-x64-musl-4.45.1.tgz\",\n+      \"integrity\": \"sha512-a6WIAp89p3kpNoYStITT9RbTbTnqarU7D8N8F2CV+4Cl9fwCOZraLVuVFvlpsW0SbIiYtEnhCZBPLoNdRkjQFw==\",\n+      \"cpu\": [\n+        \"x64\"\n+      ],\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"optional\": true,\n+      \"os\": [\n+        \"linux\"\n+      ]\n+    },\n+    \"node_modules/@rollup/rollup-win32-arm64-msvc\": {\n+      \"version\": \"4.45.1\",\n+      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-win32-arm64-msvc/-/rollup-win32-arm64-msvc-4.45.1.tgz\",\n+      \"integrity\": \"sha512-T5Bi/NS3fQiJeYdGvRpTAP5P02kqSOpqiopwhj0uaXB6nzs5JVi2XMJb18JUSKhCOX8+UE1UKQufyD6Or48dJg==\",\n+      \"cpu\": [\n+        \"arm64\"\n+      ],\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"optional\": true,\n+      \"os\": [\n+        \"win32\"\n+      ]\n+    },\n+    \"node_modules/@rollup/rollup-win32-ia32-msvc\": {\n+      \"version\": \"4.45.1\",\n+      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-win32-ia32-msvc/-/rollup-win32-ia32-msvc-4.45.1.tgz\",\n+      \"integrity\": \"sha512-lxV2Pako3ujjuUe9jiU3/s7KSrDfH6IgTSQOnDWr9aJ92YsFd7EurmClK0ly/t8dzMkDtd04g60WX6yl0sGfdw==\",\n+      \"cpu\": [\n+        \"ia32\"\n+      ],\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"optional\": true,\n+      \"os\": [\n+        \"win32\"\n+      ]\n+    },\n+    \"node_modules/@rollup/rollup-win32-x64-msvc\": {\n+      \"version\": \"4.45.1\",\n+      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-win32-x64-msvc/-/rollup-win32-x64-msvc-4.45.1.tgz\",\n+      \"integrity\": \"sha512-M/fKi4sasCdM8i0aWJjCSFm2qEnYRR8AMLG2kxp6wD13+tMGA4Z1tVAuHkNRjud5SW2EM3naLuK35w9twvf6aA==\",\n+      \"cpu\": [\n+        \"x64\"\n+      ],\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"optional\": true,\n+      \"os\": [\n+        \"win32\"\n+      ]\n+    },\n+    \"node_modules/@sinclair/typebox\": {\n+      \"version\": \"0.27.8\",\n+      \"resolved\": \"https://registry.npmjs.org/@sinclair/typebox/-/typebox-0.27.8.tgz\",\n+      \"integrity\": \"sha512-+Fj43pSMwJs4KRrH/938Uf+uAELIgVBmQzg/q1YG10djyfA3TnrU8N8XzqCh/okZdszqBQTZf96idMfE5lnwTA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/@types/estree\": {\n+      \"version\": \"1.0.8\",\n+      \"resolved\": \"https://registry.npmjs.org/@types/estree/-/estree-1.0.8.tgz\",\n+      \"integrity\": \"sha512-dWHzHa2WqEXI/O1E9OjrocMTKJl2mSrEolh1Iomrv6U+JuNwaHXsXx9bLu5gG7BUWFIN0skIQJQ/L1rIex4X6w==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/@types/json-schema\": {\n+      \"version\": \"7.0.15\",\n+      \"resolved\": \"https://registry.npmjs.org/@types/json-schema/-/json-schema-7.0.15.tgz\",\n+      \"integrity\": \"sha512-5+fP8P8MFNC+AyZCDxrB2pkZFPGzqQWUzpSeuuVLvm8VMcorNYavBqoFcxK8bQz4Qsbn4oUEEem4wDLfcysGHA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/@types/node\": {\n+      \"version\": \"20.19.9\",\n+      \"resolved\": \"https://registry.npmjs.org/@types/node/-/node-20.19.9.tgz\",\n+      \"integrity\": \"sha512-cuVNgarYWZqxRJDQHEB58GEONhOK79QVR/qYx4S7kcUObQvUwvFnYxJuuHUKm2aieN9X3yZB4LZsuYNU1Qphsw==\",\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"undici-types\": \"~6.21.0\"\n+      }\n+    },\n+    \"node_modules/@types/semver\": {\n+      \"version\": \"7.7.0\",\n+      \"resolved\": \"https://registry.npmjs.org/@types/semver/-/semver-7.7.0.tgz\",\n+      \"integrity\": \"sha512-k107IF4+Xr7UHjwDc7Cfd6PRQfbdkiRabXGRjo07b4WyPahFBZCZ1sE+BNxYIJPPg73UkfOsVOLwqVc/6ETrIA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/@typescript-eslint/eslint-plugin\": {\n+      \"version\": \"6.21.0\",\n+      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/eslint-plugin/-/eslint-plugin-6.21.0.tgz\",\n+      \"integrity\": \"sha512-oy9+hTPCUFpngkEZUSzbf9MxI65wbKFoQYsgPdILTfbUldp5ovUuphZVe4i30emU9M/kP+T64Di0mxl7dSw3MA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@eslint-community/regexpp\": \"^4.5.1\",\n+        \"@typescript-eslint/scope-manager\": \"6.21.0\",\n+        \"@typescript-eslint/type-utils\": \"6.21.0\",\n+        \"@typescript-eslint/utils\": \"6.21.0\",\n+        \"@typescript-eslint/visitor-keys\": \"6.21.0\",\n+        \"debug\": \"^4.3.4\",\n+        \"graphemer\": \"^1.4.0\",\n+        \"ignore\": \"^5.2.4\",\n+        \"natural-compare\": \"^1.4.0\",\n+        \"semver\": \"^7.5.4\",\n+        \"ts-api-utils\": \"^1.0.1\"\n+      },\n+      \"engines\": {\n+        \"node\": \"^16.0.0 || >=18.0.0\"\n+      },\n+      \"funding\": {\n+        \"type\": \"opencollective\",\n+        \"url\": \"https://opencollective.com/typescript-eslint\"\n+      },\n+      \"peerDependencies\": {\n+        \"@typescript-eslint/parser\": \"^6.0.0 || ^6.0.0-alpha\",\n+        \"eslint\": \"^7.0.0 || ^8.0.0\"\n+      },\n+      \"peerDependenciesMeta\": {\n+        \"typescript\": {\n+          \"optional\": true\n+        }\n+      }\n+    },\n+    \"node_modules/@typescript-eslint/parser\": {\n+      \"version\": \"6.21.0\",\n+      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/parser/-/parser-6.21.0.tgz\",\n+      \"integrity\": \"sha512-tbsV1jPne5CkFQCgPBcDOt30ItF7aJoZL997JSF7MhGQqOeT3svWRYxiqlfA5RUdlHN6Fi+EI9bxqbdyAUZjYQ==\",\n+      \"dev\": true,\n+      \"license\": \"BSD-2-Clause\",\n+      \"dependencies\": {\n+        \"@typescript-eslint/scope-manager\": \"6.21.0\",\n+        \"@typescript-eslint/types\": \"6.21.0\",\n+        \"@typescript-eslint/typescript-estree\": \"6.21.0\",\n+        \"@typescript-eslint/visitor-keys\": \"6.21.0\",\n+        \"debug\": \"^4.3.4\"\n+      },\n+      \"engines\": {\n+        \"node\": \"^16.0.0 || >=18.0.0\"\n+      },\n+      \"funding\": {\n+        \"type\": \"opencollective\",\n+        \"url\": \"https://opencollective.com/typescript-eslint\"\n+      },\n+      \"peerDependencies\": {\n+        \"eslint\": \"^7.0.0 || ^8.0.0\"\n+      },\n+      \"peerDependenciesMeta\": {\n+        \"typescript\": {\n+          \"optional\": true\n+        }\n+      }\n+    },\n+    \"node_modules/@typescript-eslint/scope-manager\": {\n+      \"version\": \"6.21.0\",\n+      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/scope-manager/-/scope-manager-6.21.0.tgz\",\n+      \"integrity\": \"sha512-OwLUIWZJry80O99zvqXVEioyniJMa+d2GrqpUTqi5/v5D5rOrppJVBPa0yKCblcigC0/aYAzxxqQ1B+DS2RYsg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@typescript-eslint/types\": \"6.21.0\",\n+        \"@typescript-eslint/visitor-keys\": \"6.21.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \"^16.0.0 || >=18.0.0\"\n+      },\n+      \"funding\": {\n+        \"type\": \"opencollective\",\n+        \"url\": \"https://opencollective.com/typescript-eslint\"\n+      }\n+    },\n+    \"node_modules/@typescript-eslint/type-utils\": {\n+      \"version\": \"6.21.0\",\n+      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/type-utils/-/type-utils-6.21.0.tgz\",\n+      \"integrity\": \"sha512-rZQI7wHfao8qMX3Rd3xqeYSMCL3SoiSQLBATSiVKARdFGCYSRvmViieZjqc58jKgs8Y8i9YvVVhRbHSTA4VBag==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@typescript-eslint/typescript-estree\": \"6.21.0\",\n+        \"@typescript-eslint/utils\": \"6.21.0\",\n+        \"debug\": \"^4.3.4\",\n+        \"ts-api-utils\": \"^1.0.1\"\n+      },\n+      \"engines\": {\n+        \"node\": \"^16.0.0 || >=18.0.0\"\n+      },\n+      \"funding\": {\n+        \"type\": \"opencollective\",\n+        \"url\": \"https://opencollective.com/typescript-eslint\"\n+      },\n+      \"peerDependencies\": {\n+        \"eslint\": \"^7.0.0 || ^8.0.0\"\n+      },\n+      \"peerDependenciesMeta\": {\n+        \"typescript\": {\n+          \"optional\": true\n+        }\n+      }\n+    },\n+    \"node_modules/@typescript-eslint/types\": {\n+      \"version\": \"6.21.0\",\n+      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/types/-/types-6.21.0.tgz\",\n+      \"integrity\": \"sha512-1kFmZ1rOm5epu9NZEZm1kckCDGj5UJEf7P1kliH4LKu/RkwpsfqqGmY2OOcUs18lSlQBKLDYBOGxRVtrMN5lpg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \"^16.0.0 || >=18.0.0\"\n+      },\n+      \"funding\": {\n+        \"type\": \"opencollective\",\n+        \"url\": \"https://opencollective.com/typescript-eslint\"\n+      }\n+    },\n+    \"node_modules/@typescript-eslint/typescript-estree\": {\n+      \"version\": \"6.21.0\",\n+      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/typescript-estree/-/typescript-estree-6.21.0.tgz\",\n+      \"integrity\": \"sha512-6npJTkZcO+y2/kr+z0hc4HwNfrrP4kNYh57ek7yCNlrBjWQ1Y0OS7jiZTkgumrvkX5HkEKXFZkkdFNkaW2wmUQ==\",\n+      \"dev\": true,\n+      \"license\": \"BSD-2-Clause\",\n+      \"dependencies\": {\n+        \"@typescript-eslint/types\": \"6.21.0\",\n+        \"@typescript-eslint/visitor-keys\": \"6.21.0\",\n+        \"debug\": \"^4.3.4\",\n+        \"globby\": \"^11.1.0\",\n+        \"is-glob\": \"^4.0.3\",\n+        \"minimatch\": \"9.0.3\",\n+        \"semver\": \"^7.5.4\",\n+        \"ts-api-utils\": \"^1.0.1\"\n+      },\n+      \"engines\": {\n+        \"node\": \"^16.0.0 || >=18.0.0\"\n+      },\n+      \"funding\": {\n+        \"type\": \"opencollective\",\n+        \"url\": \"https://opencollective.com/typescript-eslint\"\n+      },\n+      \"peerDependenciesMeta\": {\n+        \"typescript\": {\n+          \"optional\": true\n+        }\n+      }\n+    },\n+    \"node_modules/@typescript-eslint/utils\": {\n+      \"version\": \"6.21.0\",\n+      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/utils/-/utils-6.21.0.tgz\",\n+      \"integrity\": \"sha512-NfWVaC8HP9T8cbKQxHcsJBY5YE1O33+jpMwN45qzWWaPDZgLIbo12toGMWnmhvCpd3sIxkpDw3Wv1B3dYrbDQQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@eslint-community/eslint-utils\": \"^4.4.0\",\n+        \"@types/json-schema\": \"^7.0.12\",\n+        \"@types/semver\": \"^7.5.0\",\n+        \"@typescript-eslint/scope-manager\": \"6.21.0\",\n+        \"@typescript-eslint/types\": \"6.21.0\",\n+        \"@typescript-eslint/typescript-estree\": \"6.21.0\",\n+        \"semver\": \"^7.5.4\"\n+      },\n+      \"engines\": {\n+        \"node\": \"^16.0.0 || >=18.0.0\"\n+      },\n+      \"funding\": {\n+        \"type\": \"opencollective\",\n+        \"url\": \"https://opencollective.com/typescript-eslint\"\n+      },\n+      \"peerDependencies\": {\n+        \"eslint\": \"^7.0.0 || ^8.0.0\"\n+      }\n+    },\n+    \"node_modules/@typescript-eslint/visitor-keys\": {\n+      \"version\": \"6.21.0\",\n+      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/visitor-keys/-/visitor-keys-6.21.0.tgz\",\n+      \"integrity\": \"sha512-JJtkDduxLi9bivAB+cYOVMtbkqdPOhZ+ZI5LC47MIRrDV4Yn2o+ZnW10Nkmr28xRpSpdJ6Sm42Hjf2+REYXm0A==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@typescript-eslint/types\": \"6.21.0\",\n+        \"eslint-visitor-keys\": \"^3.4.1\"\n+      },\n+      \"engines\": {\n+        \"node\": \"^16.0.0 || >=18.0.0\"\n+      },\n+      \"funding\": {\n+        \"type\": \"opencollective\",\n+        \"url\": \"https://opencollective.com/typescript-eslint\"\n+      }\n+    },\n+    \"node_modules/@ungap/structured-clone\": {\n+      \"version\": \"1.3.0\",\n+      \"resolved\": \"https://registry.npmjs.org/@ungap/structured-clone/-/structured-clone-1.3.0.tgz\",\n+      \"integrity\": \"sha512-WmoN8qaIAo7WTYWbAZuG8PYEhn5fkz7dZrqTBZ7dtt//lL2Gwms1IcnQ5yHqjDfX8Ft5j4YzDM23f87zBfDe9g==\",\n+      \"dev\": true,\n+      \"license\": \"ISC\"\n+    },\n+    \"node_modules/@vitest/expect\": {\n+      \"version\": \"1.6.1\",\n+      \"resolved\": \"https://registry.npmjs.org/@vitest/expect/-/expect-1.6.1.tgz\",\n+      \"integrity\": \"sha512-jXL+9+ZNIJKruofqXuuTClf44eSpcHlgj3CiuNihUF3Ioujtmc0zIa3UJOW5RjDK1YLBJZnWBlPuqhYycLioog==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@vitest/spy\": \"1.6.1\",\n+        \"@vitest/utils\": \"1.6.1\",\n+        \"chai\": \"^4.3.10\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://opencollective.com/vitest\"\n+      }\n+    },\n+    \"node_modules/@vitest/runner\": {\n+      \"version\": \"1.6.1\",\n+      \"resolved\": \"https://registry.npmjs.org/@vitest/runner/-/runner-1.6.1.tgz\",\n+      \"integrity\": \"sha512-3nSnYXkVkf3mXFfE7vVyPmi3Sazhb/2cfZGGs0JRzFsPFvAMBEcrweV1V1GsrstdXeKCTXlJbvnQwGWgEIHmOA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@vitest/utils\": \"1.6.1\",\n+        \"p-limit\": \"^5.0.0\",\n+        \"pathe\": \"^1.1.1\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://opencollective.com/vitest\"\n+      }\n+    },\n+    \"node_modules/@vitest/runner/node_modules/p-limit\": {\n+      \"version\": \"5.0.0\",\n+      \"resolved\": \"https://registry.npmjs.org/p-limit/-/p-limit-5.0.0.tgz\",\n+      \"integrity\": \"sha512-/Eaoq+QyLSiXQ4lyYV23f14mZRQcXnxfHrN0vCai+ak9G0pp9iEQukIIZq5NccEvwRB8PUnZT0KsOoDCINS1qQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"yocto-queue\": \"^1.0.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=18\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/sponsors/sindresorhus\"\n+      }\n+    },\n+    \"node_modules/@vitest/runner/node_modules/pathe\": {\n+      \"version\": \"1.1.2\",\n+      \"resolved\": \"https://registry.npmjs.org/pathe/-/pathe-1.1.2.tgz\",\n+      \"integrity\": \"sha512-whLdWMYL2TwI08hn8/ZqAbrVemu0LNaNNJZX73O6qaIdCTfXutsLhMkjdENX0qhsQ9uIimo4/aQOmXkoon2nDQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/@vitest/runner/node_modules/yocto-queue\": {\n+      \"version\": \"1.2.1\",\n+      \"resolved\": \"https://registry.npmjs.org/yocto-queue/-/yocto-queue-1.2.1.tgz\",\n+      \"integrity\": \"sha512-AyeEbWOu/TAXdxlV9wmGcR0+yh2j3vYPGOECcIj2S7MkrLyC7ne+oye2BKTItt0ii2PHk4cDy+95+LshzbXnGg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=12.20\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/sponsors/sindresorhus\"\n+      }\n+    },\n+    \"node_modules/@vitest/snapshot\": {\n+      \"version\": \"1.6.1\",\n+      \"resolved\": \"https://registry.npmjs.org/@vitest/snapshot/-/snapshot-1.6.1.tgz\",\n+      \"integrity\": \"sha512-WvidQuWAzU2p95u8GAKlRMqMyN1yOJkGHnx3M1PL9Raf7AQ1kwLKg04ADlCa3+OXUZE7BceOhVZiuWAbzCKcUQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"magic-string\": \"^0.30.5\",\n+        \"pathe\": \"^1.1.1\",\n+        \"pretty-format\": \"^29.7.0\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://opencollective.com/vitest\"\n+      }\n+    },\n+    \"node_modules/@vitest/snapshot/node_modules/pathe\": {\n+      \"version\": \"1.1.2\",\n+      \"resolved\": \"https://registry.npmjs.org/pathe/-/pathe-1.1.2.tgz\",\n+      \"integrity\": \"sha512-whLdWMYL2TwI08hn8/ZqAbrVemu0LNaNNJZX73O6qaIdCTfXutsLhMkjdENX0qhsQ9uIimo4/aQOmXkoon2nDQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/@vitest/spy\": {\n+      \"version\": \"1.6.1\",\n+      \"resolved\": \"https://registry.npmjs.org/@vitest/spy/-/spy-1.6.1.tgz\",\n+      \"integrity\": \"sha512-MGcMmpGkZebsMZhbQKkAf9CX5zGvjkBTqf8Zx3ApYWXr3wG+QvEu2eXWfnIIWYSJExIp4V9FCKDEeygzkYrXMw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"tinyspy\": \"^2.2.0\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://opencollective.com/vitest\"\n+      }\n+    },\n+    \"node_modules/@vitest/utils\": {\n+      \"version\": \"1.6.1\",\n+      \"resolved\": \"https://registry.npmjs.org/@vitest/utils/-/utils-1.6.1.tgz\",\n+      \"integrity\": \"sha512-jOrrUvXM4Av9ZWiG1EajNto0u96kWAhJ1LmPmJhXXQx/32MecEKd10pOLYgS2BQx1TgkGhloPU1ArDW2vvaY6g==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"diff-sequences\": \"^29.6.3\",\n+        \"estree-walker\": \"^3.0.3\",\n+        \"loupe\": \"^2.3.7\",\n+        \"pretty-format\": \"^29.7.0\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://opencollective.com/vitest\"\n+      }\n+    },\n+    \"node_modules/acorn\": {\n+      \"version\": \"8.15.0\",\n+      \"resolved\": \"https://registry.npmjs.org/acorn/-/acorn-8.15.0.tgz\",\n+      \"integrity\": \"sha512-NZyJarBfL7nWwIq+FDL6Zp/yHEhePMNnnJ0y3qfieCrmNvYct8uvtiV41UvlSe6apAfk0fY1FbWx+NwfmpvtTg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"bin\": {\n+        \"acorn\": \"bin/acorn\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=0.4.0\"\n+      }\n+    },\n+    \"node_modules/acorn-jsx\": {\n+      \"version\": \"5.3.2\",\n+      \"resolved\": \"https://registry.npmjs.org/acorn-jsx/-/acorn-jsx-5.3.2.tgz\",\n+      \"integrity\": \"sha512-rq9s+JNhf0IChjtDXxllJ7g41oZk5SlXtp0LHwyA5cejwn7vKmKp4pPri6YEePv2PU65sAsegbXtIinmDFDXgQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"peerDependencies\": {\n+        \"acorn\": \"^6.0.0 || ^7.0.0 || ^8.0.0\"\n+      }\n+    },\n+    \"node_modules/acorn-walk\": {\n+      \"version\": \"8.3.4\",\n+      \"resolved\": \"https://registry.npmjs.org/acorn-walk/-/acorn-walk-8.3.4.tgz\",\n+      \"integrity\": \"sha512-ueEepnujpqee2o5aIYnvHU6C0A42MNdsIDeqy5BydrkuC5R1ZuUFnm27EeFJGoEHJQgn3uleRvmTXaJgfXbt4g==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"acorn\": \"^8.11.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=0.4.0\"\n+      }\n+    },\n+    \"node_modules/ajv\": {\n+      \"version\": \"6.12.6\",\n+      \"resolved\": \"https://registry.npmjs.org/ajv/-/ajv-6.12.6.tgz\",\n+      \"integrity\": \"sha512-j3fVLgvTo527anyYyJOGTYJbG+vnnQYvE0m5mmkc1TK+nxAppkCLMIL0aZ4dblVCNoGShhm+kzE4ZUykBoMg4g==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"fast-deep-equal\": \"^3.1.1\",\n+        \"fast-json-stable-stringify\": \"^2.0.0\",\n+        \"json-schema-traverse\": \"^0.4.1\",\n+        \"uri-js\": \"^4.2.2\"\n+      },\n+      \"funding\": {\n+        \"type\": \"github\",\n+        \"url\": \"https://github.com/sponsors/epoberezkin\"\n+      }\n+    },\n+    \"node_modules/ansi-regex\": {\n+      \"version\": \"5.0.1\",\n+      \"resolved\": \"https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz\",\n+      \"integrity\": \"sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      }\n+    },\n+    \"node_modules/ansi-styles\": {\n+      \"version\": \"4.3.0\",\n+      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz\",\n+      \"integrity\": \"sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"color-convert\": \"^2.0.1\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/chalk/ansi-styles?sponsor=1\"\n+      }\n+    },\n+    \"node_modules/any-promise\": {\n+      \"version\": \"1.3.0\",\n+      \"resolved\": \"https://registry.npmjs.org/any-promise/-/any-promise-1.3.0.tgz\",\n+      \"integrity\": \"sha512-7UvmKalWRt1wgjL1RrGxoSJW/0QZFIegpeGvZG9kjp8vrRu55XTHbwnqq2GpXm9uLbcuhxm3IqX9OB4MZR1b2A==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/argparse\": {\n+      \"version\": \"2.0.1\",\n+      \"resolved\": \"https://registry.npmjs.org/argparse/-/argparse-2.0.1.tgz\",\n+      \"integrity\": \"sha512-8+9WqebbFzpX9OR+Wa6O29asIogeRMzcGtAINdpMHHyAg10f05aSFVBbcEqGf/PXw1EjAZ+q2/bEBg3DvurK3Q==\",\n+      \"dev\": true,\n+      \"license\": \"Python-2.0\"\n+    },\n+    \"node_modules/array-union\": {\n+      \"version\": \"2.1.0\",\n+      \"resolved\": \"https://registry.npmjs.org/array-union/-/array-union-2.1.0.tgz\",\n+      \"integrity\": \"sha512-HGyxoOTYUyCM6stUe6EJgnd4EoewAI7zMdfqO+kGjnlZmBDz/cR5pf8r/cR4Wq60sL/p0IkcjUEEPwS3GFrIyw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      }\n+    },\n+    \"node_modules/assertion-error\": {\n+      \"version\": \"1.1.0\",\n+      \"resolved\": \"https://registry.npmjs.org/assertion-error/-/assertion-error-1.1.0.tgz\",\n+      \"integrity\": \"sha512-jgsaNduz+ndvGyFt3uSuWqvy4lCnIJiovtouQN5JZHOKCS2QuhEdbcQHFhVksz2N2U9hXJo8odG7ETyWlEeuDw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \"*\"\n+      }\n+    },\n+    \"node_modules/balanced-match\": {\n+      \"version\": \"1.0.2\",\n+      \"resolved\": \"https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz\",\n+      \"integrity\": \"sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/brace-expansion\": {\n+      \"version\": \"2.0.2\",\n+      \"resolved\": \"https://registry.npmjs.org/brace-expansion/-/brace-expansion-2.0.2.tgz\",\n+      \"integrity\": \"sha512-Jt0vHyM+jmUBqojB7E1NIYadt0vI0Qxjxd2TErW94wDz+E2LAm5vKMXXwg6ZZBTHPuUlDgQHKXvjGBdfcF1ZDQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"balanced-match\": \"^1.0.0\"\n+      }\n+    },\n+    \"node_modules/braces\": {\n+      \"version\": \"3.0.3\",\n+      \"resolved\": \"https://registry.npmjs.org/braces/-/braces-3.0.3.tgz\",\n+      \"integrity\": \"sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"fill-range\": \"^7.1.1\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      }\n+    },\n+    \"node_modules/bundle-require\": {\n+      \"version\": \"5.1.0\",\n+      \"resolved\": \"https://registry.npmjs.org/bundle-require/-/bundle-require-5.1.0.tgz\",\n+      \"integrity\": \"sha512-3WrrOuZiyaaZPWiEt4G3+IffISVC9HYlWueJEBWED4ZH4aIAC2PnkdnuRrR94M+w6yGWn4AglWtJtBI8YqvgoA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"load-tsconfig\": \"^0.2.3\"\n+      },\n+      \"engines\": {\n+        \"node\": \"^12.20.0 || ^14.13.1 || >=16.0.0\"\n+      },\n+      \"peerDependencies\": {\n+        \"esbuild\": \">=0.18\"\n+      }\n+    },\n+    \"node_modules/cac\": {\n+      \"version\": \"6.7.14\",\n+      \"resolved\": \"https://registry.npmjs.org/cac/-/cac-6.7.14.tgz\",\n+      \"integrity\": \"sha512-b6Ilus+c3RrdDk+JhLKUAQfzzgLEPy6wcXqS7f/xe1EETvsDP6GORG7SFuOs6cID5YkqchW/LXZbX5bc8j7ZcQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      }\n+    },\n+    \"node_modules/callsites\": {\n+      \"version\": \"3.1.0\",\n+      \"resolved\": \"https://registry.npmjs.org/callsites/-/callsites-3.1.0.tgz\",\n+      \"integrity\": \"sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=6\"\n+      }\n+    },\n+    \"node_modules/chai\": {\n+      \"version\": \"4.5.0\",\n+      \"resolved\": \"https://registry.npmjs.org/chai/-/chai-4.5.0.tgz\",\n+      \"integrity\": \"sha512-RITGBfijLkBddZvnn8jdqoTypxvqbOLYQkGGxXzeFjVHvudaPw0HNFD9x928/eUwYWd2dPCugVqspGALTZZQKw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"assertion-error\": \"^1.1.0\",\n+        \"check-error\": \"^1.0.3\",\n+        \"deep-eql\": \"^4.1.3\",\n+        \"get-func-name\": \"^2.0.2\",\n+        \"loupe\": \"^2.3.6\",\n+        \"pathval\": \"^1.1.1\",\n+        \"type-detect\": \"^4.1.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=4\"\n+      }\n+    },\n+    \"node_modules/chalk\": {\n+      \"version\": \"4.1.2\",\n+      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz\",\n+      \"integrity\": \"sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"ansi-styles\": \"^4.1.0\",\n+        \"supports-color\": \"^7.1.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=10\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/chalk/chalk?sponsor=1\"\n+      }\n+    },\n+    \"node_modules/check-error\": {\n+      \"version\": \"1.0.3\",\n+      \"resolved\": \"https://registry.npmjs.org/check-error/-/check-error-1.0.3.tgz\",\n+      \"integrity\": \"sha512-iKEoDYaRmd1mxM90a2OEfWhjsjPpYPuQ+lMYsoxB126+t8fw7ySEO48nmDg5COTjxDI65/Y2OWpeEHk3ZOe8zg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"get-func-name\": \"^2.0.2\"\n+      },\n+      \"engines\": {\n+        \"node\": \"*\"\n+      }\n+    },\n+    \"node_modules/chokidar\": {\n+      \"version\": \"4.0.3\",\n+      \"resolved\": \"https://registry.npmjs.org/chokidar/-/chokidar-4.0.3.tgz\",\n+      \"integrity\": \"sha512-Qgzu8kfBvo+cA4962jnP1KkS6Dop5NS6g7R5LFYJr4b8Ub94PPQXUksCw9PvXoeXPRRddRNC5C1JQUR2SMGtnA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"readdirp\": \"^4.0.1\"\n+      },\n+      \"engines\": {\n+        \"node\": \">= 14.16.0\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://paulmillr.com/funding/\"\n+      }\n+    },\n+    \"node_modules/color-convert\": {\n+      \"version\": \"2.0.1\",\n+      \"resolved\": \"https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz\",\n+      \"integrity\": \"sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"color-name\": \"~1.1.4\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=7.0.0\"\n+      }\n+    },\n+    \"node_modules/color-name\": {\n+      \"version\": \"1.1.4\",\n+      \"resolved\": \"https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz\",\n+      \"integrity\": \"sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/commander\": {\n+      \"version\": \"4.1.1\",\n+      \"resolved\": \"https://registry.npmjs.org/commander/-/commander-4.1.1.tgz\",\n+      \"integrity\": \"sha512-NOKm8xhkzAjzFx8B2v5OAHT+u5pRQc2UCa2Vq9jYL/31o2wi9mxBA7LIFs3sV5VSC49z6pEhfbMULvShKj26WA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">= 6\"\n+      }\n+    },\n+    \"node_modules/concat-map\": {\n+      \"version\": \"0.0.1\",\n+      \"resolved\": \"https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz\",\n+      \"integrity\": \"sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/confbox\": {\n+      \"version\": \"0.1.8\",\n+      \"resolved\": \"https://registry.npmjs.org/confbox/-/confbox-0.1.8.tgz\",\n+      \"integrity\": \"sha512-RMtmw0iFkeR4YV+fUOSucriAQNb9g8zFR52MWCtl+cCZOFRNL6zeB395vPzFhEjjn4fMxXudmELnl/KF/WrK6w==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/consola\": {\n+      \"version\": \"3.4.2\",\n+      \"resolved\": \"https://registry.npmjs.org/consola/-/consola-3.4.2.tgz\",\n+      \"integrity\": \"sha512-5IKcdX0nnYavi6G7TtOhwkYzyjfJlatbjMjuLSfE2kYT5pMDOilZ4OvMhi637CcDICTmz3wARPoyhqyX1Y+XvA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \"^14.18.0 || >=16.10.0\"\n+      }\n+    },\n+    \"node_modules/cross-spawn\": {\n+      \"version\": \"7.0.6\",\n+      \"resolved\": \"https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.6.tgz\",\n+      \"integrity\": \"sha512-uV2QOWP2nWzsy2aMp8aRibhi9dlzF5Hgh5SHaB9OiTGEyDTiJJyx0uy51QXdyWbtAHNua4XJzUKca3OzKUd3vA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"path-key\": \"^3.1.0\",\n+        \"shebang-command\": \"^2.0.0\",\n+        \"which\": \"^2.0.1\"\n+      },\n+      \"engines\": {\n+        \"node\": \">= 8\"\n+      }\n+    },\n+    \"node_modules/debug\": {\n+      \"version\": \"4.4.1\",\n+      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-4.4.1.tgz\",\n+      \"integrity\": \"sha512-KcKCqiftBJcZr++7ykoDIEwSa3XWowTfNPo92BYxjXiyYEVrUQh2aLyhxBCwww+heortUFxEJYcRzosstTEBYQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"ms\": \"^2.1.3\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=6.0\"\n+      },\n+      \"peerDependenciesMeta\": {\n+        \"supports-color\": {\n+          \"optional\": true\n+        }\n+      }\n+    },\n+    \"node_modules/deep-eql\": {\n+      \"version\": \"4.1.4\",\n+      \"resolved\": \"https://registry.npmjs.org/deep-eql/-/deep-eql-4.1.4.tgz\",\n+      \"integrity\": \"sha512-SUwdGfqdKOwxCPeVYjwSyRpJ7Z+fhpwIAtmCUdZIWZ/YP5R9WAsyuSgpLVDi9bjWoN2LXHNss/dk3urXtdQxGg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"type-detect\": \"^4.0.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=6\"\n+      }\n+    },\n+    \"node_modules/deep-is\": {\n+      \"version\": \"0.1.4\",\n+      \"resolved\": \"https://registry.npmjs.org/deep-is/-/deep-is-0.1.4.tgz\",\n+      \"integrity\": \"sha512-oIPzksmTg4/MriiaYGO+okXDT7ztn/w3Eptv/+gSIdMdKsJo0u4CfYNFJPy+4SKMuCqGw2wxnA+URMg3t8a/bQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/diff-sequences\": {\n+      \"version\": \"29.6.3\",\n+      \"resolved\": \"https://registry.npmjs.org/diff-sequences/-/diff-sequences-29.6.3.tgz\",\n+      \"integrity\": \"sha512-EjePK1srD3P08o2j4f0ExnylqRs5B9tJjcp9t1krH2qRi8CCdsYfwe9JgSLurFBWwq4uOlipzfk5fHNvwFKr8Q==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n+      }\n+    },\n+    \"node_modules/dir-glob\": {\n+      \"version\": \"3.0.1\",\n+      \"resolved\": \"https://registry.npmjs.org/dir-glob/-/dir-glob-3.0.1.tgz\",\n+      \"integrity\": \"sha512-WkrWp9GR4KXfKGYzOLmTuGVi1UWFfws377n9cc55/tb6DuqyF6pcQ5AbiHEshaDpY9v6oaSr2XCDidGmMwdzIA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"path-type\": \"^4.0.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      }\n+    },\n+    \"node_modules/doctrine\": {\n+      \"version\": \"3.0.0\",\n+      \"resolved\": \"https://registry.npmjs.org/doctrine/-/doctrine-3.0.0.tgz\",\n+      \"integrity\": \"sha512-yS+Q5i3hBf7GBkd4KG8a7eBNNWNGLTaEwwYWUijIYM7zrlYDM0BFXHjjPWlWZ1Rg7UaddZeIDmi9jF3HmqiQ2w==\",\n+      \"dev\": true,\n+      \"license\": \"Apache-2.0\",\n+      \"dependencies\": {\n+        \"esutils\": \"^2.0.2\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=6.0.0\"\n+      }\n+    },\n+    \"node_modules/eastasianwidth\": {\n+      \"version\": \"0.2.0\",\n+      \"resolved\": \"https://registry.npmjs.org/eastasianwidth/-/eastasianwidth-0.2.0.tgz\",\n+      \"integrity\": \"sha512-I88TYZWc9XiYHRQ4/3c5rjjfgkjhLyW2luGIheGERbNQ6OY7yTybanSpDXZa8y7VUP9YmDcYa+eyq4ca7iLqWA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/emoji-regex\": {\n+      \"version\": \"9.2.2\",\n+      \"resolved\": \"https://registry.npmjs.org/emoji-regex/-/emoji-regex-9.2.2.tgz\",\n+      \"integrity\": \"sha512-L18DaJsXSUk2+42pv8mLs5jJT2hqFkFE4j21wOmgbUqsZ2hL72NsUU785g9RXgo3s0ZNgVl42TiHp3ZtOv/Vyg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/esbuild\": {\n+      \"version\": \"0.25.8\",\n+      \"resolved\": \"https://registry.npmjs.org/esbuild/-/esbuild-0.25.8.tgz\",\n+      \"integrity\": \"sha512-vVC0USHGtMi8+R4Kz8rt6JhEWLxsv9Rnu/lGYbPR8u47B+DCBksq9JarW0zOO7bs37hyOK1l2/oqtbciutL5+Q==\",\n+      \"dev\": true,\n+      \"hasInstallScript\": true,\n+      \"license\": \"MIT\",\n+      \"bin\": {\n+        \"esbuild\": \"bin/esbuild\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=18\"\n+      },\n+      \"optionalDependencies\": {\n+        \"@esbuild/aix-ppc64\": \"0.25.8\",\n+        \"@esbuild/android-arm\": \"0.25.8\",\n+        \"@esbuild/android-arm64\": \"0.25.8\",\n+        \"@esbuild/android-x64\": \"0.25.8\",\n+        \"@esbuild/darwin-arm64\": \"0.25.8\",\n+        \"@esbuild/darwin-x64\": \"0.25.8\",\n+        \"@esbuild/freebsd-arm64\": \"0.25.8\",\n+        \"@esbuild/freebsd-x64\": \"0.25.8\",\n+        \"@esbuild/linux-arm\": \"0.25.8\",\n+        \"@esbuild/linux-arm64\": \"0.25.8\",\n+        \"@esbuild/linux-ia32\": \"0.25.8\",\n+        \"@esbuild/linux-loong64\": \"0.25.8\",\n+        \"@esbuild/linux-mips64el\": \"0.25.8\",\n+        \"@esbuild/linux-ppc64\": \"0.25.8\",\n+        \"@esbuild/linux-riscv64\": \"0.25.8\",\n+        \"@esbuild/linux-s390x\": \"0.25.8\",\n+        \"@esbuild/linux-x64\": \"0.25.8\",\n+        \"@esbuild/netbsd-arm64\": \"0.25.8\",\n+        \"@esbuild/netbsd-x64\": \"0.25.8\",\n+        \"@esbuild/openbsd-arm64\": \"0.25.8\",\n+        \"@esbuild/openbsd-x64\": \"0.25.8\",\n+        \"@esbuild/openharmony-arm64\": \"0.25.8\",\n+        \"@esbuild/sunos-x64\": \"0.25.8\",\n+        \"@esbuild/win32-arm64\": \"0.25.8\",\n+        \"@esbuild/win32-ia32\": \"0.25.8\",\n+        \"@esbuild/win32-x64\": \"0.25.8\"\n+      }\n+    },\n+    \"node_modules/escape-string-regexp\": {\n+      \"version\": \"4.0.0\",\n+      \"resolved\": \"https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-4.0.0.tgz\",\n+      \"integrity\": \"sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=10\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/sponsors/sindresorhus\"\n+      }\n+    },\n+    \"node_modules/eslint\": {\n+      \"version\": \"8.57.1\",\n+      \"resolved\": \"https://registry.npmjs.org/eslint/-/eslint-8.57.1.tgz\",\n+      \"integrity\": \"sha512-ypowyDxpVSYpkXr9WPv2PAZCtNip1Mv5KTW0SCurXv/9iOpcrH9PaqUElksqEB6pChqHGDRCFTyrZlGhnLNGiA==\",\n+      \"deprecated\": \"This version is no longer supported. Please see https://eslint.org/version-support for other options.\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@eslint-community/eslint-utils\": \"^4.2.0\",\n+        \"@eslint-community/regexpp\": \"^4.6.1\",\n+        \"@eslint/eslintrc\": \"^2.1.4\",\n+        \"@eslint/js\": \"8.57.1\",\n+        \"@humanwhocodes/config-array\": \"^0.13.0\",\n+        \"@humanwhocodes/module-importer\": \"^1.0.1\",\n+        \"@nodelib/fs.walk\": \"^1.2.8\",\n+        \"@ungap/structured-clone\": \"^1.2.0\",\n+        \"ajv\": \"^6.12.4\",\n+        \"chalk\": \"^4.0.0\",\n+        \"cross-spawn\": \"^7.0.2\",\n+        \"debug\": \"^4.3.2\",\n+        \"doctrine\": \"^3.0.0\",\n+        \"escape-string-regexp\": \"^4.0.0\",\n+        \"eslint-scope\": \"^7.2.2\",\n+        \"eslint-visitor-keys\": \"^3.4.3\",\n+        \"espree\": \"^9.6.1\",\n+        \"esquery\": \"^1.4.2\",\n+        \"esutils\": \"^2.0.2\",\n+        \"fast-deep-equal\": \"^3.1.3\",\n+        \"file-entry-cache\": \"^6.0.1\",\n+        \"find-up\": \"^5.0.0\",\n+        \"glob-parent\": \"^6.0.2\",\n+        \"globals\": \"^13.19.0\",\n+        \"graphemer\": \"^1.4.0\",\n+        \"ignore\": \"^5.2.0\",\n+        \"imurmurhash\": \"^0.1.4\",\n+        \"is-glob\": \"^4.0.0\",\n+        \"is-path-inside\": \"^3.0.3\",\n+        \"js-yaml\": \"^4.1.0\",\n+        \"json-stable-stringify-without-jsonify\": \"^1.0.1\",\n+        \"levn\": \"^0.4.1\",\n+        \"lodash.merge\": \"^4.6.2\",\n+        \"minimatch\": \"^3.1.2\",\n+        \"natural-compare\": \"^1.4.0\",\n+        \"optionator\": \"^0.9.3\",\n+        \"strip-ansi\": \"^6.0.1\",\n+        \"text-table\": \"^0.2.0\"\n+      },\n+      \"bin\": {\n+        \"eslint\": \"bin/eslint.js\"\n+      },\n+      \"engines\": {\n+        \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://opencollective.com/eslint\"\n+      }\n+    },\n+    \"node_modules/eslint-scope\": {\n+      \"version\": \"7.2.2\",\n+      \"resolved\": \"https://registry.npmjs.org/eslint-scope/-/eslint-scope-7.2.2.tgz\",\n+      \"integrity\": \"sha512-dOt21O7lTMhDM+X9mB4GX+DZrZtCUJPL/wlcTqxyrx5IvO0IYtILdtrQGQp+8n5S0gwSVmOf9NQrjMOgfQZlIg==\",\n+      \"dev\": true,\n+      \"license\": \"BSD-2-Clause\",\n+      \"dependencies\": {\n+        \"esrecurse\": \"^4.3.0\",\n+        \"estraverse\": \"^5.2.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://opencollective.com/eslint\"\n+      }\n+    },\n+    \"node_modules/eslint-visitor-keys\": {\n+      \"version\": \"3.4.3\",\n+      \"resolved\": \"https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-3.4.3.tgz\",\n+      \"integrity\": \"sha512-wpc+LXeiyiisxPlEkUzU6svyS1frIO3Mgxj1fdy7Pm8Ygzguax2N3Fa/D/ag1WqbOprdI+uY6wMUl8/a2G+iag==\",\n+      \"dev\": true,\n+      \"license\": \"Apache-2.0\",\n+      \"engines\": {\n+        \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://opencollective.com/eslint\"\n+      }\n+    },\n+    \"node_modules/eslint/node_modules/brace-expansion\": {\n+      \"version\": \"1.1.12\",\n+      \"resolved\": \"https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.12.tgz\",\n+      \"integrity\": \"sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"balanced-match\": \"^1.0.0\",\n+        \"concat-map\": \"0.0.1\"\n+      }\n+    },\n+    \"node_modules/eslint/node_modules/minimatch\": {\n+      \"version\": \"3.1.2\",\n+      \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz\",\n+      \"integrity\": \"sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==\",\n+      \"dev\": true,\n+      \"license\": \"ISC\",\n+      \"dependencies\": {\n+        \"brace-expansion\": \"^1.1.7\"\n+      },\n+      \"engines\": {\n+        \"node\": \"*\"\n+      }\n+    },\n+    \"node_modules/espree\": {\n+      \"version\": \"9.6.1\",\n+      \"resolved\": \"https://registry.npmjs.org/espree/-/espree-9.6.1.tgz\",\n+      \"integrity\": \"sha512-oruZaFkjorTpF32kDSI5/75ViwGeZginGGy2NoOSg3Q9bnwlnmDm4HLnkl0RE3n+njDXR037aY1+x58Z/zFdwQ==\",\n+      \"dev\": true,\n+      \"license\": \"BSD-2-Clause\",\n+      \"dependencies\": {\n+        \"acorn\": \"^8.9.0\",\n+        \"acorn-jsx\": \"^5.3.2\",\n+        \"eslint-visitor-keys\": \"^3.4.1\"\n+      },\n+      \"engines\": {\n+        \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://opencollective.com/eslint\"\n+      }\n+    },\n+    \"node_modules/esquery\": {\n+      \"version\": \"1.6.0\",\n+      \"resolved\": \"https://registry.npmjs.org/esquery/-/esquery-1.6.0.tgz\",\n+      \"integrity\": \"sha512-ca9pw9fomFcKPvFLXhBKUK90ZvGibiGOvRJNbjljY7s7uq/5YO4BOzcYtJqExdx99rF6aAcnRxHmcUHcz6sQsg==\",\n+      \"dev\": true,\n+      \"license\": \"BSD-3-Clause\",\n+      \"dependencies\": {\n+        \"estraverse\": \"^5.1.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=0.10\"\n+      }\n+    },\n+    \"node_modules/esrecurse\": {\n+      \"version\": \"4.3.0\",\n+      \"resolved\": \"https://registry.npmjs.org/esrecurse/-/esrecurse-4.3.0.tgz\",\n+      \"integrity\": \"sha512-KmfKL3b6G+RXvP8N1vr3Tq1kL/oCFgn2NYXEtqP8/L3pKapUA4G8cFVaoF3SU323CD4XypR/ffioHmkti6/Tag==\",\n+      \"dev\": true,\n+      \"license\": \"BSD-2-Clause\",\n+      \"dependencies\": {\n+        \"estraverse\": \"^5.2.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=4.0\"\n+      }\n+    },\n+    \"node_modules/estraverse\": {\n+      \"version\": \"5.3.0\",\n+      \"resolved\": \"https://registry.npmjs.org/estraverse/-/estraverse-5.3.0.tgz\",\n+      \"integrity\": \"sha512-MMdARuVEQziNTeJD8DgMqmhwR11BRQ/cBP+pLtYdSTnf3MIO8fFeiINEbX36ZdNlfU/7A9f3gUw49B3oQsvwBA==\",\n+      \"dev\": true,\n+      \"license\": \"BSD-2-Clause\",\n+      \"engines\": {\n+        \"node\": \">=4.0\"\n+      }\n+    },\n+    \"node_modules/estree-walker\": {\n+      \"version\": \"3.0.3\",\n+      \"resolved\": \"https://registry.npmjs.org/estree-walker/-/estree-walker-3.0.3.tgz\",\n+      \"integrity\": \"sha512-7RUKfXgSMMkzt6ZuXmqapOurLGPPfgj6l9uRZ7lRGolvk0y2yocc35LdcxKC5PQZdn2DMqioAQ2NoWcrTKmm6g==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@types/estree\": \"^1.0.0\"\n+      }\n+    },\n+    \"node_modules/esutils\": {\n+      \"version\": \"2.0.3\",\n+      \"resolved\": \"https://registry.npmjs.org/esutils/-/esutils-2.0.3.tgz\",\n+      \"integrity\": \"sha512-kVscqXk4OCp68SZ0dkgEKVi6/8ij300KBWTJq32P/dYeWTSwK41WyTxalN1eRmA5Z9UU/LX9D7FWSmV9SAYx6g==\",\n+      \"dev\": true,\n+      \"license\": \"BSD-2-Clause\",\n+      \"engines\": {\n+        \"node\": \">=0.10.0\"\n+      }\n+    },\n+    \"node_modules/eventemitter3\": {\n+      \"version\": \"5.0.1\",\n+      \"resolved\": \"https://registry.npmjs.org/eventemitter3/-/eventemitter3-5.0.1.tgz\",\n+      \"integrity\": \"sha512-GWkBvjiSZK87ELrYOSESUYeVIc9mvLLf/nXalMOS5dYrgZq9o5OVkbZAVM06CVxYsCwH9BDZFPlQTlPA1j4ahA==\",\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/execa\": {\n+      \"version\": \"8.0.1\",\n+      \"resolved\": \"https://registry.npmjs.org/execa/-/execa-8.0.1.tgz\",\n+      \"integrity\": \"sha512-VyhnebXciFV2DESc+p6B+y0LjSm0krU4OgJN44qFAhBY0TJ+1V61tYD2+wHusZ6F9n5K+vl8k0sTy7PEfV4qpg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"cross-spawn\": \"^7.0.3\",\n+        \"get-stream\": \"^8.0.1\",\n+        \"human-signals\": \"^5.0.0\",\n+        \"is-stream\": \"^3.0.0\",\n+        \"merge-stream\": \"^2.0.0\",\n+        \"npm-run-path\": \"^5.1.0\",\n+        \"onetime\": \"^6.0.0\",\n+        \"signal-exit\": \"^4.1.0\",\n+        \"strip-final-newline\": \"^3.0.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=16.17\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/sindresorhus/execa?sponsor=1\"\n+      }\n+    },\n+    \"node_modules/fast-deep-equal\": {\n+      \"version\": \"3.1.3\",\n+      \"resolved\": \"https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-3.1.3.tgz\",\n+      \"integrity\": \"sha512-f3qQ9oQy9j2AhBe/H9VC91wLmKBCCU/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/fast-glob\": {\n+      \"version\": \"3.3.3\",\n+      \"resolved\": \"https://registry.npmjs.org/fast-glob/-/fast-glob-3.3.3.tgz\",\n+      \"integrity\": \"sha512-7MptL8U0cqcFdzIzwOTHoilX9x5BrNqye7Z/LuC7kCMRio1EMSyqRK3BEAUD7sXRq4iT4AzTVuZdhgQ2TCvYLg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@nodelib/fs.stat\": \"^2.0.2\",\n+        \"@nodelib/fs.walk\": \"^1.2.3\",\n+        \"glob-parent\": \"^5.1.2\",\n+        \"merge2\": \"^1.3.0\",\n+        \"micromatch\": \"^4.0.8\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=8.6.0\"\n+      }\n+    },\n+    \"node_modules/fast-glob/node_modules/glob-parent\": {\n+      \"version\": \"5.1.2\",\n+      \"resolved\": \"https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz\",\n+      \"integrity\": \"sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==\",\n+      \"dev\": true,\n+      \"license\": \"ISC\",\n+      \"dependencies\": {\n+        \"is-glob\": \"^4.0.1\"\n+      },\n+      \"engines\": {\n+        \"node\": \">= 6\"\n+      }\n+    },\n+    \"node_modules/fast-json-stable-stringify\": {\n+      \"version\": \"2.1.0\",\n+      \"resolved\": \"https://registry.npmjs.org/fast-json-stable-stringify/-/fast-json-stable-stringify-2.1.0.tgz\",\n+      \"integrity\": \"sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/fast-levenshtein\": {\n+      \"version\": \"2.0.6\",\n+      \"resolved\": \"https://registry.npmjs.org/fast-levenshtein/-/fast-levenshtein-2.0.6.tgz\",\n+      \"integrity\": \"sha512-DCXu6Ifhqcks7TZKY3Hxp3y6qphY5SJZmrWMDrKcERSOXWQdMhU9Ig/PYrzyw/ul9jOIyh0N4M0tbC5hodg8dw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/fastq\": {\n+      \"version\": \"1.19.1\",\n+      \"resolved\": \"https://registry.npmjs.org/fastq/-/fastq-1.19.1.tgz\",\n+      \"integrity\": \"sha512-GwLTyxkCXjXbxqIhTsMI2Nui8huMPtnxg7krajPJAjnEG/iiOS7i+zCtWGZR9G0NBKbXKh6X9m9UIsYX/N6vvQ==\",\n+      \"dev\": true,\n+      \"license\": \"ISC\",\n+      \"dependencies\": {\n+        \"reusify\": \"^1.0.4\"\n+      }\n+    },\n+    \"node_modules/file-entry-cache\": {\n+      \"version\": \"6.0.1\",\n+      \"resolved\": \"https://registry.npmjs.org/file-entry-cache/-/file-entry-cache-6.0.1.tgz\",\n+      \"integrity\": \"sha512-7Gps/XWymbLk2QLYK4NzpMOrYjMhdIxXuIvy2QBsLE6ljuodKvdkWs/cpyJJ3CVIVpH0Oi1Hvg1ovbMzLdFBBg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"flat-cache\": \"^3.0.4\"\n+      },\n+      \"engines\": {\n+        \"node\": \"^10.12.0 || >=12.0.0\"\n+      }\n+    },\n+    \"node_modules/fill-range\": {\n+      \"version\": \"7.1.1\",\n+      \"resolved\": \"https://registry.npmjs.org/fill-range/-/fill-range-7.1.1.tgz\",\n+      \"integrity\": \"sha512-YsGpe3WHLK8ZYi4tWDg2Jy3ebRz2rXowDxnld4bkQB00cc/1Zw9AWnC0i9ztDJitivtQvaI9KaLyKrc+hBW0yg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"to-regex-range\": \"^5.0.1\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      }\n+    },\n+    \"node_modules/find-up\": {\n+      \"version\": \"5.0.0\",\n+      \"resolved\": \"https://registry.npmjs.org/find-up/-/find-up-5.0.0.tgz\",\n+      \"integrity\": \"sha512-78/PXT1wlLLDgTzDs7sjq9hzz0vXD+zn+7wypEe4fXQxCmdmqfGsEPQxmiCSQI3ajFV91bVSsvNtrJRiW6nGng==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"locate-path\": \"^6.0.0\",\n+        \"path-exists\": \"^4.0.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=10\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/sponsors/sindresorhus\"\n+      }\n+    },\n+    \"node_modules/fix-dts-default-cjs-exports\": {\n+      \"version\": \"1.0.1\",\n+      \"resolved\": \"https://registry.npmjs.org/fix-dts-default-cjs-exports/-/fix-dts-default-cjs-exports-1.0.1.tgz\",\n+      \"integrity\": \"sha512-pVIECanWFC61Hzl2+oOCtoJ3F17kglZC/6N94eRWycFgBH35hHx0Li604ZIzhseh97mf2p0cv7vVrOZGoqhlEg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"magic-string\": \"^0.30.17\",\n+        \"mlly\": \"^1.7.4\",\n+        \"rollup\": \"^4.34.8\"\n+      }\n+    },\n+    \"node_modules/flat-cache\": {\n+      \"version\": \"3.2.0\",\n+      \"resolved\": \"https://registry.npmjs.org/flat-cache/-/flat-cache-3.2.0.tgz\",\n+      \"integrity\": \"sha512-CYcENa+FtcUKLmhhqyctpclsq7QF38pKjZHsGNiSQF5r4FtoKDWabFDl3hzaEQMvT1LHEysw5twgLvpYYb4vbw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"flatted\": \"^3.2.9\",\n+        \"keyv\": \"^4.5.3\",\n+        \"rimraf\": \"^3.0.2\"\n+      },\n+      \"engines\": {\n+        \"node\": \"^10.12.0 || >=12.0.0\"\n+      }\n+    },\n+    \"node_modules/flatted\": {\n+      \"version\": \"3.3.3\",\n+      \"resolved\": \"https://registry.npmjs.org/flatted/-/flatted-3.3.3.tgz\",\n+      \"integrity\": \"sha512-GX+ysw4PBCz0PzosHDepZGANEuFCMLrnRTiEy9McGjmkCQYwRq4A/X786G/fjM/+OjsWSU1ZrY5qyARZmO/uwg==\",\n+      \"dev\": true,\n+      \"license\": \"ISC\"\n+    },\n+    \"node_modules/foreground-child\": {\n+      \"version\": \"3.3.1\",\n+      \"resolved\": \"https://registry.npmjs.org/foreground-child/-/foreground-child-3.3.1.tgz\",\n+      \"integrity\": \"sha512-gIXjKqtFuWEgzFRJA9WCQeSJLZDjgJUOMCMzxtvFq/37KojM1BFGufqsCy0r4qSQmYLsZYMeyRqzIWOMup03sw==\",\n+      \"dev\": true,\n+      \"license\": \"ISC\",\n+      \"dependencies\": {\n+        \"cross-spawn\": \"^7.0.6\",\n+        \"signal-exit\": \"^4.0.1\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=14\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/sponsors/isaacs\"\n+      }\n+    },\n+    \"node_modules/fs.realpath\": {\n+      \"version\": \"1.0.0\",\n+      \"resolved\": \"https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz\",\n+      \"integrity\": \"sha512-OO0pH2lK6a0hZnAdau5ItzHPI6pUlvI7jMVnxUQRtw4owF2wk8lOSabtGDCTP4Ggrg2MbGnWO9X8K1t4+fGMDw==\",\n+      \"dev\": true,\n+      \"license\": \"ISC\"\n+    },\n+    \"node_modules/fsevents\": {\n+      \"version\": \"2.3.3\",\n+      \"resolved\": \"https://registry.npmjs.org/fsevents/-/fsevents-2.3.3.tgz\",\n+      \"integrity\": \"sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==\",\n+      \"dev\": true,\n+      \"hasInstallScript\": true,\n+      \"license\": \"MIT\",\n+      \"optional\": true,\n+      \"os\": [\n+        \"darwin\"\n+      ],\n+      \"engines\": {\n+        \"node\": \"^8.16.0 || ^10.6.0 || >=11.0.0\"\n+      }\n+    },\n+    \"node_modules/get-func-name\": {\n+      \"version\": \"2.0.2\",\n+      \"resolved\": \"https://registry.npmjs.org/get-func-name/-/get-func-name-2.0.2.tgz\",\n+      \"integrity\": \"sha512-8vXOvuE167CtIc3OyItco7N/dpRtBbYOsPsXCz7X/PMnlGjYjSGuZJgM1Y7mmew7BKf9BqvLX2tnOVy1BBUsxQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \"*\"\n+      }\n+    },\n+    \"node_modules/get-stream\": {\n+      \"version\": \"8.0.1\",\n+      \"resolved\": \"https://registry.npmjs.org/get-stream/-/get-stream-8.0.1.tgz\",\n+      \"integrity\": \"sha512-VaUJspBffn/LMCJVoMvSAdmscJyS1auj5Zulnn5UoYcY531UWmdwhRWkcGKnGU93m5HSXP9LP2usOryrBtQowA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=16\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/sponsors/sindresorhus\"\n+      }\n+    },\n+    \"node_modules/glob\": {\n+      \"version\": \"7.2.3\",\n+      \"resolved\": \"https://registry.npmjs.org/glob/-/glob-7.2.3.tgz\",\n+      \"integrity\": \"sha512-nFR0zLpU2YCaRxwoCJvL6UvCH2JFyFVIvwTLsIf21AuHlMskA1hhTdk+LlYJtOlYt9v6dvszD2BGRqBL+iQK9Q==\",\n+      \"deprecated\": \"Glob versions prior to v9 are no longer supported\",\n+      \"dev\": true,\n+      \"license\": \"ISC\",\n+      \"dependencies\": {\n+        \"fs.realpath\": \"^1.0.0\",\n+        \"inflight\": \"^1.0.4\",\n+        \"inherits\": \"2\",\n+        \"minimatch\": \"^3.1.1\",\n+        \"once\": \"^1.3.0\",\n+        \"path-is-absolute\": \"^1.0.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \"*\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/sponsors/isaacs\"\n+      }\n+    },\n+    \"node_modules/glob-parent\": {\n+      \"version\": \"6.0.2\",\n+      \"resolved\": \"https://registry.npmjs.org/glob-parent/-/glob-parent-6.0.2.tgz\",\n+      \"integrity\": \"sha512-XxwI8EOhVQgWp6iDL+3b0r86f4d6AX6zSU55HfB4ydCEuXLXc5FcYeOu+nnGftS4TEju/11rt4KJPTMgbfmv4A==\",\n+      \"dev\": true,\n+      \"license\": \"ISC\",\n+      \"dependencies\": {\n+        \"is-glob\": \"^4.0.3\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=10.13.0\"\n+      }\n+    },\n+    \"node_modules/glob/node_modules/brace-expansion\": {\n+      \"version\": \"1.1.12\",\n+      \"resolved\": \"https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.12.tgz\",\n+      \"integrity\": \"sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"balanced-match\": \"^1.0.0\",\n+        \"concat-map\": \"0.0.1\"\n+      }\n+    },\n+    \"node_modules/glob/node_modules/minimatch\": {\n+      \"version\": \"3.1.2\",\n+      \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz\",\n+      \"integrity\": \"sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==\",\n+      \"dev\": true,\n+      \"license\": \"ISC\",\n+      \"dependencies\": {\n+        \"brace-expansion\": \"^1.1.7\"\n+      },\n+      \"engines\": {\n+        \"node\": \"*\"\n+      }\n+    },\n+    \"node_modules/globals\": {\n+      \"version\": \"13.24.0\",\n+      \"resolved\": \"https://registry.npmjs.org/globals/-/globals-13.24.0.tgz\",\n+      \"integrity\": \"sha512-AhO5QUcj8llrbG09iWhPU2B204J1xnPeL8kQmVorSsy+Sjj1sk8gIyh6cUocGmH4L0UuhAJy+hJMRA4mgA4mFQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"type-fest\": \"^0.20.2\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/sponsors/sindresorhus\"\n+      }\n+    },\n+    \"node_modules/globby\": {\n+      \"version\": \"11.1.0\",\n+      \"resolved\": \"https://registry.npmjs.org/globby/-/globby-11.1.0.tgz\",\n+      \"integrity\": \"sha512-jhIXaOzy1sb8IyocaruWSn1TjmnBVs8Ayhcy83rmxNJ8q2uWKCAj3CnJY+KpGSXCueAPc0i05kVvVKtP1t9S3g==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"array-union\": \"^2.1.0\",\n+        \"dir-glob\": \"^3.0.1\",\n+        \"fast-glob\": \"^3.2.9\",\n+        \"ignore\": \"^5.2.0\",\n+        \"merge2\": \"^1.4.1\",\n+        \"slash\": \"^3.0.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=10\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/sponsors/sindresorhus\"\n+      }\n+    },\n+    \"node_modules/graphemer\": {\n+      \"version\": \"1.4.0\",\n+      \"resolved\": \"https://registry.npmjs.org/graphemer/-/graphemer-1.4.0.tgz\",\n+      \"integrity\": \"sha512-EtKwoO6kxCL9WO5xipiHTZlSzBm7WLT627TqC/uVRd0HKmq8NXyebnNYxDoBi7wt8eTWrUrKXCOVaFq9x1kgag==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/has-flag\": {\n+      \"version\": \"4.0.0\",\n+      \"resolved\": \"https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz\",\n+      \"integrity\": \"sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      }\n+    },\n+    \"node_modules/human-signals\": {\n+      \"version\": \"5.0.0\",\n+      \"resolved\": \"https://registry.npmjs.org/human-signals/-/human-signals-5.0.0.tgz\",\n+      \"integrity\": \"sha512-AXcZb6vzzrFAUE61HnN4mpLqd/cSIwNQjtNWR0euPm6y0iqx3G4gOXaIDdtdDwZmhwe82LA6+zinmW4UBWVePQ==\",\n+      \"dev\": true,\n+      \"license\": \"Apache-2.0\",\n+      \"engines\": {\n+        \"node\": \">=16.17.0\"\n+      }\n+    },\n+    \"node_modules/ignore\": {\n+      \"version\": \"5.3.2\",\n+      \"resolved\": \"https://registry.npmjs.org/ignore/-/ignore-5.3.2.tgz\",\n+      \"integrity\": \"sha512-hsBTNUqQTDwkWtcdYI2i06Y/nUBEsNEDJKjWdigLvegy8kDuJAS8uRlpkkcQpyEXL0Z/pjDy5HBmMjRCJ2gq+g==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">= 4\"\n+      }\n+    },\n+    \"node_modules/immer\": {\n+      \"version\": \"10.1.1\",\n+      \"resolved\": \"https://registry.npmjs.org/immer/-/immer-10.1.1.tgz\",\n+      \"integrity\": \"sha512-s2MPrmjovJcoMaHtx6K11Ra7oD05NT97w1IC5zpMkT6Atjr7H8LjaDd81iIxUYpMKSRRNMJE703M1Fhr/TctHw==\",\n+      \"license\": \"MIT\",\n+      \"funding\": {\n+        \"type\": \"opencollective\",\n+        \"url\": \"https://opencollective.com/immer\"\n+      }\n+    },\n+    \"node_modules/import-fresh\": {\n+      \"version\": \"3.3.1\",\n+      \"resolved\": \"https://registry.npmjs.org/import-fresh/-/import-fresh-3.3.1.tgz\",\n+      \"integrity\": \"sha512-TR3KfrTZTYLPB6jUjfx6MF9WcWrHL9su5TObK4ZkYgBdWKPOFoSoQIdEuTuR82pmtxH2spWG9h6etwfr1pLBqQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"parent-module\": \"^1.0.0\",\n+        \"resolve-from\": \"^4.0.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=6\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/sponsors/sindresorhus\"\n+      }\n+    },\n+    \"node_modules/imurmurhash\": {\n+      \"version\": \"0.1.4\",\n+      \"resolved\": \"https://registry.npmjs.org/imurmurhash/-/imurmurhash-0.1.4.tgz\",\n+      \"integrity\": \"sha512-JmXMZ6wuvDmLiHEml9ykzqO6lwFbof0GG4IkcGaENdCRDDmMVnny7s5HsIgHCbaq0w2MyPhDqkhTUgS2LU2PHA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=0.8.19\"\n+      }\n+    },\n+    \"node_modules/inflight\": {\n+      \"version\": \"1.0.6\",\n+      \"resolved\": \"https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz\",\n+      \"integrity\": \"sha512-k92I/b08q4wvFscXCLvqfsHCrjrF7yiXsQuIVvVE7N82W3+aqpzuUdBbfhWcy/FZR3/4IgflMgKLOsvPDrGCJA==\",\n+      \"deprecated\": \"This module is not supported, and leaks memory. Do not use it. Check out lru-cache if you want a good and tested way to coalesce async requests by a key value, which is much more comprehensive and powerful.\",\n+      \"dev\": true,\n+      \"license\": \"ISC\",\n+      \"dependencies\": {\n+        \"once\": \"^1.3.0\",\n+        \"wrappy\": \"1\"\n+      }\n+    },\n+    \"node_modules/inherits\": {\n+      \"version\": \"2.0.4\",\n+      \"resolved\": \"https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz\",\n+      \"integrity\": \"sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==\",\n+      \"dev\": true,\n+      \"license\": \"ISC\"\n+    },\n+    \"node_modules/is-extglob\": {\n+      \"version\": \"2.1.1\",\n+      \"resolved\": \"https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz\",\n+      \"integrity\": \"sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=0.10.0\"\n+      }\n+    },\n+    \"node_modules/is-fullwidth-code-point\": {\n+      \"version\": \"3.0.0\",\n+      \"resolved\": \"https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz\",\n+      \"integrity\": \"sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      }\n+    },\n+    \"node_modules/is-glob\": {\n+      \"version\": \"4.0.3\",\n+      \"resolved\": \"https://registry.npmjs.org/is-glob/-/is-glob-4.0.3.tgz\",\n+      \"integrity\": \"sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"is-extglob\": \"^2.1.1\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=0.10.0\"\n+      }\n+    },\n+    \"node_modules/is-number\": {\n+      \"version\": \"7.0.0\",\n+      \"resolved\": \"https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz\",\n+      \"integrity\": \"sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=0.12.0\"\n+      }\n+    },\n+    \"node_modules/is-path-inside\": {\n+      \"version\": \"3.0.3\",\n+      \"resolved\": \"https://registry.npmjs.org/is-path-inside/-/is-path-inside-3.0.3.tgz\",\n+      \"integrity\": \"sha512-Fd4gABb+ycGAmKou8eMftCupSir5lRxqf4aD/vd0cD2qc4HL07OjCeuHMr8Ro4CoMaeCKDB0/ECBOVWjTwUvPQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      }\n+    },\n+    \"node_modules/is-stream\": {\n+      \"version\": \"3.0.0\",\n+      \"resolved\": \"https://registry.npmjs.org/is-stream/-/is-stream-3.0.0.tgz\",\n+      \"integrity\": \"sha512-LnQR4bZ9IADDRSkvpqMGvt/tEJWclzklNgSw48V5EAaAeDd6qGvN8ei6k5p0tvxSR171VmGyHuTiAOfxAbr8kA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \"^12.20.0 || ^14.13.1 || >=16.0.0\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/sponsors/sindresorhus\"\n+      }\n+    },\n+    \"node_modules/isexe\": {\n+      \"version\": \"2.0.0\",\n+      \"resolved\": \"https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz\",\n+      \"integrity\": \"sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw==\",\n+      \"dev\": true,\n+      \"license\": \"ISC\"\n+    },\n+    \"node_modules/jackspeak\": {\n+      \"version\": \"3.4.3\",\n+      \"resolved\": \"https://registry.npmjs.org/jackspeak/-/jackspeak-3.4.3.tgz\",\n+      \"integrity\": \"sha512-OGlZQpz2yfahA/Rd1Y8Cd9SIEsqvXkLVoSw/cgwhnhFMDbsQFeZYoJJ7bIZBS9BcamUW96asq/npPWugM+RQBw==\",\n+      \"dev\": true,\n+      \"license\": \"BlueOak-1.0.0\",\n+      \"dependencies\": {\n+        \"@isaacs/cliui\": \"^8.0.2\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/sponsors/isaacs\"\n+      },\n+      \"optionalDependencies\": {\n+        \"@pkgjs/parseargs\": \"^0.11.0\"\n+      }\n+    },\n+    \"node_modules/joycon\": {\n+      \"version\": \"3.1.1\",\n+      \"resolved\": \"https://registry.npmjs.org/joycon/-/joycon-3.1.1.tgz\",\n+      \"integrity\": \"sha512-34wB/Y7MW7bzjKRjUKTa46I2Z7eV62Rkhva+KkopW7Qvv/OSWBqvkSY7vusOPrNuZcUG3tApvdVgNB8POj3SPw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=10\"\n+      }\n+    },\n+    \"node_modules/js-tokens\": {\n+      \"version\": \"9.0.1\",\n+      \"resolved\": \"https://registry.npmjs.org/js-tokens/-/js-tokens-9.0.1.tgz\",\n+      \"integrity\": \"sha512-mxa9E9ITFOt0ban3j6L5MpjwegGz6lBQmM1IJkWeBZGcMxto50+eWdjC/52xDbS2vy0k7vIMK0Fe2wfL9OQSpQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/js-yaml\": {\n+      \"version\": \"4.1.0\",\n+      \"resolved\": \"https://registry.npmjs.org/js-yaml/-/js-yaml-4.1.0.tgz\",\n+      \"integrity\": \"sha512-wpxZs9NoxZaJESJGIZTyDEaYpl0FKSA+FB9aJiyemKhMwkxQg63h4T1KJgUGHpTqPDNRcmmYLugrRjJlBtWvRA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"argparse\": \"^2.0.1\"\n+      },\n+      \"bin\": {\n+        \"js-yaml\": \"bin/js-yaml.js\"\n+      }\n+    },\n+    \"node_modules/json-buffer\": {\n+      \"version\": \"3.0.1\",\n+      \"resolved\": \"https://registry.npmjs.org/json-buffer/-/json-buffer-3.0.1.tgz\",\n+      \"integrity\": \"sha512-4bV5BfR2mqfQTJm+V5tPPdf+ZpuhiIvTuAB5g8kcrXOZpTT/QwwVRWBywX1ozr6lEuPdbHxwaJlm9G6mI2sfSQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/json-schema-traverse\": {\n+      \"version\": \"0.4.1\",\n+      \"resolved\": \"https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-0.4.1.tgz\",\n+      \"integrity\": \"sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/json-stable-stringify-without-jsonify\": {\n+      \"version\": \"1.0.1\",\n+      \"resolved\": \"https://registry.npmjs.org/json-stable-stringify-without-jsonify/-/json-stable-stringify-without-jsonify-1.0.1.tgz\",\n+      \"integrity\": \"sha512-Bdboy+l7tA3OGW6FjyFHWkP5LuByj1Tk33Ljyq0axyzdk9//JSi2u3fP1QSmd1KNwq6VOKYGlAu87CisVir6Pw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/keyv\": {\n+      \"version\": \"4.5.4\",\n+      \"resolved\": \"https://registry.npmjs.org/keyv/-/keyv-4.5.4.tgz\",\n+      \"integrity\": \"sha512-oxVHkHR/EJf2CNXnWxRLW6mg7JyCCUcG0DtEGmL2ctUo1PNTin1PUil+r/+4r5MpVgC/fn1kjsx7mjSujKqIpw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"json-buffer\": \"3.0.1\"\n+      }\n+    },\n+    \"node_modules/levn\": {\n+      \"version\": \"0.4.1\",\n+      \"resolved\": \"https://registry.npmjs.org/levn/-/levn-0.4.1.tgz\",\n+      \"integrity\": \"sha512-+bT2uH4E5LGE7h/n3evcS/sQlJXCpIp6ym8OWJ5eV6+67Dsql/LaaT7qJBAt2rzfoa/5QBGBhxDix1dMt2kQKQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"prelude-ls\": \"^1.2.1\",\n+        \"type-check\": \"~0.4.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">= 0.8.0\"\n+      }\n+    },\n+    \"node_modules/lilconfig\": {\n+      \"version\": \"3.1.3\",\n+      \"resolved\": \"https://registry.npmjs.org/lilconfig/-/lilconfig-3.1.3.tgz\",\n+      \"integrity\": \"sha512-/vlFKAoH5Cgt3Ie+JLhRbwOsCQePABiU3tJ1egGvyQ+33R/vcwM2Zl2QR/LzjsBeItPt3oSVXapn+m4nQDvpzw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=14\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/sponsors/antonk52\"\n+      }\n+    },\n+    \"node_modules/lines-and-columns\": {\n+      \"version\": \"1.2.4\",\n+      \"resolved\": \"https://registry.npmjs.org/lines-and-columns/-/lines-and-columns-1.2.4.tgz\",\n+      \"integrity\": \"sha512-7ylylesZQ/PV29jhEDl3Ufjo6ZX7gCqJr5F7PKrqc93v7fzSymt1BpwEU8nAUXs8qzzvqhbjhK5QZg6Mt/HkBg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/load-tsconfig\": {\n+      \"version\": \"0.2.5\",\n+      \"resolved\": \"https://registry.npmjs.org/load-tsconfig/-/load-tsconfig-0.2.5.tgz\",\n+      \"integrity\": \"sha512-IXO6OCs9yg8tMKzfPZ1YmheJbZCiEsnBdcB03l0OcfK9prKnJb96siuHCr5Fl37/yo9DnKU+TLpxzTUspw9shg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \"^12.20.0 || ^14.13.1 || >=16.0.0\"\n+      }\n+    },\n+    \"node_modules/local-pkg\": {\n+      \"version\": \"0.5.1\",\n+      \"resolved\": \"https://registry.npmjs.org/local-pkg/-/local-pkg-0.5.1.tgz\",\n+      \"integrity\": \"sha512-9rrA30MRRP3gBD3HTGnC6cDFpaE1kVDWxWgqWJUN0RvDNAo+Nz/9GxB+nHOH0ifbVFy0hSA1V6vFDvnx54lTEQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"mlly\": \"^1.7.3\",\n+        \"pkg-types\": \"^1.2.1\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=14\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/sponsors/antfu\"\n+      }\n+    },\n+    \"node_modules/locate-path\": {\n+      \"version\": \"6.0.0\",\n+      \"resolved\": \"https://registry.npmjs.org/locate-path/-/locate-path-6.0.0.tgz\",\n+      \"integrity\": \"sha512-iPZK6eYjbxRu3uB4/WZ3EsEIMJFMqAoopl3R+zuq0UjcAm/MO6KCweDgPfP3elTztoKP3KtnVHxTn2NHBSDVUw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"p-locate\": \"^5.0.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=10\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/sponsors/sindresorhus\"\n+      }\n+    },\n+    \"node_modules/lodash.merge\": {\n+      \"version\": \"4.6.2\",\n+      \"resolved\": \"https://registry.npmjs.org/lodash.merge/-/lodash.merge-4.6.2.tgz\",\n+      \"integrity\": \"sha512-0KpjqXRVvrYyCsX1swR/XTK0va6VQkQM6MNo7PqW77ByjAhoARA8EfrP1N4+KlKj8YS0ZUCtRT/YUuhyYDujIQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/lodash.sortby\": {\n+      \"version\": \"4.7.0\",\n+      \"resolved\": \"https://registry.npmjs.org/lodash.sortby/-/lodash.sortby-4.7.0.tgz\",\n+      \"integrity\": \"sha512-HDWXG8isMntAyRF5vZ7xKuEvOhT4AhlRt/3czTSjvGUxjYCBVRQY48ViDHyfYz9VIoBkW4TMGQNapx+l3RUwdA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/loupe\": {\n+      \"version\": \"2.3.7\",\n+      \"resolved\": \"https://registry.npmjs.org/loupe/-/loupe-2.3.7.tgz\",\n+      \"integrity\": \"sha512-zSMINGVYkdpYSOBmLi0D1Uo7JU9nVdQKrHxC8eYlV+9YKK9WePqAlL7lSlorG/U2Fw1w0hTBmaa/jrQ3UbPHtA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"get-func-name\": \"^2.0.1\"\n+      }\n+    },\n+    \"node_modules/lru-cache\": {\n+      \"version\": \"10.4.3\",\n+      \"resolved\": \"https://registry.npmjs.org/lru-cache/-/lru-cache-10.4.3.tgz\",\n+      \"integrity\": \"sha512-JNAzZcXrCt42VGLuYz0zfAzDfAvJWW6AfYlDBQyDV5DClI2m5sAmK+OIO7s59XfsRsWHp02jAJrRadPRGTt6SQ==\",\n+      \"dev\": true,\n+      \"license\": \"ISC\"\n+    },\n+    \"node_modules/magic-string\": {\n+      \"version\": \"0.30.17\",\n+      \"resolved\": \"https://registry.npmjs.org/magic-string/-/magic-string-0.30.17.tgz\",\n+      \"integrity\": \"sha512-sNPKHvyjVf7gyjwS4xGTaW/mCnF8wnjtifKBEhxfZ7E/S8tQ0rssrwGNn6q8JH/ohItJfSQp9mBtQYuTlH5QnA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@jridgewell/sourcemap-codec\": \"^1.5.0\"\n+      }\n+    },\n+    \"node_modules/merge-stream\": {\n+      \"version\": \"2.0.0\",\n+      \"resolved\": \"https://registry.npmjs.org/merge-stream/-/merge-stream-2.0.0.tgz\",\n+      \"integrity\": \"sha512-abv/qOcuPfk3URPfDzmZU1LKmuw8kT+0nIHvKrKgFrwifol/doWcdA4ZqsWQ8ENrFKkd67Mfpo/LovbIUsbt3w==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/merge2\": {\n+      \"version\": \"1.4.1\",\n+      \"resolved\": \"https://registry.npmjs.org/merge2/-/merge2-1.4.1.tgz\",\n+      \"integrity\": \"sha512-8q7VEgMJW4J8tcfVPy8g09NcQwZdbwFEqhe/WZkoIzjn/3TGDwtOCYtXGxA3O8tPzpczCCDgv+P2P5y00ZJOOg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">= 8\"\n+      }\n+    },\n+    \"node_modules/micromatch\": {\n+      \"version\": \"4.0.8\",\n+      \"resolved\": \"https://registry.npmjs.org/micromatch/-/micromatch-4.0.8.tgz\",\n+      \"integrity\": \"sha512-PXwfBhYu0hBCPw8Dn0E+WDYb7af3dSLVWKi3HGv84IdF4TyFoC0ysxFd0Goxw7nSv4T/PzEJQxsYsEiFCKo2BA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"braces\": \"^3.0.3\",\n+        \"picomatch\": \"^2.3.1\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=8.6\"\n+      }\n+    },\n+    \"node_modules/mimic-fn\": {\n+      \"version\": \"4.0.0\",\n+      \"resolved\": \"https://registry.npmjs.org/mimic-fn/-/mimic-fn-4.0.0.tgz\",\n+      \"integrity\": \"sha512-vqiC06CuhBTUdZH+RYl8sFrL096vA45Ok5ISO6sE/Mr1jRbGH4Csnhi8f3wKVl7x8mO4Au7Ir9D3Oyv1VYMFJw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=12\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/sponsors/sindresorhus\"\n+      }\n+    },\n+    \"node_modules/minimatch\": {\n+      \"version\": \"9.0.3\",\n+      \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-9.0.3.tgz\",\n+      \"integrity\": \"sha512-RHiac9mvaRw0x3AYRgDC1CxAP7HTcNrrECeA8YYJeWnpo+2Q5CegtZjaotWTWxDG3UeGA1coE05iH1mPjT/2mg==\",\n+      \"dev\": true,\n+      \"license\": \"ISC\",\n+      \"dependencies\": {\n+        \"brace-expansion\": \"^2.0.1\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=16 || 14 >=14.17\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/sponsors/isaacs\"\n+      }\n+    },\n+    \"node_modules/minipass\": {\n+      \"version\": \"7.1.2\",\n+      \"resolved\": \"https://registry.npmjs.org/minipass/-/minipass-7.1.2.tgz\",\n+      \"integrity\": \"sha512-qOOzS1cBTWYF4BH8fVePDBOO9iptMnGUEZwNc/cMWnTV2nVLZ7VoNWEPHkYczZA0pdoA7dl6e7FL659nX9S2aw==\",\n+      \"dev\": true,\n+      \"license\": \"ISC\",\n+      \"engines\": {\n+        \"node\": \">=16 || 14 >=14.17\"\n+      }\n+    },\n+    \"node_modules/mlly\": {\n+      \"version\": \"1.7.4\",\n+      \"resolved\": \"https://registry.npmjs.org/mlly/-/mlly-1.7.4.tgz\",\n+      \"integrity\": \"sha512-qmdSIPC4bDJXgZTCR7XosJiNKySV7O215tsPtDN9iEO/7q/76b/ijtgRu/+epFXSJhijtTCCGp3DWS549P3xKw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"acorn\": \"^8.14.0\",\n+        \"pathe\": \"^2.0.1\",\n+        \"pkg-types\": \"^1.3.0\",\n+        \"ufo\": \"^1.5.4\"\n+      }\n+    },\n+    \"node_modules/ms\": {\n+      \"version\": \"2.1.3\",\n+      \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.3.tgz\",\n+      \"integrity\": \"sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/mz\": {\n+      \"version\": \"2.7.0\",\n+      \"resolved\": \"https://registry.npmjs.org/mz/-/mz-2.7.0.tgz\",\n+      \"integrity\": \"sha512-z81GNO7nnYMEhrGh9LeymoE4+Yr0Wn5McHIZMK5cfQCl+NDX08sCZgUc9/6MHni9IWuFLm1Z3HTCXu2z9fN62Q==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"any-promise\": \"^1.0.0\",\n+        \"object-assign\": \"^4.0.1\",\n+        \"thenify-all\": \"^1.0.0\"\n+      }\n+    },\n+    \"node_modules/nanoid\": {\n+      \"version\": \"3.3.11\",\n+      \"resolved\": \"https://registry.npmjs.org/nanoid/-/nanoid-3.3.11.tgz\",\n+      \"integrity\": \"sha512-N8SpfPUnUp1bK+PMYW8qSWdl9U+wwNWI4QKxOYDy9JAro3WMX7p2OeVRF9v+347pnakNevPmiHhNmZ2HbFA76w==\",\n+      \"dev\": true,\n+      \"funding\": [\n+        {\n+          \"type\": \"github\",\n+          \"url\": \"https://github.com/sponsors/ai\"\n+        }\n+      ],\n+      \"license\": \"MIT\",\n+      \"bin\": {\n+        \"nanoid\": \"bin/nanoid.cjs\"\n+      },\n+      \"engines\": {\n+        \"node\": \"^10 || ^12 || ^13.7 || ^14 || >=15.0.1\"\n+      }\n+    },\n+    \"node_modules/natural-compare\": {\n+      \"version\": \"1.4.0\",\n+      \"resolved\": \"https://registry.npmjs.org/natural-compare/-/natural-compare-1.4.0.tgz\",\n+      \"integrity\": \"sha512-OWND8ei3VtNC9h7V60qff3SVobHr996CTwgxubgyQYEpg290h9J0buyECNNJexkFm5sOajh5G116RYA1c8ZMSw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/npm-run-path\": {\n+      \"version\": \"5.3.0\",\n+      \"resolved\": \"https://registry.npmjs.org/npm-run-path/-/npm-run-path-5.3.0.tgz\",\n+      \"integrity\": \"sha512-ppwTtiJZq0O/ai0z7yfudtBpWIoxM8yE6nHi1X47eFR2EWORqfbu6CnPlNsjeN683eT0qG6H/Pyf9fCcvjnnnQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"path-key\": \"^4.0.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \"^12.20.0 || ^14.13.1 || >=16.0.0\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/sponsors/sindresorhus\"\n+      }\n+    },\n+    \"node_modules/npm-run-path/node_modules/path-key\": {\n+      \"version\": \"4.0.0\",\n+      \"resolved\": \"https://registry.npmjs.org/path-key/-/path-key-4.0.0.tgz\",\n+      \"integrity\": \"sha512-haREypq7xkM7ErfgIyA0z+Bj4AGKlMSdlQE2jvJo6huWD1EdkKYV+G/T4nq0YEF2vgTT8kqMFKo1uHn950r4SQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=12\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/sponsors/sindresorhus\"\n+      }\n+    },\n+    \"node_modules/object-assign\": {\n+      \"version\": \"4.1.1\",\n+      \"resolved\": \"https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz\",\n+      \"integrity\": \"sha512-rJgTQnkUnH1sFw8yT6VSU3zD3sWmu6sZhIseY8VX+GRu3P6F7Fu+JNDoXfklElbLJSnc3FUQHVe4cU5hj+BcUg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=0.10.0\"\n+      }\n+    },\n+    \"node_modules/once\": {\n+      \"version\": \"1.4.0\",\n+      \"resolved\": \"https://registry.npmjs.org/once/-/once-1.4.0.tgz\",\n+      \"integrity\": \"sha512-lNaJgI+2Q5URQBkccEKHTQOPaXdUxnZZElQTZY0MFUAuaEqe1E+Nyvgdz/aIyNi6Z9MzO5dv1H8n58/GELp3+w==\",\n+      \"dev\": true,\n+      \"license\": \"ISC\",\n+      \"dependencies\": {\n+        \"wrappy\": \"1\"\n+      }\n+    },\n+    \"node_modules/onetime\": {\n+      \"version\": \"6.0.0\",\n+      \"resolved\": \"https://registry.npmjs.org/onetime/-/onetime-6.0.0.tgz\",\n+      \"integrity\": \"sha512-1FlR+gjXK7X+AsAHso35MnyN5KqGwJRi/31ft6x0M194ht7S+rWAvd7PHss9xSKMzE0asv1pyIHaJYq+BbacAQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"mimic-fn\": \"^4.0.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=12\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/sponsors/sindresorhus\"\n+      }\n+    },\n+    \"node_modules/optionator\": {\n+      \"version\": \"0.9.4\",\n+      \"resolved\": \"https://registry.npmjs.org/optionator/-/optionator-0.9.4.tgz\",\n+      \"integrity\": \"sha512-6IpQ7mKUxRcZNLIObR0hz7lxsapSSIYNZJwXPGeF0mTVqGKFIXj1DQcMoT22S3ROcLyY/rz0PWaWZ9ayWmad9g==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"deep-is\": \"^0.1.3\",\n+        \"fast-levenshtein\": \"^2.0.6\",\n+        \"levn\": \"^0.4.1\",\n+        \"prelude-ls\": \"^1.2.1\",\n+        \"type-check\": \"^0.4.0\",\n+        \"word-wrap\": \"^1.2.5\"\n+      },\n+      \"engines\": {\n+        \"node\": \">= 0.8.0\"\n+      }\n+    },\n+    \"node_modules/p-limit\": {\n+      \"version\": \"3.1.0\",\n+      \"resolved\": \"https://registry.npmjs.org/p-limit/-/p-limit-3.1.0.tgz\",\n+      \"integrity\": \"sha512-TYOanM3wGwNGsZN2cVTYPArw454xnXj5qmWF1bEoAc4+cU/ol7GVh7odevjp1FNHduHc3KZMcFduxU5Xc6uJRQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"yocto-queue\": \"^0.1.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=10\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/sponsors/sindresorhus\"\n+      }\n+    },\n+    \"node_modules/p-locate\": {\n+      \"version\": \"5.0.0\",\n+      \"resolved\": \"https://registry.npmjs.org/p-locate/-/p-locate-5.0.0.tgz\",\n+      \"integrity\": \"sha512-LaNjtRWUBY++zB5nE/NwcaoMylSPk+S+ZHNB1TzdbMJMny6dynpAGt7X/tl/QYq3TIeE6nxHppbo2LGymrG5Pw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"p-limit\": \"^3.0.2\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=10\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/sponsors/sindresorhus\"\n+      }\n+    },\n+    \"node_modules/package-json-from-dist\": {\n+      \"version\": \"1.0.1\",\n+      \"resolved\": \"https://registry.npmjs.org/package-json-from-dist/-/package-json-from-dist-1.0.1.tgz\",\n+      \"integrity\": \"sha512-UEZIS3/by4OC8vL3P2dTXRETpebLI2NiI5vIrjaD/5UtrkFX/tNbwjTSRAGC/+7CAo2pIcBaRgWmcBBHcsaCIw==\",\n+      \"dev\": true,\n+      \"license\": \"BlueOak-1.0.0\"\n+    },\n+    \"node_modules/parent-module\": {\n+      \"version\": \"1.0.1\",\n+      \"resolved\": \"https://registry.npmjs.org/parent-module/-/parent-module-1.0.1.tgz\",\n+      \"integrity\": \"sha512-GQ2EWRpQV8/o+Aw8YqtfZZPfNRWZYkbidE9k5rpl/hC3vtHHBfGm2Ifi6qWV+coDGkrUKZAxE3Lot5kcsRlh+g==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"callsites\": \"^3.0.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=6\"\n+      }\n+    },\n+    \"node_modules/path-exists\": {\n+      \"version\": \"4.0.0\",\n+      \"resolved\": \"https://registry.npmjs.org/path-exists/-/path-exists-4.0.0.tgz\",\n+      \"integrity\": \"sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      }\n+    },\n+    \"node_modules/path-is-absolute\": {\n+      \"version\": \"1.0.1\",\n+      \"resolved\": \"https://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.1.tgz\",\n+      \"integrity\": \"sha512-AVbw3UJ2e9bq64vSaS9Am0fje1Pa8pbGqTTsmXfaIiMpnr5DlDhfJOuLj9Sf95ZPVDAUerDfEk88MPmPe7UCQg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=0.10.0\"\n+      }\n+    },\n+    \"node_modules/path-key\": {\n+      \"version\": \"3.1.1\",\n+      \"resolved\": \"https://registry.npmjs.org/path-key/-/path-key-3.1.1.tgz\",\n+      \"integrity\": \"sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      }\n+    },\n+    \"node_modules/path-scurry\": {\n+      \"version\": \"1.11.1\",\n+      \"resolved\": \"https://registry.npmjs.org/path-scurry/-/path-scurry-1.11.1.tgz\",\n+      \"integrity\": \"sha512-Xa4Nw17FS9ApQFJ9umLiJS4orGjm7ZzwUrwamcGQuHSzDyth9boKDaycYdDcZDuqYATXw4HFXgaqWTctW/v1HA==\",\n+      \"dev\": true,\n+      \"license\": \"BlueOak-1.0.0\",\n+      \"dependencies\": {\n+        \"lru-cache\": \"^10.2.0\",\n+        \"minipass\": \"^5.0.0 || ^6.0.2 || ^7.0.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=16 || 14 >=14.18\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/sponsors/isaacs\"\n+      }\n+    },\n+    \"node_modules/path-type\": {\n+      \"version\": \"4.0.0\",\n+      \"resolved\": \"https://registry.npmjs.org/path-type/-/path-type-4.0.0.tgz\",\n+      \"integrity\": \"sha512-gDKb8aZMDeD/tZWs9P6+q0J9Mwkdl6xMV8TjnGP3qJVJ06bdMgkbBlLU8IdfOsIsFz2BW1rNVT3XuNEl8zPAvw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      }\n+    },\n+    \"node_modules/pathe\": {\n+      \"version\": \"2.0.3\",\n+      \"resolved\": \"https://registry.npmjs.org/pathe/-/pathe-2.0.3.tgz\",\n+      \"integrity\": \"sha512-WUjGcAqP1gQacoQe+OBJsFA7Ld4DyXuUIjZ5cc75cLHvJ7dtNsTugphxIADwspS+AraAUePCKrSVtPLFj/F88w==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/pathval\": {\n+      \"version\": \"1.1.1\",\n+      \"resolved\": \"https://registry.npmjs.org/pathval/-/pathval-1.1.1.tgz\",\n+      \"integrity\": \"sha512-Dp6zGqpTdETdR63lehJYPeIOqpiNBNtc7BpWSLrOje7UaIsE5aY92r/AunQA7rsXvet3lrJ3JnZX29UPTKXyKQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \"*\"\n+      }\n+    },\n+    \"node_modules/picocolors\": {\n+      \"version\": \"1.1.1\",\n+      \"resolved\": \"https://registry.npmjs.org/picocolors/-/picocolors-1.1.1.tgz\",\n+      \"integrity\": \"sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA==\",\n+      \"dev\": true,\n+      \"license\": \"ISC\"\n+    },\n+    \"node_modules/picomatch\": {\n+      \"version\": \"2.3.1\",\n+      \"resolved\": \"https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz\",\n+      \"integrity\": \"sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=8.6\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/sponsors/jonschlinkert\"\n+      }\n+    },\n+    \"node_modules/pirates\": {\n+      \"version\": \"4.0.7\",\n+      \"resolved\": \"https://registry.npmjs.org/pirates/-/pirates-4.0.7.tgz\",\n+      \"integrity\": \"sha512-TfySrs/5nm8fQJDcBDuUng3VOUKsd7S+zqvbOTiGXHfxX4wK31ard+hoNuvkicM/2YFzlpDgABOevKSsB4G/FA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">= 6\"\n+      }\n+    },\n+    \"node_modules/pkg-types\": {\n+      \"version\": \"1.3.1\",\n+      \"resolved\": \"https://registry.npmjs.org/pkg-types/-/pkg-types-1.3.1.tgz\",\n+      \"integrity\": \"sha512-/Jm5M4RvtBFVkKWRu2BLUTNP8/M2a+UwuAX+ae4770q1qVGtfjG+WTCupoZixokjmHiry8uI+dlY8KXYV5HVVQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"confbox\": \"^0.1.8\",\n+        \"mlly\": \"^1.7.4\",\n+        \"pathe\": \"^2.0.1\"\n+      }\n+    },\n+    \"node_modules/postcss\": {\n+      \"version\": \"8.5.6\",\n+      \"resolved\": \"https://registry.npmjs.org/postcss/-/postcss-8.5.6.tgz\",\n+      \"integrity\": \"sha512-3Ybi1tAuwAP9s0r1UQ2J4n5Y0G05bJkpUIO0/bI9MhwmD70S5aTWbXGBwxHrelT+XM1k6dM0pk+SwNkpTRN7Pg==\",\n+      \"dev\": true,\n+      \"funding\": [\n+        {\n+          \"type\": \"opencollective\",\n+          \"url\": \"https://opencollective.com/postcss/\"\n+        },\n+        {\n+          \"type\": \"tidelift\",\n+          \"url\": \"https://tidelift.com/funding/github/npm/postcss\"\n+        },\n+        {\n+          \"type\": \"github\",\n+          \"url\": \"https://github.com/sponsors/ai\"\n+        }\n+      ],\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"nanoid\": \"^3.3.11\",\n+        \"picocolors\": \"^1.1.1\",\n+        \"source-map-js\": \"^1.2.1\"\n+      },\n+      \"engines\": {\n+        \"node\": \"^10 || ^12 || >=14\"\n+      }\n+    },\n+    \"node_modules/postcss-load-config\": {\n+      \"version\": \"6.0.1\",\n+      \"resolved\": \"https://registry.npmjs.org/postcss-load-config/-/postcss-load-config-6.0.1.tgz\",\n+      \"integrity\": \"sha512-oPtTM4oerL+UXmx+93ytZVN82RrlY/wPUV8IeDxFrzIjXOLF1pN+EmKPLbubvKHT2HC20xXsCAH2Z+CKV6Oz/g==\",\n+      \"dev\": true,\n+      \"funding\": [\n+        {\n+          \"type\": \"opencollective\",\n+          \"url\": \"https://opencollective.com/postcss/\"\n+        },\n+        {\n+          \"type\": \"github\",\n+          \"url\": \"https://github.com/sponsors/ai\"\n+        }\n+      ],\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"lilconfig\": \"^3.1.1\"\n+      },\n+      \"engines\": {\n+        \"node\": \">= 18\"\n+      },\n+      \"peerDependencies\": {\n+        \"jiti\": \">=1.21.0\",\n+        \"postcss\": \">=8.0.9\",\n+        \"tsx\": \"^4.8.1\",\n+        \"yaml\": \"^2.4.2\"\n+      },\n+      \"peerDependenciesMeta\": {\n+        \"jiti\": {\n+          \"optional\": true\n+        },\n+        \"postcss\": {\n+          \"optional\": true\n+        },\n+        \"tsx\": {\n+          \"optional\": true\n+        },\n+        \"yaml\": {\n+          \"optional\": true\n+        }\n+      }\n+    },\n+    \"node_modules/prelude-ls\": {\n+      \"version\": \"1.2.1\",\n+      \"resolved\": \"https://registry.npmjs.org/prelude-ls/-/prelude-ls-1.2.1.tgz\",\n+      \"integrity\": \"sha512-vkcDPrRZo1QZLbn5RLGPpg/WmIQ65qoWWhcGKf/b5eplkkarX0m9z8ppCat4mlOqUsWpyNuYgO3VRyrYHSzX5g==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">= 0.8.0\"\n+      }\n+    },\n+    \"node_modules/pretty-format\": {\n+      \"version\": \"29.7.0\",\n+      \"resolved\": \"https://registry.npmjs.org/pretty-format/-/pretty-format-29.7.0.tgz\",\n+      \"integrity\": \"sha512-Pdlw/oPxN+aXdmM9R00JVC9WVFoCLTKJvDVLgmJ+qAffBMxsV85l/Lu7sNx4zSzPyoL2euImuEwHhOXdEgNFZQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@jest/schemas\": \"^29.6.3\",\n+        \"ansi-styles\": \"^5.0.0\",\n+        \"react-is\": \"^18.0.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n+      }\n+    },\n+    \"node_modules/pretty-format/node_modules/ansi-styles\": {\n+      \"version\": \"5.2.0\",\n+      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-5.2.0.tgz\",\n+      \"integrity\": \"sha512-Cxwpt2SfTzTtXcfOlzGEee8O+c+MmUgGrNiBcXnuWxuFJHe6a5Hz7qwhwe5OgaSYI0IJvkLqWX1ASG+cJOkEiA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=10\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/chalk/ansi-styles?sponsor=1\"\n+      }\n+    },\n+    \"node_modules/punycode\": {\n+      \"version\": \"2.3.1\",\n+      \"resolved\": \"https://registry.npmjs.org/punycode/-/punycode-2.3.1.tgz\",\n+      \"integrity\": \"sha512-vYt7UD1U9Wg6138shLtLOvdAu+8DsC/ilFtEVHcH+wydcSpNE20AfSOduf6MkRFahL5FY7X1oU7nKVZFtfq8Fg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=6\"\n+      }\n+    },\n+    \"node_modules/queue-microtask\": {\n+      \"version\": \"1.2.3\",\n+      \"resolved\": \"https://registry.npmjs.org/queue-microtask/-/queue-microtask-1.2.3.tgz\",\n+      \"integrity\": \"sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5RqkDBHA7r4hej3K9A==\",\n+      \"dev\": true,\n+      \"funding\": [\n+        {\n+          \"type\": \"github\",\n+          \"url\": \"https://github.com/sponsors/feross\"\n+        },\n+        {\n+          \"type\": \"patreon\",\n+          \"url\": \"https://www.patreon.com/feross\"\n+        },\n+        {\n+          \"type\": \"consulting\",\n+          \"url\": \"https://feross.org/support\"\n+        }\n+      ],\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/react-is\": {\n+      \"version\": \"18.3.1\",\n+      \"resolved\": \"https://registry.npmjs.org/react-is/-/react-is-18.3.1.tgz\",\n+      \"integrity\": \"sha512-/LLMVyas0ljjAtoYiPqYiL8VWXzUUdThrmU5+n20DZv+a+ClRoevUzw5JxU+Ieh5/c87ytoTBV9G1FiKfNJdmg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/readdirp\": {\n+      \"version\": \"4.1.2\",\n+      \"resolved\": \"https://registry.npmjs.org/readdirp/-/readdirp-4.1.2.tgz\",\n+      \"integrity\": \"sha512-GDhwkLfywWL2s6vEjyhri+eXmfH6j1L7JE27WhqLeYzoh/A3DBaYGEj2H/HFZCn/kMfim73FXxEJTw06WtxQwg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">= 14.18.0\"\n+      },\n+      \"funding\": {\n+        \"type\": \"individual\",\n+        \"url\": \"https://paulmillr.com/funding/\"\n+      }\n+    },\n+    \"node_modules/resolve-from\": {\n+      \"version\": \"4.0.0\",\n+      \"resolved\": \"https://registry.npmjs.org/resolve-from/-/resolve-from-4.0.0.tgz\",\n+      \"integrity\": \"sha512-pb/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp/+vgZqsCGJapvy8N3Q+4o7FwvquPJcnZ7RYy4g==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=4\"\n+      }\n+    },\n+    \"node_modules/reusify\": {\n+      \"version\": \"1.1.0\",\n+      \"resolved\": \"https://registry.npmjs.org/reusify/-/reusify-1.1.0.tgz\",\n+      \"integrity\": \"sha512-g6QUff04oZpHs0eG5p83rFLhHeV00ug/Yf9nZM6fLeUrPguBTkTQOdpAWWspMh55TZfVQDPaN3NQJfbVRAxdIw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"iojs\": \">=1.0.0\",\n+        \"node\": \">=0.10.0\"\n+      }\n+    },\n+    \"node_modules/rimraf\": {\n+      \"version\": \"3.0.2\",\n+      \"resolved\": \"https://registry.npmjs.org/rimraf/-/rimraf-3.0.2.tgz\",\n+      \"integrity\": \"sha512-JZkJMZkAGFFPP2YqXZXPbMlMBgsxzE8ILs4lMIX/2o0L9UBw9O/Y3o6wFw/i9YLapcUJWwqbi3kdxIPdC62TIA==\",\n+      \"deprecated\": \"Rimraf versions prior to v4 are no longer supported\",\n+      \"dev\": true,\n+      \"license\": \"ISC\",\n+      \"dependencies\": {\n+        \"glob\": \"^7.1.3\"\n+      },\n+      \"bin\": {\n+        \"rimraf\": \"bin.js\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/sponsors/isaacs\"\n+      }\n+    },\n+    \"node_modules/rollup\": {\n+      \"version\": \"4.45.1\",\n+      \"resolved\": \"https://registry.npmjs.org/rollup/-/rollup-4.45.1.tgz\",\n+      \"integrity\": \"sha512-4iya7Jb76fVpQyLoiVpzUrsjQ12r3dM7fIVz+4NwoYvZOShknRmiv+iu9CClZml5ZLGb0XMcYLutK6w9tgxHDw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@types/estree\": \"1.0.8\"\n+      },\n+      \"bin\": {\n+        \"rollup\": \"dist/bin/rollup\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=18.0.0\",\n+        \"npm\": \">=8.0.0\"\n+      },\n+      \"optionalDependencies\": {\n+        \"@rollup/rollup-android-arm-eabi\": \"4.45.1\",\n+        \"@rollup/rollup-android-arm64\": \"4.45.1\",\n+        \"@rollup/rollup-darwin-arm64\": \"4.45.1\",\n+        \"@rollup/rollup-darwin-x64\": \"4.45.1\",\n+        \"@rollup/rollup-freebsd-arm64\": \"4.45.1\",\n+        \"@rollup/rollup-freebsd-x64\": \"4.45.1\",\n+        \"@rollup/rollup-linux-arm-gnueabihf\": \"4.45.1\",\n+        \"@rollup/rollup-linux-arm-musleabihf\": \"4.45.1\",\n+        \"@rollup/rollup-linux-arm64-gnu\": \"4.45.1\",\n+        \"@rollup/rollup-linux-arm64-musl\": \"4.45.1\",\n+        \"@rollup/rollup-linux-loongarch64-gnu\": \"4.45.1\",\n+        \"@rollup/rollup-linux-powerpc64le-gnu\": \"4.45.1\",\n+        \"@rollup/rollup-linux-riscv64-gnu\": \"4.45.1\",\n+        \"@rollup/rollup-linux-riscv64-musl\": \"4.45.1\",\n+        \"@rollup/rollup-linux-s390x-gnu\": \"4.45.1\",\n+        \"@rollup/rollup-linux-x64-gnu\": \"4.45.1\",\n+        \"@rollup/rollup-linux-x64-musl\": \"4.45.1\",\n+        \"@rollup/rollup-win32-arm64-msvc\": \"4.45.1\",\n+        \"@rollup/rollup-win32-ia32-msvc\": \"4.45.1\",\n+        \"@rollup/rollup-win32-x64-msvc\": \"4.45.1\",\n+        \"fsevents\": \"~2.3.2\"\n+      }\n+    },\n+    \"node_modules/run-parallel\": {\n+      \"version\": \"1.2.0\",\n+      \"resolved\": \"https://registry.npmjs.org/run-parallel/-/run-parallel-1.2.0.tgz\",\n+      \"integrity\": \"sha512-5l4VyZR86LZ/lDxZTR6jqL8AFE2S0IFLMP26AbjsLVADxHdhB/c0GUsH+y39UfCi3dzz8OlQuPmnaJOMoDHQBA==\",\n+      \"dev\": true,\n+      \"funding\": [\n+        {\n+          \"type\": \"github\",\n+          \"url\": \"https://github.com/sponsors/feross\"\n+        },\n+        {\n+          \"type\": \"patreon\",\n+          \"url\": \"https://www.patreon.com/feross\"\n+        },\n+        {\n+          \"type\": \"consulting\",\n+          \"url\": \"https://feross.org/support\"\n+        }\n+      ],\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"queue-microtask\": \"^1.2.2\"\n+      }\n+    },\n+    \"node_modules/semver\": {\n+      \"version\": \"7.7.2\",\n+      \"resolved\": \"https://registry.npmjs.org/semver/-/semver-7.7.2.tgz\",\n+      \"integrity\": \"sha512-RF0Fw+rO5AMf9MAyaRXI4AV0Ulj5lMHqVxxdSgiVbixSCXoEmmX/jk0CuJw4+3SqroYO9VoUh+HcuJivvtJemA==\",\n+      \"dev\": true,\n+      \"license\": \"ISC\",\n+      \"bin\": {\n+        \"semver\": \"bin/semver.js\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=10\"\n+      }\n+    },\n+    \"node_modules/shebang-command\": {\n+      \"version\": \"2.0.0\",\n+      \"resolved\": \"https://registry.npmjs.org/shebang-command/-/shebang-command-2.0.0.tgz\",\n+      \"integrity\": \"sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"shebang-regex\": \"^3.0.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      }\n+    },\n+    \"node_modules/shebang-regex\": {\n+      \"version\": \"3.0.0\",\n+      \"resolved\": \"https://registry.npmjs.org/shebang-regex/-/shebang-regex-3.0.0.tgz\",\n+      \"integrity\": \"sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      }\n+    },\n+    \"node_modules/siginfo\": {\n+      \"version\": \"2.0.0\",\n+      \"resolved\": \"https://registry.npmjs.org/siginfo/-/siginfo-2.0.0.tgz\",\n+      \"integrity\": \"sha512-ybx0WO1/8bSBLEWXZvEd7gMW3Sn3JFlW3TvX1nREbDLRNQNaeNN8WK0meBwPdAaOI7TtRRRJn/Es1zhrrCHu7g==\",\n+      \"dev\": true,\n+      \"license\": \"ISC\"\n+    },\n+    \"node_modules/signal-exit\": {\n+      \"version\": \"4.1.0\",\n+      \"resolved\": \"https://registry.npmjs.org/signal-exit/-/signal-exit-4.1.0.tgz\",\n+      \"integrity\": \"sha512-bzyZ1e88w9O1iNJbKnOlvYTrWPDl46O1bG0D3XInv+9tkPrxrN8jUUTiFlDkkmKWgn1M6CfIA13SuGqOa9Korw==\",\n+      \"dev\": true,\n+      \"license\": \"ISC\",\n+      \"engines\": {\n+        \"node\": \">=14\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/sponsors/isaacs\"\n+      }\n+    },\n+    \"node_modules/slash\": {\n+      \"version\": \"3.0.0\",\n+      \"resolved\": \"https://registry.npmjs.org/slash/-/slash-3.0.0.tgz\",\n+      \"integrity\": \"sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz0V1G85A4MyAdDMi2Q==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      }\n+    },\n+    \"node_modules/source-map\": {\n+      \"version\": \"0.8.0-beta.0\",\n+      \"resolved\": \"https://registry.npmjs.org/source-map/-/source-map-0.8.0-beta.0.tgz\",\n+      \"integrity\": \"sha512-2ymg6oRBpebeZi9UUNsgQ89bhx01TcTkmNTGnNO88imTmbSgy4nfujrgVEFKWpMTEGA11EDkTt7mqObTPdigIA==\",\n+      \"dev\": true,\n+      \"license\": \"BSD-3-Clause\",\n+      \"dependencies\": {\n+        \"whatwg-url\": \"^7.0.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">= 8\"\n+      }\n+    },\n+    \"node_modules/source-map-js\": {\n+      \"version\": \"1.2.1\",\n+      \"resolved\": \"https://registry.npmjs.org/source-map-js/-/source-map-js-1.2.1.tgz\",\n+      \"integrity\": \"sha512-UXWMKhLOwVKb728IUtQPXxfYU+usdybtUrK/8uGE8CQMvrhOpwvzDBwj0QhSL7MQc7vIsISBG8VQ8+IDQxpfQA==\",\n+      \"dev\": true,\n+      \"license\": \"BSD-3-Clause\",\n+      \"engines\": {\n+        \"node\": \">=0.10.0\"\n+      }\n+    },\n+    \"node_modules/stackback\": {\n+      \"version\": \"0.0.2\",\n+      \"resolved\": \"https://registry.npmjs.org/stackback/-/stackback-0.0.2.tgz\",\n+      \"integrity\": \"sha512-1XMJE5fQo1jGH6Y/7ebnwPOBEkIEnT4QF32d5R1+VXdXveM0IBMJt8zfaxX1P3QhVwrYe+576+jkANtSS2mBbw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/std-env\": {\n+      \"version\": \"3.9.0\",\n+      \"resolved\": \"https://registry.npmjs.org/std-env/-/std-env-3.9.0.tgz\",\n+      \"integrity\": \"sha512-UGvjygr6F6tpH7o2qyqR6QYpwraIjKSdtzyBdyytFOHmPZY917kwdwLG0RbOjWOnKmnm3PeHjaoLLMie7kPLQw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/string-width\": {\n+      \"version\": \"5.1.2\",\n+      \"resolved\": \"https://registry.npmjs.org/string-width/-/string-width-5.1.2.tgz\",\n+      \"integrity\": \"sha512-HnLOCR3vjcY8beoNLtcjZ5/nxn2afmME6lhrDrebokqMap+XbeW8n9TXpPDOqdGK5qcI3oT0GKTW6wC7EMiVqA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"eastasianwidth\": \"^0.2.0\",\n+        \"emoji-regex\": \"^9.2.2\",\n+        \"strip-ansi\": \"^7.0.1\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=12\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/sponsors/sindresorhus\"\n+      }\n+    },\n+    \"node_modules/string-width-cjs\": {\n+      \"name\": \"string-width\",\n+      \"version\": \"4.2.3\",\n+      \"resolved\": \"https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz\",\n+      \"integrity\": \"sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"emoji-regex\": \"^8.0.0\",\n+        \"is-fullwidth-code-point\": \"^3.0.0\",\n+        \"strip-ansi\": \"^6.0.1\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      }\n+    },\n+    \"node_modules/string-width-cjs/node_modules/emoji-regex\": {\n+      \"version\": \"8.0.0\",\n+      \"resolved\": \"https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz\",\n+      \"integrity\": \"sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/string-width/node_modules/ansi-regex\": {\n+      \"version\": \"6.1.0\",\n+      \"resolved\": \"https://registry.npmjs.org/ansi-regex/-/ansi-regex-6.1.0.tgz\",\n+      \"integrity\": \"sha512-7HSX4QQb4CspciLpVFwyRe79O3xsIZDDLER21kERQ71oaPodF8jL725AgJMFAYbooIqolJoRLuM81SpeUkpkvA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=12\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/chalk/ansi-regex?sponsor=1\"\n+      }\n+    },\n+    \"node_modules/string-width/node_modules/strip-ansi\": {\n+      \"version\": \"7.1.0\",\n+      \"resolved\": \"https://registry.npmjs.org/strip-ansi/-/strip-ansi-7.1.0.tgz\",\n+      \"integrity\": \"sha512-iq6eVVI64nQQTRYq2KtEg2d2uU7LElhTJwsH4YzIHZshxlgZms/wIc4VoDQTlG/IvVIrBKG06CrZnp0qv7hkcQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"ansi-regex\": \"^6.0.1\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=12\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/chalk/strip-ansi?sponsor=1\"\n+      }\n+    },\n+    \"node_modules/strip-ansi\": {\n+      \"version\": \"6.0.1\",\n+      \"resolved\": \"https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz\",\n+      \"integrity\": \"sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"ansi-regex\": \"^5.0.1\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      }\n+    },\n+    \"node_modules/strip-ansi-cjs\": {\n+      \"name\": \"strip-ansi\",\n+      \"version\": \"6.0.1\",\n+      \"resolved\": \"https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz\",\n+      \"integrity\": \"sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"ansi-regex\": \"^5.0.1\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      }\n+    },\n+    \"node_modules/strip-final-newline\": {\n+      \"version\": \"3.0.0\",\n+      \"resolved\": \"https://registry.npmjs.org/strip-final-newline/-/strip-final-newline-3.0.0.tgz\",\n+      \"integrity\": \"sha512-dOESqjYr96iWYylGObzd39EuNTa5VJxyvVAEm5Jnh7KGo75V43Hk1odPQkNDyXNmUR6k+gEiDVXnjB8HJ3crXw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=12\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/sponsors/sindresorhus\"\n+      }\n+    },\n+    \"node_modules/strip-json-comments\": {\n+      \"version\": \"3.1.1\",\n+      \"resolved\": \"https://registry.npmjs.org/strip-json-comments/-/strip-json-comments-3.1.1.tgz\",\n+      \"integrity\": \"sha512-6fPc+R4ihwqP6N/aIv2f1gMH8lOVtWQHoqC4yK6oSDVVocumAsfCqjkXnqiYMhmMwS/mEHLp7Vehlt3ql6lEig==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/sponsors/sindresorhus\"\n+      }\n+    },\n+    \"node_modules/strip-literal\": {\n+      \"version\": \"2.1.1\",\n+      \"resolved\": \"https://registry.npmjs.org/strip-literal/-/strip-literal-2.1.1.tgz\",\n+      \"integrity\": \"sha512-631UJ6O00eNGfMiWG78ck80dfBab8X6IVFB51jZK5Icd7XAs60Z5y7QdSd/wGIklnWvRbUNloVzhOKKmutxQ6Q==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"js-tokens\": \"^9.0.1\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/sponsors/antfu\"\n+      }\n+    },\n+    \"node_modules/sucrase\": {\n+      \"version\": \"3.35.0\",\n+      \"resolved\": \"https://registry.npmjs.org/sucrase/-/sucrase-3.35.0.tgz\",\n+      \"integrity\": \"sha512-8EbVDiu9iN/nESwxeSxDKe0dunta1GOlHufmSSXxMD2z2/tMZpDMpvXQGsc+ajGo8y2uYUmixaSRUc/QPoQ0GA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@jridgewell/gen-mapping\": \"^0.3.2\",\n+        \"commander\": \"^4.0.0\",\n+        \"glob\": \"^10.3.10\",\n+        \"lines-and-columns\": \"^1.1.6\",\n+        \"mz\": \"^2.7.0\",\n+        \"pirates\": \"^4.0.1\",\n+        \"ts-interface-checker\": \"^0.1.9\"\n+      },\n+      \"bin\": {\n+        \"sucrase\": \"bin/sucrase\",\n+        \"sucrase-node\": \"bin/sucrase-node\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=16 || 14 >=14.17\"\n+      }\n+    },\n+    \"node_modules/sucrase/node_modules/glob\": {\n+      \"version\": \"10.4.5\",\n+      \"resolved\": \"https://registry.npmjs.org/glob/-/glob-10.4.5.tgz\",\n+      \"integrity\": \"sha512-7Bv8RF0k6xjo7d4A/PxYLbUCfb6c+Vpd2/mB2yRDlew7Jb5hEXiCD9ibfO7wpk8i4sevK6DFny9h7EYbM3/sHg==\",\n+      \"dev\": true,\n+      \"license\": \"ISC\",\n+      \"dependencies\": {\n+        \"foreground-child\": \"^3.1.0\",\n+        \"jackspeak\": \"^3.1.2\",\n+        \"minimatch\": \"^9.0.4\",\n+        \"minipass\": \"^7.1.2\",\n+        \"package-json-from-dist\": \"^1.0.0\",\n+        \"path-scurry\": \"^1.11.1\"\n+      },\n+      \"bin\": {\n+        \"glob\": \"dist/esm/bin.mjs\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/sponsors/isaacs\"\n+      }\n+    },\n+    \"node_modules/sucrase/node_modules/minimatch\": {\n+      \"version\": \"9.0.5\",\n+      \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-9.0.5.tgz\",\n+      \"integrity\": \"sha512-G6T0ZX48xgozx7587koeX9Ys2NYy6Gmv//P89sEte9V9whIapMNF4idKxnW2QtCcLiTWlb/wfCabAtAFWhhBow==\",\n+      \"dev\": true,\n+      \"license\": \"ISC\",\n+      \"dependencies\": {\n+        \"brace-expansion\": \"^2.0.1\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=16 || 14 >=14.17\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/sponsors/isaacs\"\n+      }\n+    },\n+    \"node_modules/supports-color\": {\n+      \"version\": \"7.2.0\",\n+      \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz\",\n+      \"integrity\": \"sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"has-flag\": \"^4.0.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      }\n+    },\n+    \"node_modules/text-table\": {\n+      \"version\": \"0.2.0\",\n+      \"resolved\": \"https://registry.npmjs.org/text-table/-/text-table-0.2.0.tgz\",\n+      \"integrity\": \"sha512-N+8UisAXDGk8PFXP4HAzVR9nbfmVJ3zYLAWiTIoqC5v5isinhr+r5uaO8+7r3BMfuNIufIsA7RdpVgacC2cSpw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/thenify\": {\n+      \"version\": \"3.3.1\",\n+      \"resolved\": \"https://registry.npmjs.org/thenify/-/thenify-3.3.1.tgz\",\n+      \"integrity\": \"sha512-RVZSIV5IG10Hk3enotrhvz0T9em6cyHBLkH/YAZuKqd8hRkKhSfCGIcP2KUY0EPxndzANBmNllzWPwak+bheSw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"any-promise\": \"^1.0.0\"\n+      }\n+    },\n+    \"node_modules/thenify-all\": {\n+      \"version\": \"1.6.0\",\n+      \"resolved\": \"https://registry.npmjs.org/thenify-all/-/thenify-all-1.6.0.tgz\",\n+      \"integrity\": \"sha512-RNxQH/qI8/t3thXJDwcstUO4zeqo64+Uy/+sNVRBx4Xn2OX+OZ9oP+iJnNFqplFra2ZUVeKCSa2oVWi3T4uVmA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"thenify\": \">= 3.1.0 < 4\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=0.8\"\n+      }\n+    },\n+    \"node_modules/tinybench\": {\n+      \"version\": \"2.9.0\",\n+      \"resolved\": \"https://registry.npmjs.org/tinybench/-/tinybench-2.9.0.tgz\",\n+      \"integrity\": \"sha512-0+DUvqWMValLmha6lr4kD8iAMK1HzV0/aKnCtWb9v9641TnP/MFb7Pc2bxoxQjTXAErryXVgUOfv2YqNllqGeg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/tinyexec\": {\n+      \"version\": \"0.3.2\",\n+      \"resolved\": \"https://registry.npmjs.org/tinyexec/-/tinyexec-0.3.2.tgz\",\n+      \"integrity\": \"sha512-KQQR9yN7R5+OSwaK0XQoj22pwHoTlgYqmUscPYoknOoWCWfj/5/ABTMRi69FrKU5ffPVh5QcFikpWJI/P1ocHA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/tinyglobby\": {\n+      \"version\": \"0.2.14\",\n+      \"resolved\": \"https://registry.npmjs.org/tinyglobby/-/tinyglobby-0.2.14.tgz\",\n+      \"integrity\": \"sha512-tX5e7OM1HnYr2+a2C/4V0htOcSQcoSTH9KgJnVvNm5zm/cyEWKJ7j7YutsH9CxMdtOkkLFy2AHrMci9IM8IPZQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"fdir\": \"^6.4.4\",\n+        \"picomatch\": \"^4.0.2\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=12.0.0\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/sponsors/SuperchupuDev\"\n+      }\n+    },\n+    \"node_modules/tinyglobby/node_modules/fdir\": {\n+      \"version\": \"6.4.6\",\n+      \"resolved\": \"https://registry.npmjs.org/fdir/-/fdir-6.4.6.tgz\",\n+      \"integrity\": \"sha512-hiFoqpyZcfNm1yc4u8oWCf9A2c4D3QjCrks3zmoVKVxpQRzmPNar1hUJcBG2RQHvEVGDN+Jm81ZheVLAQMK6+w==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"peerDependencies\": {\n+        \"picomatch\": \"^3 || ^4\"\n+      },\n+      \"peerDependenciesMeta\": {\n+        \"picomatch\": {\n+          \"optional\": true\n+        }\n+      }\n+    },\n+    \"node_modules/tinyglobby/node_modules/picomatch\": {\n+      \"version\": \"4.0.3\",\n+      \"resolved\": \"https://registry.npmjs.org/picomatch/-/picomatch-4.0.3.tgz\",\n+      \"integrity\": \"sha512-5gTmgEY/sqK6gFXLIsQNH19lWb4ebPDLA4SdLP7dsWkIXHWlG66oPuVvXSGFPppYZz8ZDZq0dYYrbHfBCVUb1Q==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=12\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/sponsors/jonschlinkert\"\n+      }\n+    },\n+    \"node_modules/tinypool\": {\n+      \"version\": \"0.8.4\",\n+      \"resolved\": \"https://registry.npmjs.org/tinypool/-/tinypool-0.8.4.tgz\",\n+      \"integrity\": \"sha512-i11VH5gS6IFeLY3gMBQ00/MmLncVP7JLXOw1vlgkytLmJK7QnEr7NXf0LBdxfmNPAeyetukOk0bOYrJrFGjYJQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=14.0.0\"\n+      }\n+    },\n+    \"node_modules/tinyspy\": {\n+      \"version\": \"2.2.1\",\n+      \"resolved\": \"https://registry.npmjs.org/tinyspy/-/tinyspy-2.2.1.tgz\",\n+      \"integrity\": \"sha512-KYad6Vy5VDWV4GH3fjpseMQ/XU2BhIYP7Vzd0LG44qRWm/Yt2WCOTicFdvmgo6gWaqooMQCawTtILVQJupKu7A==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=14.0.0\"\n+      }\n+    },\n+    \"node_modules/to-regex-range\": {\n+      \"version\": \"5.0.1\",\n+      \"resolved\": \"https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz\",\n+      \"integrity\": \"sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"is-number\": \"^7.0.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=8.0\"\n+      }\n+    },\n+    \"node_modules/tr46\": {\n+      \"version\": \"1.0.1\",\n+      \"resolved\": \"https://registry.npmjs.org/tr46/-/tr46-1.0.1.tgz\",\n+      \"integrity\": \"sha512-dTpowEjclQ7Kgx5SdBkqRzVhERQXov8/l9Ft9dVM9fmg0W0KQSVaXX9T4i6twCPNtYiZM53lpSSUAwJbFPOHxA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"punycode\": \"^2.1.0\"\n+      }\n+    },\n+    \"node_modules/tree-kill\": {\n+      \"version\": \"1.2.2\",\n+      \"resolved\": \"https://registry.npmjs.org/tree-kill/-/tree-kill-1.2.2.tgz\",\n+      \"integrity\": \"sha512-L0Orpi8qGpRG//Nd+H90vFB+3iHnue1zSSGmNOOCh1GLJ7rUKVwV2HvijphGQS2UmhUZewS9VgvxYIdgr+fG1A==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"bin\": {\n+        \"tree-kill\": \"cli.js\"\n+      }\n+    },\n+    \"node_modules/ts-api-utils\": {\n+      \"version\": \"1.4.3\",\n+      \"resolved\": \"https://registry.npmjs.org/ts-api-utils/-/ts-api-utils-1.4.3.tgz\",\n+      \"integrity\": \"sha512-i3eMG77UTMD0hZhgRS562pv83RC6ukSAC2GMNWc+9dieh/+jDM5u5YG+NHX6VNDRHQcHwmsTHctP9LhbC3WxVw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=16\"\n+      },\n+      \"peerDependencies\": {\n+        \"typescript\": \">=4.2.0\"\n+      }\n+    },\n+    \"node_modules/ts-interface-checker\": {\n+      \"version\": \"0.1.13\",\n+      \"resolved\": \"https://registry.npmjs.org/ts-interface-checker/-/ts-interface-checker-0.1.13.tgz\",\n+      \"integrity\": \"sha512-Y/arvbn+rrz3JCKl9C4kVNfTfSm2/mEp5FSz5EsZSANGPSlQrpRI5M4PKF+mJnE52jOO90PnPSc3Ur3bTQw0gA==\",\n+      \"dev\": true,\n+      \"license\": \"Apache-2.0\"\n+    },\n+    \"node_modules/tsup\": {\n+      \"version\": \"8.5.0\",\n+      \"resolved\": \"https://registry.npmjs.org/tsup/-/tsup-8.5.0.tgz\",\n+      \"integrity\": \"sha512-VmBp77lWNQq6PfuMqCHD3xWl22vEoWsKajkF8t+yMBawlUS8JzEI+vOVMeuNZIuMML8qXRizFKi9oD5glKQVcQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"bundle-require\": \"^5.1.0\",\n+        \"cac\": \"^6.7.14\",\n+        \"chokidar\": \"^4.0.3\",\n+        \"consola\": \"^3.4.0\",\n+        \"debug\": \"^4.4.0\",\n+        \"esbuild\": \"^0.25.0\",\n+        \"fix-dts-default-cjs-exports\": \"^1.0.0\",\n+        \"joycon\": \"^3.1.1\",\n+        \"picocolors\": \"^1.1.1\",\n+        \"postcss-load-config\": \"^6.0.1\",\n+        \"resolve-from\": \"^5.0.0\",\n+        \"rollup\": \"^4.34.8\",\n+        \"source-map\": \"0.8.0-beta.0\",\n+        \"sucrase\": \"^3.35.0\",\n+        \"tinyexec\": \"^0.3.2\",\n+        \"tinyglobby\": \"^0.2.11\",\n+        \"tree-kill\": \"^1.2.2\"\n+      },\n+      \"bin\": {\n+        \"tsup\": \"dist/cli-default.js\",\n+        \"tsup-node\": \"dist/cli-node.js\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=18\"\n+      },\n+      \"peerDependencies\": {\n+        \"@microsoft/api-extractor\": \"^7.36.0\",\n+        \"@swc/core\": \"^1\",\n+        \"postcss\": \"^8.4.12\",\n+        \"typescript\": \">=4.5.0\"\n+      },\n+      \"peerDependenciesMeta\": {\n+        \"@microsoft/api-extractor\": {\n+          \"optional\": true\n+        },\n+        \"@swc/core\": {\n+          \"optional\": true\n+        },\n+        \"postcss\": {\n+          \"optional\": true\n+        },\n+        \"typescript\": {\n+          \"optional\": true\n+        }\n+      }\n+    },\n+    \"node_modules/tsup/node_modules/resolve-from\": {\n+      \"version\": \"5.0.0\",\n+      \"resolved\": \"https://registry.npmjs.org/resolve-from/-/resolve-from-5.0.0.tgz\",\n+      \"integrity\": \"sha512-qYg9KP24dD5qka9J47d0aVky0N+b4fTU89LN9iDnjB5waksiC49rvMB0PrUJQGoTmH50XPiqOvAjDfaijGxYZw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      }\n+    },\n+    \"node_modules/type-check\": {\n+      \"version\": \"0.4.0\",\n+      \"resolved\": \"https://registry.npmjs.org/type-check/-/type-check-0.4.0.tgz\",\n+      \"integrity\": \"sha512-XleUoc9uwGXqjWwXaUTZAmzMcFZ5858QA2vvx1Ur5xIcixXIP+8LnFDgRplU30us6teqdlskFfu+ae4K79Ooew==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"prelude-ls\": \"^1.2.1\"\n+      },\n+      \"engines\": {\n+        \"node\": \">= 0.8.0\"\n+      }\n+    },\n+    \"node_modules/type-detect\": {\n+      \"version\": \"4.1.0\",\n+      \"resolved\": \"https://registry.npmjs.org/type-detect/-/type-detect-4.1.0.tgz\",\n+      \"integrity\": \"sha512-Acylog8/luQ8L7il+geoSxhEkazvkslg7PSNKOX59mbB9cOveP5aq9h74Y7YU8yDpJwetzQQrfIwtf4Wp4LKcw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=4\"\n+      }\n+    },\n+    \"node_modules/type-fest\": {\n+      \"version\": \"0.20.2\",\n+      \"resolved\": \"https://registry.npmjs.org/type-fest/-/type-fest-0.20.2.tgz\",\n+      \"integrity\": \"sha512-Ne+eE4r0/iWnpAxD852z3A+N0Bt5RN//NjJwRd2VFHEmrywxf5vsZlh4R6lixl6B+wz/8d+maTSAkN1FIkI3LQ==\",\n+      \"dev\": true,\n+      \"license\": \"(MIT OR CC0-1.0)\",\n+      \"engines\": {\n+        \"node\": \">=10\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/sponsors/sindresorhus\"\n+      }\n+    },\n+    \"node_modules/typescript\": {\n+      \"version\": \"5.8.3\",\n+      \"resolved\": \"https://registry.npmjs.org/typescript/-/typescript-5.8.3.tgz\",\n+      \"integrity\": \"sha512-p1diW6TqL9L07nNxvRMM7hMMw4c5XOo/1ibL4aAIGmSAt9slTE1Xgw5KWuof2uTOvCg9BY7ZRi+GaF+7sfgPeQ==\",\n+      \"dev\": true,\n+      \"license\": \"Apache-2.0\",\n+      \"bin\": {\n+        \"tsc\": \"bin/tsc\",\n+        \"tsserver\": \"bin/tsserver\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=14.17\"\n+      }\n+    },\n+    \"node_modules/ufo\": {\n+      \"version\": \"1.6.1\",\n+      \"resolved\": \"https://registry.npmjs.org/ufo/-/ufo-1.6.1.tgz\",\n+      \"integrity\": \"sha512-9a4/uxlTWJ4+a5i0ooc1rU7C7YOw3wT+UGqdeNNHWnOF9qcMBgLRS+4IYUqbczewFx4mLEig6gawh7X6mFlEkA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/undici-types\": {\n+      \"version\": \"6.21.0\",\n+      \"resolved\": \"https://registry.npmjs.org/undici-types/-/undici-types-6.21.0.tgz\",\n+      \"integrity\": \"sha512-iwDZqg0QAGrg9Rav5H4n0M64c3mkR59cJ6wQp+7C4nI0gsmExaedaYLNO44eT4AtBBwjbTiGPMlt2Md0T9H9JQ==\",\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/uri-js\": {\n+      \"version\": \"4.4.1\",\n+      \"resolved\": \"https://registry.npmjs.org/uri-js/-/uri-js-4.4.1.tgz\",\n+      \"integrity\": \"sha512-7rKUyy33Q1yc98pQ1DAmLtwX109F7TIfWlW1Ydo8Wl1ii1SeHieeh0HHfPeL2fMXK6z0s8ecKs9frCuLJvndBg==\",\n+      \"dev\": true,\n+      \"license\": \"BSD-2-Clause\",\n+      \"dependencies\": {\n+        \"punycode\": \"^2.1.0\"\n+      }\n+    },\n+    \"node_modules/vite\": {\n+      \"version\": \"5.4.19\",\n+      \"resolved\": \"https://registry.npmjs.org/vite/-/vite-5.4.19.tgz\",\n+      \"integrity\": \"sha512-qO3aKv3HoQC8QKiNSTuUM1l9o/XX3+c+VTgLHbJWHZGeTPVAg2XwazI9UWzoxjIJCGCV2zU60uqMzjeLZuULqA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"esbuild\": \"^0.21.3\",\n+        \"postcss\": \"^8.4.43\",\n+        \"rollup\": \"^4.20.0\"\n+      },\n+      \"bin\": {\n+        \"vite\": \"bin/vite.js\"\n+      },\n+      \"engines\": {\n+        \"node\": \"^18.0.0 || >=20.0.0\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/vitejs/vite?sponsor=1\"\n+      },\n+      \"optionalDependencies\": {\n+        \"fsevents\": \"~2.3.3\"\n+      },\n+      \"peerDependencies\": {\n+        \"@types/node\": \"^18.0.0 || >=20.0.0\",\n+        \"less\": \"*\",\n+        \"lightningcss\": \"^1.21.0\",\n+        \"sass\": \"*\",\n+        \"sass-embedded\": \"*\",\n+        \"stylus\": \"*\",\n+        \"sugarss\": \"*\",\n+        \"terser\": \"^5.4.0\"\n+      },\n+      \"peerDependenciesMeta\": {\n+        \"@types/node\": {\n+          \"optional\": true\n+        },\n+        \"less\": {\n+          \"optional\": true\n+        },\n+        \"lightningcss\": {\n+          \"optional\": true\n+        },\n+        \"sass\": {\n+          \"optional\": true\n+        },\n+        \"sass-embedded\": {\n+          \"optional\": true\n+        },\n+        \"stylus\": {\n+          \"optional\": true\n+        },\n+        \"sugarss\": {\n+          \"optional\": true\n+        },\n+        \"terser\": {\n+          \"optional\": true\n+        }\n+      }\n+    },\n+    \"node_modules/vite-node\": {\n+      \"version\": \"1.6.1\",\n+      \"resolved\": \"https://registry.npmjs.org/vite-node/-/vite-node-1.6.1.tgz\",\n+      \"integrity\": \"sha512-YAXkfvGtuTzwWbDSACdJSg4A4DZiAqckWe90Zapc/sEX3XvHcw1NdurM/6od8J207tSDqNbSsgdCacBgvJKFuA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"cac\": \"^6.7.14\",\n+        \"debug\": \"^4.3.4\",\n+        \"pathe\": \"^1.1.1\",\n+        \"picocolors\": \"^1.0.0\",\n+        \"vite\": \"^5.0.0\"\n+      },\n+      \"bin\": {\n+        \"vite-node\": \"vite-node.mjs\"\n+      },\n+      \"engines\": {\n+        \"node\": \"^18.0.0 || >=20.0.0\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://opencollective.com/vitest\"\n+      }\n+    },\n+    \"node_modules/vite-node/node_modules/pathe\": {\n+      \"version\": \"1.1.2\",\n+      \"resolved\": \"https://registry.npmjs.org/pathe/-/pathe-1.1.2.tgz\",\n+      \"integrity\": \"sha512-whLdWMYL2TwI08hn8/ZqAbrVemu0LNaNNJZX73O6qaIdCTfXutsLhMkjdENX0qhsQ9uIimo4/aQOmXkoon2nDQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/vite/node_modules/@esbuild/aix-ppc64\": {\n+      \"version\": \"0.21.5\",\n+      \"resolved\": \"https://registry.npmjs.org/@esbuild/aix-ppc64/-/aix-ppc64-0.21.5.tgz\",\n+      \"integrity\": \"sha512-1SDgH6ZSPTlggy1yI6+Dbkiz8xzpHJEVAlF/AM1tHPLsf5STom9rwtjE4hKAF20FfXXNTFqEYXyJNWh1GiZedQ==\",\n+      \"cpu\": [\n+        \"ppc64\"\n+      ],\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"optional\": true,\n+      \"os\": [\n+        \"aix\"\n+      ],\n+      \"engines\": {\n+        \"node\": \">=12\"\n+      }\n+    },\n+    \"node_modules/vite/node_modules/@esbuild/android-arm\": {\n+      \"version\": \"0.21.5\",\n+      \"resolved\": \"https://registry.npmjs.org/@esbuild/android-arm/-/android-arm-0.21.5.tgz\",\n+      \"integrity\": \"sha512-vCPvzSjpPHEi1siZdlvAlsPxXl7WbOVUBBAowWug4rJHb68Ox8KualB+1ocNvT5fjv6wpkX6o/iEpbDrf68zcg==\",\n+      \"cpu\": [\n+        \"arm\"\n+      ],\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"optional\": true,\n+      \"os\": [\n+        \"android\"\n+      ],\n+      \"engines\": {\n+        \"node\": \">=12\"\n+      }\n+    },\n+    \"node_modules/vite/node_modules/@esbuild/android-arm64\": {\n+      \"version\": \"0.21.5\",\n+      \"resolved\": \"https://registry.npmjs.org/@esbuild/android-arm64/-/android-arm64-0.21.5.tgz\",\n+      \"integrity\": \"sha512-c0uX9VAUBQ7dTDCjq+wdyGLowMdtR/GoC2U5IYk/7D1H1JYC0qseD7+11iMP2mRLN9RcCMRcjC4YMclCzGwS/A==\",\n+      \"cpu\": [\n+        \"arm64\"\n+      ],\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"optional\": true,\n+      \"os\": [\n+        \"android\"\n+      ],\n+      \"engines\": {\n+        \"node\": \">=12\"\n+      }\n+    },\n+    \"node_modules/vite/node_modules/@esbuild/android-x64\": {\n+      \"version\": \"0.21.5\",\n+      \"resolved\": \"https://registry.npmjs.org/@esbuild/android-x64/-/android-x64-0.21.5.tgz\",\n+      \"integrity\": \"sha512-D7aPRUUNHRBwHxzxRvp856rjUHRFW1SdQATKXH2hqA0kAZb1hKmi02OpYRacl0TxIGz/ZmXWlbZgjwWYaCakTA==\",\n+      \"cpu\": [\n+        \"x64\"\n+      ],\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"optional\": true,\n+      \"os\": [\n+        \"android\"\n+      ],\n+      \"engines\": {\n+        \"node\": \">=12\"\n+      }\n+    },\n+    \"node_modules/vite/node_modules/@esbuild/darwin-arm64\": {\n+      \"version\": \"0.21.5\",\n+      \"resolved\": \"https://registry.npmjs.org/@esbuild/darwin-arm64/-/darwin-arm64-0.21.5.tgz\",\n+      \"integrity\": \"sha512-DwqXqZyuk5AiWWf3UfLiRDJ5EDd49zg6O9wclZ7kUMv2WRFr4HKjXp/5t8JZ11QbQfUS6/cRCKGwYhtNAY88kQ==\",\n+      \"cpu\": [\n+        \"arm64\"\n+      ],\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"optional\": true,\n+      \"os\": [\n+        \"darwin\"\n+      ],\n+      \"engines\": {\n+        \"node\": \">=12\"\n+      }\n+    },\n+    \"node_modules/vite/node_modules/@esbuild/darwin-x64\": {\n+      \"version\": \"0.21.5\",\n+      \"resolved\": \"https://registry.npmjs.org/@esbuild/darwin-x64/-/darwin-x64-0.21.5.tgz\",\n+      \"integrity\": \"sha512-se/JjF8NlmKVG4kNIuyWMV/22ZaerB+qaSi5MdrXtd6R08kvs2qCN4C09miupktDitvh8jRFflwGFBQcxZRjbw==\",\n+      \"cpu\": [\n+        \"x64\"\n+      ],\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"optional\": true,\n+      \"os\": [\n+        \"darwin\"\n+      ],\n+      \"engines\": {\n+        \"node\": \">=12\"\n+      }\n+    },\n+    \"node_modules/vite/node_modules/@esbuild/freebsd-arm64\": {\n+      \"version\": \"0.21.5\",\n+      \"resolved\": \"https://registry.npmjs.org/@esbuild/freebsd-arm64/-/freebsd-arm64-0.21.5.tgz\",\n+      \"integrity\": \"sha512-5JcRxxRDUJLX8JXp/wcBCy3pENnCgBR9bN6JsY4OmhfUtIHe3ZW0mawA7+RDAcMLrMIZaf03NlQiX9DGyB8h4g==\",\n+      \"cpu\": [\n+        \"arm64\"\n+      ],\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"optional\": true,\n+      \"os\": [\n+        \"freebsd\"\n+      ],\n+      \"engines\": {\n+        \"node\": \">=12\"\n+      }\n+    },\n+    \"node_modules/vite/node_modules/@esbuild/freebsd-x64\": {\n+      \"version\": \"0.21.5\",\n+      \"resolved\": \"https://registry.npmjs.org/@esbuild/freebsd-x64/-/freebsd-x64-0.21.5.tgz\",\n+      \"integrity\": \"sha512-J95kNBj1zkbMXtHVH29bBriQygMXqoVQOQYA+ISs0/2l3T9/kj42ow2mpqerRBxDJnmkUDCaQT/dfNXWX/ZZCQ==\",\n+      \"cpu\": [\n+        \"x64\"\n+      ],\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"optional\": true,\n+      \"os\": [\n+        \"freebsd\"\n+      ],\n+      \"engines\": {\n+        \"node\": \">=12\"\n+      }\n+    },\n+    \"node_modules/vite/node_modules/@esbuild/linux-arm\": {\n+      \"version\": \"0.21.5\",\n+      \"resolved\": \"https://registry.npmjs.org/@esbuild/linux-arm/-/linux-arm-0.21.5.tgz\",\n+      \"integrity\": \"sha512-bPb5AHZtbeNGjCKVZ9UGqGwo8EUu4cLq68E95A53KlxAPRmUyYv2D6F0uUI65XisGOL1hBP5mTronbgo+0bFcA==\",\n+      \"cpu\": [\n+        \"arm\"\n+      ],\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"optional\": true,\n+      \"os\": [\n+        \"linux\"\n+      ],\n+      \"engines\": {\n+        \"node\": \">=12\"\n+      }\n+    },\n+    \"node_modules/vite/node_modules/@esbuild/linux-arm64\": {\n+      \"version\": \"0.21.5\",\n+      \"resolved\": \"https://registry.npmjs.org/@esbuild/linux-arm64/-/linux-arm64-0.21.5.tgz\",\n+      \"integrity\": \"sha512-ibKvmyYzKsBeX8d8I7MH/TMfWDXBF3db4qM6sy+7re0YXya+K1cem3on9XgdT2EQGMu4hQyZhan7TeQ8XkGp4Q==\",\n+      \"cpu\": [\n+        \"arm64\"\n+      ],\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"optional\": true,\n+      \"os\": [\n+        \"linux\"\n+      ],\n+      \"engines\": {\n+        \"node\": \">=12\"\n+      }\n+    },\n+    \"node_modules/vite/node_modules/@esbuild/linux-ia32\": {\n+      \"version\": \"0.21.5\",\n+      \"resolved\": \"https://registry.npmjs.org/@esbuild/linux-ia32/-/linux-ia32-0.21.5.tgz\",\n+      \"integrity\": \"sha512-YvjXDqLRqPDl2dvRODYmmhz4rPeVKYvppfGYKSNGdyZkA01046pLWyRKKI3ax8fbJoK5QbxblURkwK/MWY18Tg==\",\n+      \"cpu\": [\n+        \"ia32\"\n+      ],\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"optional\": true,\n+      \"os\": [\n+        \"linux\"\n+      ],\n+      \"engines\": {\n+        \"node\": \">=12\"\n+      }\n+    },\n+    \"node_modules/vite/node_modules/@esbuild/linux-loong64\": {\n+      \"version\": \"0.21.5\",\n+      \"resolved\": \"https://registry.npmjs.org/@esbuild/linux-loong64/-/linux-loong64-0.21.5.tgz\",\n+      \"integrity\": \"sha512-uHf1BmMG8qEvzdrzAqg2SIG/02+4/DHB6a9Kbya0XDvwDEKCoC8ZRWI5JJvNdUjtciBGFQ5PuBlpEOXQj+JQSg==\",\n+      \"cpu\": [\n+        \"loong64\"\n+      ],\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"optional\": true,\n+      \"os\": [\n+        \"linux\"\n+      ],\n+      \"engines\": {\n+        \"node\": \">=12\"\n+      }\n+    },\n+    \"node_modules/vite/node_modules/@esbuild/linux-mips64el\": {\n+      \"version\": \"0.21.5\",\n+      \"resolved\": \"https://registry.npmjs.org/@esbuild/linux-mips64el/-/linux-mips64el-0.21.5.tgz\",\n+      \"integrity\": \"sha512-IajOmO+KJK23bj52dFSNCMsz1QP1DqM6cwLUv3W1QwyxkyIWecfafnI555fvSGqEKwjMXVLokcV5ygHW5b3Jbg==\",\n+      \"cpu\": [\n+        \"mips64el\"\n+      ],\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"optional\": true,\n+      \"os\": [\n+        \"linux\"\n+      ],\n+      \"engines\": {\n+        \"node\": \">=12\"\n+      }\n+    },\n+    \"node_modules/vite/node_modules/@esbuild/linux-ppc64\": {\n+      \"version\": \"0.21.5\",\n+      \"resolved\": \"https://registry.npmjs.org/@esbuild/linux-ppc64/-/linux-ppc64-0.21.5.tgz\",\n+      \"integrity\": \"sha512-1hHV/Z4OEfMwpLO8rp7CvlhBDnjsC3CttJXIhBi+5Aj5r+MBvy4egg7wCbe//hSsT+RvDAG7s81tAvpL2XAE4w==\",\n+      \"cpu\": [\n+        \"ppc64\"\n+      ],\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"optional\": true,\n+      \"os\": [\n+        \"linux\"\n+      ],\n+      \"engines\": {\n+        \"node\": \">=12\"\n+      }\n+    },\n+    \"node_modules/vite/node_modules/@esbuild/linux-riscv64\": {\n+      \"version\": \"0.21.5\",\n+      \"resolved\": \"https://registry.npmjs.org/@esbuild/linux-riscv64/-/linux-riscv64-0.21.5.tgz\",\n+      \"integrity\": \"sha512-2HdXDMd9GMgTGrPWnJzP2ALSokE/0O5HhTUvWIbD3YdjME8JwvSCnNGBnTThKGEB91OZhzrJ4qIIxk/SBmyDDA==\",\n+      \"cpu\": [\n+        \"riscv64\"\n+      ],\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"optional\": true,\n+      \"os\": [\n+        \"linux\"\n+      ],\n+      \"engines\": {\n+        \"node\": \">=12\"\n+      }\n+    },\n+    \"node_modules/vite/node_modules/@esbuild/linux-s390x\": {\n+      \"version\": \"0.21.5\",\n+      \"resolved\": \"https://registry.npmjs.org/@esbuild/linux-s390x/-/linux-s390x-0.21.5.tgz\",\n+      \"integrity\": \"sha512-zus5sxzqBJD3eXxwvjN1yQkRepANgxE9lgOW2qLnmr8ikMTphkjgXu1HR01K4FJg8h1kEEDAqDcZQtbrRnB41A==\",\n+      \"cpu\": [\n+        \"s390x\"\n+      ],\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"optional\": true,\n+      \"os\": [\n+        \"linux\"\n+      ],\n+      \"engines\": {\n+        \"node\": \">=12\"\n+      }\n+    },\n+    \"node_modules/vite/node_modules/@esbuild/linux-x64\": {\n+      \"version\": \"0.21.5\",\n+      \"resolved\": \"https://registry.npmjs.org/@esbuild/linux-x64/-/linux-x64-0.21.5.tgz\",\n+      \"integrity\": \"sha512-1rYdTpyv03iycF1+BhzrzQJCdOuAOtaqHTWJZCWvijKD2N5Xu0TtVC8/+1faWqcP9iBCWOmjmhoH94dH82BxPQ==\",\n+      \"cpu\": [\n+        \"x64\"\n+      ],\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"optional\": true,\n+      \"os\": [\n+        \"linux\"\n+      ],\n+      \"engines\": {\n+        \"node\": \">=12\"\n+      }\n+    },\n+    \"node_modules/vite/node_modules/@esbuild/netbsd-x64\": {\n+      \"version\": \"0.21.5\",\n+      \"resolved\": \"https://registry.npmjs.org/@esbuild/netbsd-x64/-/netbsd-x64-0.21.5.tgz\",\n+      \"integrity\": \"sha512-Woi2MXzXjMULccIwMnLciyZH4nCIMpWQAs049KEeMvOcNADVxo0UBIQPfSmxB3CWKedngg7sWZdLvLczpe0tLg==\",\n+      \"cpu\": [\n+        \"x64\"\n+      ],\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"optional\": true,\n+      \"os\": [\n+        \"netbsd\"\n+      ],\n+      \"engines\": {\n+        \"node\": \">=12\"\n+      }\n+    },\n+    \"node_modules/vite/node_modules/@esbuild/openbsd-x64\": {\n+      \"version\": \"0.21.5\",\n+      \"resolved\": \"https://registry.npmjs.org/@esbuild/openbsd-x64/-/openbsd-x64-0.21.5.tgz\",\n+      \"integrity\": \"sha512-HLNNw99xsvx12lFBUwoT8EVCsSvRNDVxNpjZ7bPn947b8gJPzeHWyNVhFsaerc0n3TsbOINvRP2byTZ5LKezow==\",\n+      \"cpu\": [\n+        \"x64\"\n+      ],\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"optional\": true,\n+      \"os\": [\n+        \"openbsd\"\n+      ],\n+      \"engines\": {\n+        \"node\": \">=12\"\n+      }\n+    },\n+    \"node_modules/vite/node_modules/@esbuild/sunos-x64\": {\n+      \"version\": \"0.21.5\",\n+      \"resolved\": \"https://registry.npmjs.org/@esbuild/sunos-x64/-/sunos-x64-0.21.5.tgz\",\n+      \"integrity\": \"sha512-6+gjmFpfy0BHU5Tpptkuh8+uw3mnrvgs+dSPQXQOv3ekbordwnzTVEb4qnIvQcYXq6gzkyTnoZ9dZG+D4garKg==\",\n+      \"cpu\": [\n+        \"x64\"\n+      ],\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"optional\": true,\n+      \"os\": [\n+        \"sunos\"\n+      ],\n+      \"engines\": {\n+        \"node\": \">=12\"\n+      }\n+    },\n+    \"node_modules/vite/node_modules/@esbuild/win32-arm64\": {\n+      \"version\": \"0.21.5\",\n+      \"resolved\": \"https://registry.npmjs.org/@esbuild/win32-arm64/-/win32-arm64-0.21.5.tgz\",\n+      \"integrity\": \"sha512-Z0gOTd75VvXqyq7nsl93zwahcTROgqvuAcYDUr+vOv8uHhNSKROyU961kgtCD1e95IqPKSQKH7tBTslnS3tA8A==\",\n+      \"cpu\": [\n+        \"arm64\"\n+      ],\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"optional\": true,\n+      \"os\": [\n+        \"win32\"\n+      ],\n+      \"engines\": {\n+        \"node\": \">=12\"\n+      }\n+    },\n+    \"node_modules/vite/node_modules/@esbuild/win32-ia32\": {\n+      \"version\": \"0.21.5\",\n+      \"resolved\": \"https://registry.npmjs.org/@esbuild/win32-ia32/-/win32-ia32-0.21.5.tgz\",\n+      \"integrity\": \"sha512-SWXFF1CL2RVNMaVs+BBClwtfZSvDgtL//G/smwAc5oVK/UPu2Gu9tIaRgFmYFFKrmg3SyAjSrElf0TiJ1v8fYA==\",\n+      \"cpu\": [\n+        \"ia32\"\n+      ],\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"optional\": true,\n+      \"os\": [\n+        \"win32\"\n+      ],\n+      \"engines\": {\n+        \"node\": \">=12\"\n+      }\n+    },\n+    \"node_modules/vite/node_modules/@esbuild/win32-x64\": {\n+      \"version\": \"0.21.5\",\n+      \"resolved\": \"https://registry.npmjs.org/@esbuild/win32-x64/-/win32-x64-0.21.5.tgz\",\n+      \"integrity\": \"sha512-tQd/1efJuzPC6rCFwEvLtci/xNFcTZknmXs98FYDfGE4wP9ClFV98nyKrzJKVPMhdDnjzLhdUyMX4PsQAPjwIw==\",\n+      \"cpu\": [\n+        \"x64\"\n+      ],\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"optional\": true,\n+      \"os\": [\n+        \"win32\"\n+      ],\n+      \"engines\": {\n+        \"node\": \">=12\"\n+      }\n+    },\n+    \"node_modules/vite/node_modules/esbuild\": {\n+      \"version\": \"0.21.5\",\n+      \"resolved\": \"https://registry.npmjs.org/esbuild/-/esbuild-0.21.5.tgz\",\n+      \"integrity\": \"sha512-mg3OPMV4hXywwpoDxu3Qda5xCKQi+vCTZq8S9J/EpkhB2HzKXq4SNFZE3+NK93JYxc8VMSep+lOUSC/RVKaBqw==\",\n+      \"dev\": true,\n+      \"hasInstallScript\": true,\n+      \"license\": \"MIT\",\n+      \"bin\": {\n+        \"esbuild\": \"bin/esbuild\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=12\"\n+      },\n+      \"optionalDependencies\": {\n+        \"@esbuild/aix-ppc64\": \"0.21.5\",\n+        \"@esbuild/android-arm\": \"0.21.5\",\n+        \"@esbuild/android-arm64\": \"0.21.5\",\n+        \"@esbuild/android-x64\": \"0.21.5\",\n+        \"@esbuild/darwin-arm64\": \"0.21.5\",\n+        \"@esbuild/darwin-x64\": \"0.21.5\",\n+        \"@esbuild/freebsd-arm64\": \"0.21.5\",\n+        \"@esbuild/freebsd-x64\": \"0.21.5\",\n+        \"@esbuild/linux-arm\": \"0.21.5\",\n+        \"@esbuild/linux-arm64\": \"0.21.5\",\n+        \"@esbuild/linux-ia32\": \"0.21.5\",\n+        \"@esbuild/linux-loong64\": \"0.21.5\",\n+        \"@esbuild/linux-mips64el\": \"0.21.5\",\n+        \"@esbuild/linux-ppc64\": \"0.21.5\",\n+        \"@esbuild/linux-riscv64\": \"0.21.5\",\n+        \"@esbuild/linux-s390x\": \"0.21.5\",\n+        \"@esbuild/linux-x64\": \"0.21.5\",\n+        \"@esbuild/netbsd-x64\": \"0.21.5\",\n+        \"@esbuild/openbsd-x64\": \"0.21.5\",\n+        \"@esbuild/sunos-x64\": \"0.21.5\",\n+        \"@esbuild/win32-arm64\": \"0.21.5\",\n+        \"@esbuild/win32-ia32\": \"0.21.5\",\n+        \"@esbuild/win32-x64\": \"0.21.5\"\n+      }\n+    },\n+    \"node_modules/vitest\": {\n+      \"version\": \"1.6.1\",\n+      \"resolved\": \"https://registry.npmjs.org/vitest/-/vitest-1.6.1.tgz\",\n+      \"integrity\": \"sha512-Ljb1cnSJSivGN0LqXd/zmDbWEM0RNNg2t1QW/XUhYl/qPqyu7CsqeWtqQXHVaJsecLPuDoak2oJcZN2QoRIOag==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@vitest/expect\": \"1.6.1\",\n+        \"@vitest/runner\": \"1.6.1\",\n+        \"@vitest/snapshot\": \"1.6.1\",\n+        \"@vitest/spy\": \"1.6.1\",\n+        \"@vitest/utils\": \"1.6.1\",\n+        \"acorn-walk\": \"^8.3.2\",\n+        \"chai\": \"^4.3.10\",\n+        \"debug\": \"^4.3.4\",\n+        \"execa\": \"^8.0.1\",\n+        \"local-pkg\": \"^0.5.0\",\n+        \"magic-string\": \"^0.30.5\",\n+        \"pathe\": \"^1.1.1\",\n+        \"picocolors\": \"^1.0.0\",\n+        \"std-env\": \"^3.5.0\",\n+        \"strip-literal\": \"^2.0.0\",\n+        \"tinybench\": \"^2.5.1\",\n+        \"tinypool\": \"^0.8.3\",\n+        \"vite\": \"^5.0.0\",\n+        \"vite-node\": \"1.6.1\",\n+        \"why-is-node-running\": \"^2.2.2\"\n+      },\n+      \"bin\": {\n+        \"vitest\": \"vitest.mjs\"\n+      },\n+      \"engines\": {\n+        \"node\": \"^18.0.0 || >=20.0.0\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://opencollective.com/vitest\"\n+      },\n+      \"peerDependencies\": {\n+        \"@edge-runtime/vm\": \"*\",\n+        \"@types/node\": \"^18.0.0 || >=20.0.0\",\n+        \"@vitest/browser\": \"1.6.1\",\n+        \"@vitest/ui\": \"1.6.1\",\n+        \"happy-dom\": \"*\",\n+        \"jsdom\": \"*\"\n+      },\n+      \"peerDependenciesMeta\": {\n+        \"@edge-runtime/vm\": {\n+          \"optional\": true\n+        },\n+        \"@types/node\": {\n+          \"optional\": true\n+        },\n+        \"@vitest/browser\": {\n+          \"optional\": true\n+        },\n+        \"@vitest/ui\": {\n+          \"optional\": true\n+        },\n+        \"happy-dom\": {\n+          \"optional\": true\n+        },\n+        \"jsdom\": {\n+          \"optional\": true\n+        }\n+      }\n+    },\n+    \"node_modules/vitest/node_modules/pathe\": {\n+      \"version\": \"1.1.2\",\n+      \"resolved\": \"https://registry.npmjs.org/pathe/-/pathe-1.1.2.tgz\",\n+      \"integrity\": \"sha512-whLdWMYL2TwI08hn8/ZqAbrVemu0LNaNNJZX73O6qaIdCTfXutsLhMkjdENX0qhsQ9uIimo4/aQOmXkoon2nDQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/webidl-conversions\": {\n+      \"version\": \"4.0.2\",\n+      \"resolved\": \"https://registry.npmjs.org/webidl-conversions/-/webidl-conversions-4.0.2.tgz\",\n+      \"integrity\": \"sha512-YQ+BmxuTgd6UXZW3+ICGfyqRyHXVlD5GtQr5+qjiNW7bF0cqrzX500HVXPBOvgXb5YnzDd+h0zqyv61KUD7+Sg==\",\n+      \"dev\": true,\n+      \"license\": \"BSD-2-Clause\"\n+    },\n+    \"node_modules/whatwg-url\": {\n+      \"version\": \"7.1.0\",\n+      \"resolved\": \"https://registry.npmjs.org/whatwg-url/-/whatwg-url-7.1.0.tgz\",\n+      \"integrity\": \"sha512-WUu7Rg1DroM7oQvGWfOiAK21n74Gg+T4elXEQYkOhtyLeWiJFoOGLXPKI/9gzIie9CtwVLm8wtw6YJdKyxSjeg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"lodash.sortby\": \"^4.7.0\",\n+        \"tr46\": \"^1.0.1\",\n+        \"webidl-conversions\": \"^4.0.2\"\n+      }\n+    },\n+    \"node_modules/which\": {\n+      \"version\": \"2.0.2\",\n+      \"resolved\": \"https://registry.npmjs.org/which/-/which-2.0.2.tgz\",\n+      \"integrity\": \"sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==\",\n+      \"dev\": true,\n+      \"license\": \"ISC\",\n+      \"dependencies\": {\n+        \"isexe\": \"^2.0.0\"\n+      },\n+      \"bin\": {\n+        \"node-which\": \"bin/node-which\"\n+      },\n+      \"engines\": {\n+        \"node\": \">= 8\"\n+      }\n+    },\n+    \"node_modules/why-is-node-running\": {\n+      \"version\": \"2.3.0\",\n+      \"resolved\": \"https://registry.npmjs.org/why-is-node-running/-/why-is-node-running-2.3.0.tgz\",\n+      \"integrity\": \"sha512-hUrmaWBdVDcxvYqnyh09zunKzROWjbZTiNy8dBEjkS7ehEDQibXJ7XvlmtbwuTclUiIyN+CyXQD4Vmko8fNm8w==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"siginfo\": \"^2.0.0\",\n+        \"stackback\": \"0.0.2\"\n+      },\n+      \"bin\": {\n+        \"why-is-node-running\": \"cli.js\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      }\n+    },\n+    \"node_modules/word-wrap\": {\n+      \"version\": \"1.2.5\",\n+      \"resolved\": \"https://registry.npmjs.org/word-wrap/-/word-wrap-1.2.5.tgz\",\n+      \"integrity\": \"sha512-BN22B5eaMMI9UMtjrGd5g5eCYPpCPDUy0FJXbYsaT5zYxjFOckS53SQDE3pWkVoWpHXVb3BrYcEN4Twa55B5cA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=0.10.0\"\n+      }\n+    },\n+    \"node_modules/wrap-ansi\": {\n+      \"version\": \"8.1.0\",\n+      \"resolved\": \"https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-8.1.0.tgz\",\n+      \"integrity\": \"sha512-si7QWI6zUMq56bESFvagtmzMdGOtoxfR+Sez11Mobfc7tm+VkUckk9bW2UeffTGVUbOksxmSw0AA2gs8g71NCQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"ansi-styles\": \"^6.1.0\",\n+        \"string-width\": \"^5.0.1\",\n+        \"strip-ansi\": \"^7.0.1\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=12\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/chalk/wrap-ansi?sponsor=1\"\n+      }\n+    },\n+    \"node_modules/wrap-ansi-cjs\": {\n+      \"name\": \"wrap-ansi\",\n+      \"version\": \"7.0.0\",\n+      \"resolved\": \"https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-7.0.0.tgz\",\n+      \"integrity\": \"sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"ansi-styles\": \"^4.0.0\",\n+        \"string-width\": \"^4.1.0\",\n+        \"strip-ansi\": \"^6.0.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=10\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/chalk/wrap-ansi?sponsor=1\"\n+      }\n+    },\n+    \"node_modules/wrap-ansi-cjs/node_modules/emoji-regex\": {\n+      \"version\": \"8.0.0\",\n+      \"resolved\": \"https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz\",\n+      \"integrity\": \"sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/wrap-ansi-cjs/node_modules/string-width\": {\n+      \"version\": \"4.2.3\",\n+      \"resolved\": \"https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz\",\n+      \"integrity\": \"sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"emoji-regex\": \"^8.0.0\",\n+        \"is-fullwidth-code-point\": \"^3.0.0\",\n+        \"strip-ansi\": \"^6.0.1\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      }\n+    },\n+    \"node_modules/wrap-ansi/node_modules/ansi-regex\": {\n+      \"version\": \"6.1.0\",\n+      \"resolved\": \"https://registry.npmjs.org/ansi-regex/-/ansi-regex-6.1.0.tgz\",\n+      \"integrity\": \"sha512-7HSX4QQb4CspciLpVFwyRe79O3xsIZDDLER21kERQ71oaPodF8jL725AgJMFAYbooIqolJoRLuM81SpeUkpkvA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=12\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/chalk/ansi-regex?sponsor=1\"\n+      }\n+    },\n+    \"node_modules/wrap-ansi/node_modules/ansi-styles\": {\n+      \"version\": \"6.2.1\",\n+      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-6.2.1.tgz\",\n+      \"integrity\": \"sha512-bN798gFfQX+viw3R7yrGWRqnrN2oRkEkUjjl4JNn4E8GxxbjtG3FbrEIIY3l8/hrwUwIeCZvi4QuOTP4MErVug==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=12\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/chalk/ansi-styles?sponsor=1\"\n+      }\n+    },\n+    \"node_modules/wrap-ansi/node_modules/strip-ansi\": {\n+      \"version\": \"7.1.0\",\n+      \"resolved\": \"https://registry.npmjs.org/strip-ansi/-/strip-ansi-7.1.0.tgz\",\n+      \"integrity\": \"sha512-iq6eVVI64nQQTRYq2KtEg2d2uU7LElhTJwsH4YzIHZshxlgZms/wIc4VoDQTlG/IvVIrBKG06CrZnp0qv7hkcQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"ansi-regex\": \"^6.0.1\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=12\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/chalk/strip-ansi?sponsor=1\"\n+      }\n+    },\n+    \"node_modules/wrappy\": {\n+      \"version\": \"1.0.2\",\n+      \"resolved\": \"https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz\",\n+      \"integrity\": \"sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS1xUsZ3u7/IQO4wxtcFB4bgpQPRcR3QCvezPcQ==\",\n+      \"dev\": true,\n+      \"license\": \"ISC\"\n+    },\n+    \"node_modules/yocto-queue\": {\n+      \"version\": \"0.1.0\",\n+      \"resolved\": \"https://registry.npmjs.org/yocto-queue/-/yocto-queue-0.1.0.tgz\",\n+      \"integrity\": \"sha512-rVksvsnNCdJ/ohGc6xgPwyN8eheCxsiLM8mxuE/t/mOVqJewPuO1miLpTHQiRgTKCLexL4MeAFVagts7HmNZ2Q==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=10\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/sponsors/sindresorhus\"\n+      }\n+    },\n+    \"node_modules/zod\": {\n+      \"version\": \"3.25.76\",\n+      \"resolved\": \"https://registry.npmjs.org/zod/-/zod-3.25.76.tgz\",\n+      \"integrity\": \"sha512-gzUt/qt81nXsFGKIFcC3YnfEAx5NkunCfnDlvuBSSFS02bcXu4Lmea0AFIUwbLWxWPx3d9p8S5QoaujKcNQxcQ==\",\n+      \"license\": \"MIT\",\n+      \"funding\": {\n+        \"url\": \"https://github.com/sponsors/colinhacks\"\n+      }\n+    }\n+  }\n+}\n"
    },
    {
      "filepath": "packages/orgata-framework/package.json",
      "oldHash": "",
      "newHash": "11db81dd0a03237c9b1c5506c9bc4d9c81a66409",
      "timestamp": "2025-07-23T21:16:42.488Z",
      "changeType": "content",
      "gitDiff": "diff --git a/packages/orgata-framework/package.json b/packages/orgata-framework/package.json\nnew file mode 100644\nindex 0000000..11db81d\n--- /dev/null\n+++ b/packages/orgata-framework/package.json\n@@ -0,0 +1,56 @@\n+{\n+  \"name\": \"@orgata/framework\",\n+  \"version\": \"0.1.0\",\n+  \"description\": \"React-like framework for business process development with complete flexibility\",\n+  \"main\": \"dist/index.js\",\n+  \"types\": \"dist/index.d.ts\",\n+  \"scripts\": {\n+    \"build\": \"tsup\",\n+    \"dev\": \"tsup --watch\",\n+    \"test\": \"vitest\",\n+    \"test:watch\": \"vitest --watch\",\n+    \"lint\": \"eslint src --ext .ts\",\n+    \"type-check\": \"tsc --noEmit\"\n+  },\n+  \"keywords\": [\n+    \"business-process\",\n+    \"workflow\",\n+    \"framework\",\n+    \"typescript\",\n+    \"orgata\"\n+  ],\n+  \"author\": \"Orgata Team\",\n+  \"license\": \"MIT\",\n+  \"dependencies\": {\n+    \"@types/node\": \"^20.0.0\",\n+    \"eventemitter3\": \"^5.0.0\",\n+    \"zod\": \"^3.22.0\",\n+    \"immer\": \"^10.0.0\"\n+  },\n+  \"devDependencies\": {\n+    \"typescript\": \"^5.0.0\",\n+    \"vitest\": \"^1.0.0\",\n+    \"tsup\": \"^8.0.0\",\n+    \"eslint\": \"^8.0.0\",\n+    \"@typescript-eslint/eslint-plugin\": \"^6.0.0\",\n+    \"@typescript-eslint/parser\": \"^6.0.0\"\n+  },\n+  \"tsup\": {\n+    \"entry\": [\"src/index.ts\"],\n+    \"format\": [\"esm\", \"cjs\"],\n+    \"dts\": true,\n+    \"clean\": true,\n+    \"sourcemap\": true\n+  },\n+  \"exports\": {\n+    \".\": {\n+      \"types\": \"./dist/index.d.ts\",\n+      \"import\": \"./dist/index.mjs\",\n+      \"require\": \"./dist/index.js\"\n+    }\n+  },\n+  \"files\": [\n+    \"dist\",\n+    \"README.md\"\n+  ]\n+}\n\\ No newline at end of file\n"
    },
    {
      "filepath": "packages/orgata-framework/src/__tests__/Process.test.ts",
      "oldHash": "",
      "newHash": "f0bdb00521f6a19256323e5c5a269fa8703cb0f7",
      "timestamp": "2025-07-23T21:16:42.527Z",
      "changeType": "content",
      "gitDiff": "diff --git a/packages/orgata-framework/src/__tests__/Process.test.ts b/packages/orgata-framework/src/__tests__/Process.test.ts\nnew file mode 100644\nindex 0000000..f0bdb00\n--- /dev/null\n+++ b/packages/orgata-framework/src/__tests__/Process.test.ts\n@@ -0,0 +1,333 @@\n+/**\n+ * Tests for Process class\n+ * \n+ * Verifies core framework functionality including:\n+ * - Process lifecycle management\n+ * - Flexible navigation (skip, go back, jump to step)\n+ * - Immutable state management\n+ * - Audit trail generation\n+ */\n+\n+import { describe, it, expect, beforeEach } from 'vitest';\n+import { Process, HumanStep, ProcessStatus, FieldType } from '../index';\n+import type { ProcessContext, StepContext, StepResult } from '../types';\n+\n+// Test Process implementation\n+class TestProcess extends Process {\n+  constructor() {\n+    super({\n+      name: \"Test Process\",\n+      layer: \"L0\",\n+      estimatedDuration: \"1 hour\"\n+    });\n+    \n+    this.addStep(new TestHumanStep('step1', 'Step 1'));\n+    this.addStep(new TestHumanStep('step2', 'Step 2'));\n+    this.addStep(new TestHumanStep('step3', 'Step 3'));\n+  }\n+  \n+  async execute(context: ProcessContext) {\n+    return await this.executeSteps(context);\n+  }\n+}\n+\n+// Test HumanStep implementation\n+class TestHumanStep extends HumanStep {\n+  constructor(id: string, name: string) {\n+    super({\n+      id,\n+      name,\n+      description: `Test step: ${name}`,\n+      type: 'human',\n+      model: {\n+        fields: [{\n+          id: 'testField',\n+          name: 'testField',\n+          type: FieldType.TEXT,\n+          label: 'Test Field',\n+          required: true,\n+          validation: []\n+        }],\n+        layout: { type: 'single-column', columns: 1 },\n+        validation: { strategy: 'on-submit', showErrorsOn: 'always' },\n+        metadata: { version: '1.0', generatedFrom: 'test' }\n+      },\n+      view: {\n+        type: 'form',\n+        props: {},\n+        styling: { className: 'test-form' },\n+        behavior: { validation: { realTime: true, debounceMs: 300, showErrors: true } }\n+      }\n+    });\n+  }\n+  \n+  protected async collectUserInput(context: StepContext): Promise<any> {\n+    // Mock user input for testing\n+    return { testField: `Input for ${this.name}` };\n+  }\n+}\n+\n+describe('Process', () => {\n+  let process: TestProcess;\n+  let mockContext: ProcessContext;\n+  \n+  beforeEach(() => {\n+    process = new TestProcess();\n+    mockContext = {\n+      processId: 'test-process',\n+      userId: 'test-user',\n+      sessionId: 'test-session',\n+      environment: 'development',\n+      businessContext: {\n+        industry: 'test',\n+        businessSize: 'small',\n+        organizationId: 'test-org',\n+        currentProcesses: new Map(),\n+        userRole: 'admin'\n+      },\n+      permissions: {\n+        canSkipSteps: true,\n+        canOverrideValidation: true,\n+        canModifyProcess: true,\n+        canViewAuditTrail: true,\n+        allowedActions: ['all']\n+      },\n+      preferences: {\n+        uiTheme: 'light',\n+        language: 'en',\n+        timezone: 'UTC',\n+        notificationSettings: {\n+          email: true,\n+          inApp: true,\n+          frequency: 'immediate'\n+        }\n+      }\n+    };\n+  });\n+\n+  describe('Process Lifecycle', () => {\n+    it('should initialize with correct status', () => {\n+      expect(process.getState().status).toBe(ProcessStatus.NOT_STARTED);\n+      expect(process.isRunning()).toBe(false);\n+      expect(process.isCompleted()).toBe(false);\n+    });\n+\n+    it('should start process correctly', async () => {\n+      await process.start(mockContext);\n+      \n+      expect(process.getState().status).toBe(ProcessStatus.RUNNING);\n+      expect(process.isRunning()).toBe(true);\n+      expect(process.getState().currentStepId).toBe('step1');\n+    });\n+\n+    it('should pause and resume process', async () => {\n+      await process.start(mockContext);\n+      \n+      process.pause('Testing pause functionality');\n+      expect(process.getState().status).toBe(ProcessStatus.PAUSED);\n+      expect(process.isRunning()).toBe(false);\n+      \n+      await process.resume();\n+      expect(process.getState().status).toBe(ProcessStatus.RUNNING);\n+      expect(process.isRunning()).toBe(true);\n+    });\n+\n+    it('should stop process', async () => {\n+      await process.start(mockContext);\n+      \n+      process.stop('Testing stop functionality');\n+      expect(process.getState().status).toBe(ProcessStatus.CANCELLED);\n+      expect(process.isRunning()).toBe(false);\n+    });\n+  });\n+\n+  describe('Step Management', () => {\n+    it('should have correct steps in order', () => {\n+      const steps = process.getSteps();\n+      expect(steps).toHaveLength(3);\n+      expect(steps[0].id).toBe('step1');\n+      expect(steps[1].id).toBe('step2');\n+      expect(steps[2].id).toBe('step3');\n+    });\n+\n+    it('should get step by ID', () => {\n+      const step = process.getStep('step2');\n+      expect(step).toBeDefined();\n+      expect(step?.name).toBe('Step 2');\n+    });\n+\n+    it('should return undefined for non-existent step', () => {\n+      const step = process.getStep('non-existent');\n+      expect(step).toBeUndefined();\n+    });\n+  });\n+\n+  describe('Flexible Navigation', () => {\n+    beforeEach(async () => {\n+      await process.start(mockContext);\n+    });\n+\n+    it('should allow navigation to specific step', async () => {\n+      await process.goToStep('step3', 'Testing navigation');\n+      \n+      expect(process.getState().currentStepId).toBe('step3');\n+      \n+      const auditTrail = process.getAuditTrail();\n+      expect(auditTrail).toContainEqual(\n+        expect.objectContaining({\n+          action: expect.objectContaining({\n+            type: 'step_navigation'\n+          })\n+        })\n+      );\n+    });\n+\n+    it('should allow going back steps', async () => {\n+      // Navigate forward first\n+      await process.goToStep('step3');\n+      \n+      // Then go back\n+      await process.goBack(2);\n+      \n+      expect(process.getState().currentStepId).toBe('step1');\n+    });\n+\n+    it('should allow skipping steps with manual data', async () => {\n+      const manualData = { email: 'test@example.com', source: 'manual' };\n+      \n+      await process.skipStep('step2', 'Already have this data', manualData);\n+      \n+      expect(process.getState().isStepSkipped('step2')).toBe(true);\n+      \n+      const auditTrail = process.getAuditTrail();\n+      expect(auditTrail).toContainEqual(\n+        expect.objectContaining({\n+          action: expect.objectContaining({\n+            type: 'exception'\n+          })\n+        })\n+      );\n+    });\n+\n+    it('should validate manual data for skipped steps', () => {\n+      const validData = { testField: 'valid data' };\n+      const invalidData = {};\n+      \n+      const validResult = process.validateManualData('step1', validData);\n+      expect(validResult.valid).toBe(true);\n+      \n+      const invalidResult = process.validateManualData('step1', invalidData);\n+      expect(invalidResult.valid).toBe(false);\n+    });\n+  });\n+\n+  describe('State Management', () => {\n+    beforeEach(async () => {\n+      await process.start(mockContext);\n+    });\n+\n+    it('should maintain immutable state', () => {\n+      const originalState = process.getState();\n+      \n+      process.pause('Test');\n+      \n+      const newState = process.getState();\n+      expect(originalState).not.toBe(newState); // Different objects\n+      expect(originalState.status).toBe(ProcessStatus.RUNNING);\n+      expect(newState.status).toBe(ProcessStatus.PAUSED);\n+    });\n+\n+    it('should track completion percentage', async () => {\n+      expect(process.getCompletionPercentage()).toBe(0);\n+      \n+      // Simulate completing steps by skipping them\n+      await process.skipStep('step1', 'Test completion', { testField: 'data' });\n+      await process.skipStep('step2', 'Test completion', { testField: 'data' });\n+      \n+      // Should show some progress (exact calculation depends on how skipped steps are counted)\n+      const percentage = process.getCompletionPercentage();\n+      expect(percentage).toBeGreaterThanOrEqual(0);\n+      expect(percentage).toBeLessThanOrEqual(100);\n+    });\n+\n+    it('should provide complete audit trail', async () => {\n+      await process.goToStep('step2', 'Navigation test');\n+      await process.skipStep('step3', 'Skip test');\n+      process.pause('Pause test');\n+      \n+      const auditTrail = process.getAuditTrail();\n+      expect(auditTrail.length).toBeGreaterThan(0);\n+      \n+      // Should have events for navigation, skip, and pause\n+      const eventTypes = auditTrail.map(entry => entry.action.type);\n+      expect(eventTypes).toContain('step_navigation');\n+      expect(eventTypes).toContain('exception');\n+      expect(eventTypes).toContain('status_change');\n+    });\n+  });\n+\n+  describe('Error Handling', () => {\n+    it('should throw error when starting already running process', async () => {\n+      await process.start(mockContext);\n+      \n+      await expect(process.start(mockContext)).rejects.toThrow(\n+        'Process cannot be started. Current status: running'\n+      );\n+    });\n+\n+    it('should throw error when navigating to non-existent step', async () => {\n+      await process.start(mockContext);\n+      \n+      await expect(process.goToStep('non-existent')).rejects.toThrow(\n+        \"Step 'non-existent' not found\"\n+      );\n+    });\n+\n+    it('should throw error when going back too far', async () => {\n+      await process.start(mockContext);\n+      \n+      await expect(process.goBack(5)).rejects.toThrow(\n+        'Cannot go back further than process start'\n+      );\n+    });\n+  });\n+\n+  describe('Framework Philosophy Compliance', () => {\n+    beforeEach(async () => {\n+      await process.start(mockContext);\n+    });\n+\n+    it('should never constrain - all steps can be skipped', async () => {\n+      // Test that every step can be skipped\n+      for (const step of process.getSteps()) {\n+        expect(step.canSkip('Testing framework philosophy')).toBe(true);\n+      }\n+    });\n+\n+    it('should allow navigation to any step', () => {\n+      // Test that navigation to any step is allowed\n+      for (const step of process.getSteps()) {\n+        expect(process.getState().canGoToStep(step.id)).toBe(true);\n+      }\n+    });\n+\n+    it('should maintain complete history - never rewrite', async () => {\n+      const initialHistoryLength = process.getState().history.length;\n+      \n+      await process.goToStep('step2');\n+      await process.goToStep('step1'); // Go back\n+      await process.goToStep('step3'); // Go forward again\n+      \n+      const finalHistoryLength = process.getState().history.length;\n+      \n+      // Should have added events, never removed them\n+      expect(finalHistoryLength).toBeGreaterThan(initialHistoryLength);\n+      \n+      // Should be able to trace all navigation events\n+      const navigationEvents = process.getState().history.filter(\n+        event => event.type === 'step_navigation'\n+      );\n+      expect(navigationEvents.length).toBe(3);\n+    });\n+  });\n+});\n\\ No newline at end of file\n"
    },
    {
      "filepath": "packages/orgata-framework/src/core/Process.ts",
      "oldHash": "",
      "newHash": "2cb0acf42459b61ae955287d0fcaa0444fbd51be",
      "timestamp": "2025-07-23T21:16:42.578Z",
      "changeType": "content",
      "gitDiff": "diff --git a/packages/orgata-framework/src/core/Process.ts b/packages/orgata-framework/src/core/Process.ts\nnew file mode 100644\nindex 0000000..2cb0acf\n--- /dev/null\n+++ b/packages/orgata-framework/src/core/Process.ts\n@@ -0,0 +1,553 @@\n+/**\n+ * Base Process class for Orgata Framework\n+ * \n+ * Implements the core process execution logic with complete flexibility,\n+ * immutable state management, and intelligent override capabilities.\n+ * \n+ * Based on design specification:\n+ * - Framework Architecture: ../../design-docs/008-orgata-framework/ORGATA_FRAMEWORK_ARCHITECTURE.md\n+ * - API Specification: ../../design-docs/008-orgata-framework/FRAMEWORK_API_SPECIFICATION.md\n+ */\n+\n+import { EventEmitter } from 'eventemitter3';\n+import { ProcessStatus } from '../types';\n+import type {\n+  ProcessConfig,\n+  ProcessContext,\n+  ProcessResult,\n+  StepResult,\n+  ValidationResult,\n+  OverrideRequest,\n+  OverrideResult,\n+  AuditEntry\n+} from '../types';\n+import type { Step } from './Step';\n+import { ProcessState } from '../state/ProcessState';\n+\n+export abstract class Process extends EventEmitter {\n+  readonly id: string;\n+  readonly name: string;\n+  readonly config: ProcessConfig;\n+  protected steps: Map<string, Step>;\n+  protected state: ProcessState;\n+  protected stepOrder: string[];\n+\n+  constructor(config: ProcessConfig) {\n+    super();\n+    \n+    this.id = this.generateId();\n+    this.name = config.name;\n+    this.config = config;\n+    this.steps = new Map();\n+    this.stepOrder = [];\n+    \n+    // Initialize with empty state\n+    this.state = ProcessState.create(this.id);\n+  }\n+\n+  // =============================================================================\n+  // Abstract Methods (must be implemented by subclasses)\n+  // =============================================================================\n+\n+  /**\n+   * Main execution entry point - implemented by generated process classes\n+   */\n+  abstract execute(context: ProcessContext): Promise<ProcessResult>;\n+\n+  // =============================================================================\n+  // Step Management\n+  // =============================================================================\n+\n+  /**\n+   * Add a step to the process\n+   */\n+  addStep(step: Step): void {\n+    if (this.steps.has(step.id)) {\n+      throw new Error(`Step with id '${step.id}' already exists`);\n+    }\n+    \n+    this.steps.set(step.id, step);\n+    this.stepOrder.push(step.id);\n+    \n+    this.emit('step:added', step);\n+  }\n+\n+  /**\n+   * Remove a step from the process\n+   */\n+  removeStep(stepId: string): void {\n+    if (!this.steps.has(stepId)) {\n+      throw new Error(`Step with id '${stepId}' not found`);\n+    }\n+    \n+    this.steps.delete(stepId);\n+    this.stepOrder = this.stepOrder.filter(id => id !== stepId);\n+    \n+    this.emit('step:removed', stepId);\n+  }\n+\n+  /**\n+   * Get a specific step by ID\n+   */\n+  getStep(stepId: string): Step | undefined {\n+    return this.steps.get(stepId);\n+  }\n+\n+  /**\n+   * Get all steps in order\n+   */\n+  getSteps(): Step[] {\n+    return this.stepOrder.map(id => this.steps.get(id)!).filter(Boolean);\n+  }\n+\n+  /**\n+   * Get step IDs in execution order\n+   */\n+  getStepOrder(): string[] {\n+    return [...this.stepOrder];\n+  }\n+\n+  // =============================================================================\n+  // Process Lifecycle Management\n+  // =============================================================================\n+\n+  /**\n+   * Start process execution\n+   */\n+  async start(initialContext?: ProcessContext): Promise<void> {\n+    if (this.state.status !== ProcessStatus.NOT_STARTED) {\n+      throw new Error(`Process cannot be started. Current status: ${this.state.status}`);\n+    }\n+\n+    this.state = this.state.withStatus(ProcessStatus.RUNNING);\n+    \n+    if (this.stepOrder.length > 0) {\n+      this.state = this.state.withCurrentStep(this.stepOrder[0]);\n+    }\n+\n+    this.emit('process:started', { \n+      processId: this.id, \n+      context: initialContext,\n+      timestamp: new Date()\n+    });\n+  }\n+\n+  /**\n+   * Pause process execution\n+   */\n+  pause(reason?: string): void {\n+    if (this.state.status !== ProcessStatus.RUNNING) {\n+      throw new Error(`Process cannot be paused. Current status: ${this.state.status}`);\n+    }\n+\n+    this.state = this.state.withStatus(ProcessStatus.PAUSED);\n+    \n+    this.emit('process:paused', { \n+      processId: this.id, \n+      reason,\n+      timestamp: new Date()\n+    });\n+  }\n+\n+  /**\n+   * Resume process execution\n+   */\n+  async resume(): Promise<void> {\n+    if (this.state.status !== ProcessStatus.PAUSED) {\n+      throw new Error(`Process cannot be resumed. Current status: ${this.state.status}`);\n+    }\n+\n+    this.state = this.state.withStatus(ProcessStatus.RUNNING);\n+    \n+    this.emit('process:resumed', { \n+      processId: this.id,\n+      timestamp: new Date()\n+    });\n+  }\n+\n+  /**\n+   * Stop process execution\n+   */\n+  stop(reason?: string): void {\n+    if (this.state.status === ProcessStatus.COMPLETED || \n+        this.state.status === ProcessStatus.CANCELLED) {\n+      return; // Already stopped\n+    }\n+\n+    this.state = this.state.withStatus(ProcessStatus.CANCELLED);\n+    \n+    this.emit('process:stopped', { \n+      processId: this.id, \n+      reason,\n+      timestamp: new Date()\n+    });\n+  }\n+\n+  // =============================================================================\n+  // Flexible Navigation (Core Framework Feature)\n+  // =============================================================================\n+\n+  /**\n+   * Navigate to a specific step\n+   * Maintains immutable history - never rewrites past\n+   */\n+  async goToStep(stepId: string, reason?: string): Promise<void> {\n+    if (!this.steps.has(stepId)) {\n+      throw new Error(`Step '${stepId}' not found`);\n+    }\n+\n+    if (!this.state.canGoToStep(stepId)) {\n+      throw new Error(`Cannot navigate to step '${stepId}' in current state`);\n+    }\n+\n+    // Create navigation event (preserves history)\n+    this.state = this.state.withStepNavigation(stepId, reason || 'User navigation');\n+    \n+    this.emit('step:navigation', {\n+      fromStep: this.state.currentStepId,\n+      toStep: stepId,\n+      reason,\n+      timestamp: new Date()\n+    });\n+  }\n+\n+  /**\n+   * Skip a step with optional manual data provision\n+   * Core flexibility feature - users can always skip steps\n+   */\n+  async skipStep(stepId: string, reason: string, manualData?: any): Promise<void> {\n+    if (!this.steps.has(stepId)) {\n+      throw new Error(`Step '${stepId}' not found`);\n+    }\n+\n+    const step = this.steps.get(stepId)!;\n+    \n+    // Validate manual data if provided\n+    if (manualData) {\n+      const validation = this.validateManualData(stepId, manualData);\n+      if (!validation.valid) {\n+        this.emit('validation:warnings', {\n+          stepId,\n+          warnings: validation.errors,\n+          proceedAnyway: true\n+        });\n+      }\n+    }\n+\n+    // Create skip event with manual data\n+    this.state = this.state.withStepSkip(stepId, reason, manualData);\n+    \n+    this.emit('step:skip', {\n+      stepId,\n+      reason,\n+      manualData,\n+      timestamp: new Date()\n+    });\n+\n+    // Move to next step if this was current step\n+    if (this.state.currentStepId === stepId) {\n+      const nextStepId = this.getNextStepId(stepId);\n+      if (nextStepId) {\n+        this.state = this.state.withCurrentStep(nextStepId);\n+      }\n+    }\n+  }\n+\n+  /**\n+   * Go back to previous steps\n+   * Replays history forward from that point\n+   */\n+  async goBack(steps: number = 1): Promise<void> {\n+    if (steps < 1) {\n+      throw new Error('Steps must be positive number');\n+    }\n+\n+    const currentIndex = this.getCurrentStepIndex();\n+    if (currentIndex < steps) {\n+      throw new Error('Cannot go back further than process start');\n+    }\n+\n+    const targetIndex = currentIndex - steps;\n+    const targetStepId = this.stepOrder[targetIndex];\n+    \n+    await this.goToStep(targetStepId, `Go back ${steps} step(s)`);\n+  }\n+\n+  // =============================================================================\n+  // State Management and Queries\n+  // =============================================================================\n+\n+  /**\n+   * Get current step\n+   */\n+  getCurrentStep(): Step | null {\n+    if (!this.state.currentStepId) {\n+      return null;\n+    }\n+    return this.steps.get(this.state.currentStepId) || null;\n+  }\n+\n+  /**\n+   * Get current process state (immutable)\n+   */\n+  getState(): ProcessState {\n+    return this.state;\n+  }\n+\n+  /**\n+   * Get complete audit trail\n+   */\n+  getAuditTrail(): AuditEntry[] {\n+    return this.state.getAuditTrail();\n+  }\n+\n+  /**\n+   * Check if process is currently running\n+   */\n+  isRunning(): boolean {\n+    return this.state.status === ProcessStatus.RUNNING;\n+  }\n+\n+  /**\n+   * Check if process is completed\n+   */\n+  isCompleted(): boolean {\n+    return this.state.status === ProcessStatus.COMPLETED;\n+  }\n+\n+  /**\n+   * Get completion percentage (0-100)\n+   */\n+  getCompletionPercentage(): number {\n+    const totalSteps = this.stepOrder.length;\n+    if (totalSteps === 0) return 100;\n+    \n+    const completedSteps = this.stepOrder.filter(stepId => \n+      this.state.isStepCompleted(stepId)\n+    ).length;\n+    \n+    return Math.round((completedSteps / totalSteps) * 100);\n+  }\n+\n+  // =============================================================================\n+  // Override and Flexibility System\n+  // =============================================================================\n+\n+  /**\n+   * Handle override requests (delegated to FlexibilityAgent)\n+   */\n+  async requestOverride(request: OverrideRequest): Promise<OverrideResult> {\n+    // This will be implemented when we add the FlexibilityAgent\n+    // For now, return a basic response\n+    return {\n+      approved: false,\n+      implementation: {\n+        type: 'not_implemented',\n+        changes: {},\n+        instructions: 'Override system not yet implemented'\n+      },\n+      consequences: {\n+        riskLevel: 'low',\n+        missingData: [],\n+        affectedSteps: [],\n+        suggestedMitigations: [],\n+        dataRequirements: []\n+      },\n+      auditEntry: {\n+        id: this.generateId(),\n+        timestamp: new Date(),\n+        processId: this.id,\n+        stepId: request.stepId,\n+        userId: request.currentContext.userId,\n+        action: {\n+          type: 'override_request',\n+          description: request.userMessage,\n+          automated: false\n+        },\n+        details: {\n+          before: null,\n+          after: null,\n+          metadata: { request }\n+        },\n+        impact: {\n+          scope: 'step',\n+          severity: 'info',\n+          categories: ['override']\n+        }\n+      }\n+    };\n+  }\n+\n+  /**\n+   * Validate manual data for step skipping\n+   */\n+  validateManualData(stepId: string, data: any): ValidationResult {\n+    const step = this.steps.get(stepId);\n+    if (!step) {\n+      return {\n+        valid: false,\n+        errors: [{\n+          code: 'STEP_NOT_FOUND',\n+          message: `Step '${stepId}' not found`,\n+          severity: 'error'\n+        }]\n+      };\n+    }\n+\n+    // Delegate to step's validation logic\n+    return step.validate(data);\n+  }\n+\n+  // =============================================================================\n+  // Process Execution Helpers\n+  // =============================================================================\n+\n+  /**\n+   * Execute all steps in sequence (framework-provided implementation)\n+   * Used by generated process classes\n+   */\n+  protected async executeSteps(context: ProcessContext): Promise<ProcessResult> {\n+    const startTime = new Date();\n+    const completedSteps: string[] = [];\n+    const exceptions: any[] = [];\n+    \n+    try {\n+      await this.start(context);\n+      \n+      for (const stepId of this.stepOrder) {\n+        if (this.state.isStepSkipped(stepId)) {\n+          continue; // Skip this step\n+        }\n+        \n+        const step = this.steps.get(stepId)!;\n+        \n+        try {\n+          this.emit('step:start', { stepId, step, context });\n+          \n+          const stepContext = this.buildStepContext(stepId, context);\n+          const result = await step.execute(stepContext);\n+          \n+          if (result.success) {\n+            this.state = this.state.withStepData(stepId, {\n+              stepId,\n+              data: result.data,\n+              timestamp: new Date(),\n+              source: 'user',\n+              validated: true\n+            });\n+            \n+            completedSteps.push(stepId);\n+            this.emit('step:complete', { stepId, step, result });\n+          } else {\n+            this.emit('step:error', { stepId, step, result });\n+            throw new Error(`Step '${stepId}' failed: ${result.errors?.map(e => e.message).join(', ')}`);\n+          }\n+          \n+        } catch (error) {\n+          this.emit('step:exception', { stepId, step, error });\n+          exceptions.push({\n+            stepId,\n+            error: error instanceof Error ? error.message : String(error),\n+            timestamp: new Date()\n+          });\n+          \n+          // For now, stop on error - could be made configurable\n+          break;\n+        }\n+      }\n+      \n+      this.state = this.state.withStatus(ProcessStatus.COMPLETED);\n+      \n+      return {\n+        success: exceptions.length === 0,\n+        processId: this.id,\n+        completedSteps,\n+        finalData: this.collectFinalData(),\n+        metadata: {\n+          startedAt: startTime,\n+          completedAt: new Date(),\n+          duration: Date.now() - startTime.getTime(),\n+          executionMode: 'sequential',\n+          version: '1.0.0'\n+        },\n+        auditTrail: this.getAuditTrail(),\n+        exceptions: exceptions.length > 0 ? exceptions : undefined\n+      };\n+      \n+    } catch (error) {\n+      this.state = this.state.withStatus(ProcessStatus.FAILED);\n+      \n+      return {\n+        success: false,\n+        processId: this.id,\n+        completedSteps,\n+        finalData: this.collectFinalData(),\n+        metadata: {\n+          startedAt: startTime,\n+          completedAt: new Date(),\n+          duration: Date.now() - startTime.getTime(),\n+          executionMode: 'sequential',\n+          version: '1.0.0'\n+        },\n+        auditTrail: this.getAuditTrail(),\n+        exceptions: [\n+          ...exceptions,\n+          {\n+            error: error instanceof Error ? error.message : String(error),\n+            timestamp: new Date()\n+          }\n+        ]\n+      };\n+    }\n+  }\n+\n+  // =============================================================================\n+  // Private Helper Methods\n+  // =============================================================================\n+\n+  private buildStepContext(stepId: string, processContext: ProcessContext): any {\n+    const step = this.steps.get(stepId)!;\n+    \n+    return {\n+      ...processContext,\n+      stepId,\n+      stepType: step.type,\n+      inputData: this.state.getStepData(stepId)?.data || {},\n+      previousStepResults: this.state.stepData,\n+      requiredOutputs: [], // TODO: Extract from step definition\n+      validationRules: [], // TODO: Extract from step definition  \n+      startTime: new Date()\n+    };\n+  }\n+\n+  private collectFinalData(): any {\n+    const finalData: Record<string, any> = {};\n+    \n+    for (const [stepId, stepData] of this.state.stepData) {\n+      if (stepData.validated) {\n+        finalData[stepId] = stepData.data;\n+      }\n+    }\n+    \n+    return finalData;\n+  }\n+\n+  private getCurrentStepIndex(): number {\n+    if (!this.state.currentStepId) {\n+      return -1;\n+    }\n+    return this.stepOrder.indexOf(this.state.currentStepId);\n+  }\n+\n+  private getNextStepId(currentStepId: string): string | null {\n+    const currentIndex = this.stepOrder.indexOf(currentStepId);\n+    if (currentIndex < 0 || currentIndex >= this.stepOrder.length - 1) {\n+      return null;\n+    }\n+    return this.stepOrder[currentIndex + 1];\n+  }\n+\n+  private generateId(): string {\n+    return Date.now().toString(36) + Math.random().toString(36).substring(2);\n+  }\n+}\n\\ No newline at end of file\n"
    },
    {
      "filepath": "packages/orgata-framework/src/core/Step.ts",
      "oldHash": "",
      "newHash": "37203135db2dd3ed1ef8ed9aeab9bb73cabf4eab",
      "timestamp": "2025-07-23T21:16:42.621Z",
      "changeType": "content",
      "gitDiff": "diff --git a/packages/orgata-framework/src/core/Step.ts b/packages/orgata-framework/src/core/Step.ts\nnew file mode 100644\nindex 0000000..3720313\n--- /dev/null\n+++ b/packages/orgata-framework/src/core/Step.ts\n@@ -0,0 +1,641 @@\n+/**\n+ * Base Step class and specialized step implementations for Orgata Framework\n+ * \n+ * Implements the three core step types (Human, Agent, Algorithm) with\n+ * complete flexibility and override capabilities.\n+ * \n+ * Based on design specification:\n+ * - Framework Architecture: ../../design-docs/008-orgata-framework/ORGATA_FRAMEWORK_ARCHITECTURE.md\n+ * - API Specification: ../../design-docs/008-orgata-framework/FRAMEWORK_API_SPECIFICATION.md\n+ */\n+\n+import type {\n+  StepConfig,\n+  HumanStepConfig,\n+  AgentStepConfig,\n+  AlgorithmStepConfig,\n+  StepContext,\n+  StepResult,\n+  StepType,\n+  ValidationResult,\n+  InputRequirement,\n+  AuditEntry,\n+  FormModel,\n+  ComponentDefinition,\n+  ValidationRules,\n+  AgentPrompt,\n+  AgentContext,\n+  AgentConstraints,\n+  AgentResponse,\n+  AlgorithmImplementation,\n+  AlgorithmParameters,\n+  AlgorithmInput,\n+  AlgorithmOutput\n+} from '../types';\n+\n+// =============================================================================\n+// Base Step Class\n+// =============================================================================\n+\n+export abstract class Step {\n+  readonly id: string;\n+  readonly name: string;\n+  readonly type: StepType;\n+  readonly config: StepConfig;\n+\n+  constructor(config: StepConfig) {\n+    this.id = config.id;\n+    this.name = config.name;\n+    this.type = config.type;\n+    this.config = config;\n+  }\n+\n+  // =============================================================================\n+  // Abstract Methods (must be implemented by subclasses)\n+  // =============================================================================\n+\n+  /**\n+   * Execute the step with given context\n+   */\n+  abstract execute(context: StepContext): Promise<StepResult>;\n+\n+  // =============================================================================\n+  // Validation and Preparation\n+  // =============================================================================\n+\n+  /**\n+   * Validate step input data\n+   */\n+  validate(input: any): ValidationResult {\n+    // Base validation - override in subclasses for specific validation\n+    return {\n+      valid: true,\n+      errors: []\n+    };\n+  }\n+\n+  /**\n+   * Prepare step context from process context\n+   */\n+  prepareContext(processContext: any): StepContext {\n+    return {\n+      ...processContext,\n+      stepId: this.id,\n+      stepType: this.type,\n+      inputData: {},\n+      previousStepResults: new Map(),\n+      requiredOutputs: this.getRequiredOutputs(),\n+      validationRules: this.getValidationRules(),\n+      startTime: new Date()\n+    };\n+  }\n+\n+  // =============================================================================\n+  // Flexibility and Override Support\n+  // =============================================================================\n+\n+  /**\n+   * Check if this step can be skipped with given reason\n+   */\n+  canSkip(reason: string): boolean {\n+    // Default: all steps can be skipped (framework philosophy: never constrain)\n+    return true;\n+  }\n+\n+  /**\n+   * Get required inputs for this step\n+   */\n+  getRequiredInputs(): InputRequirement[] {\n+    // Override in subclasses to specify required inputs\n+    return [];\n+  }\n+\n+  /**\n+   * Check if manual data can substitute for step execution\n+   */\n+  acceptManualData(data: any): boolean {\n+    // Default: accept manual data if it contains required fields\n+    const requiredInputs = this.getRequiredInputs();\n+    return requiredInputs.every(input => \n+      !input.required || (data && data[input.name] !== undefined)\n+    );\n+  }\n+\n+  // =============================================================================\n+  // Audit and Tracking\n+  // =============================================================================\n+\n+  /**\n+   * Create audit entry for step actions\n+   */\n+  createAuditEntry(action: string, data: any): AuditEntry {\n+    return {\n+      id: this.generateId(),\n+      timestamp: new Date(),\n+      processId: '', // Will be filled by Process\n+      stepId: this.id,\n+      userId: '', // Will be filled from context\n+      action: {\n+        type: action,\n+        description: `Step ${this.name}: ${action}`,\n+        automated: false\n+      },\n+      details: {\n+        before: null,\n+        after: data,\n+        metadata: {\n+          stepType: this.type,\n+          stepName: this.name\n+        }\n+      },\n+      impact: {\n+        scope: 'step',\n+        severity: 'info',\n+        categories: ['step_execution']\n+      }\n+    };\n+  }\n+\n+  // =============================================================================\n+  // Protected Helper Methods\n+  // =============================================================================\n+\n+  protected getRequiredOutputs(): any[] {\n+    // Override in subclasses\n+    return [];\n+  }\n+\n+  protected getValidationRules(): any[] {\n+    // Override in subclasses\n+    return [];\n+  }\n+\n+  protected generateId(): string {\n+    return Date.now().toString(36) + Math.random().toString(36).substring(2);\n+  }\n+\n+  protected calculateDuration(startTime: Date): number {\n+    return Date.now() - startTime.getTime();\n+  }\n+}\n+\n+// =============================================================================\n+// Human Step - UI-based user interaction\n+// =============================================================================\n+\n+export class HumanStep extends Step {\n+  readonly model: FormModel;\n+  readonly view: ComponentDefinition;\n+  readonly validation: ValidationRules;\n+\n+  constructor(config: HumanStepConfig) {\n+    super(config);\n+    this.model = config.model;\n+    this.view = config.view;\n+    this.validation = config.validation || { fields: {}, custom: [] };\n+  }\n+\n+  async execute(context: StepContext): Promise<StepResult> {\n+    try {\n+      // Framework will handle UI rendering and data collection\n+      const userInput = await this.collectUserInput(context);\n+      \n+      // Validate user input\n+      const validationResult = this.validateInput(userInput);\n+      if (!validationResult.valid) {\n+        return {\n+          success: false,\n+          data: userInput,\n+          metadata: {\n+            completedAt: new Date(),\n+            duration: this.calculateDuration(context.startTime)\n+          },\n+          errors: validationResult.errors\n+        };\n+      }\n+\n+      // Process the validated input\n+      const processedData = await this.processUserInput(userInput, context);\n+\n+      return {\n+        success: true,\n+        data: processedData,\n+        metadata: {\n+          completedAt: new Date(),\n+          userAgent: context.userAgent,\n+          duration: this.calculateDuration(context.startTime)\n+        }\n+      };\n+\n+    } catch (error) {\n+      return {\n+        success: false,\n+        data: null,\n+        metadata: {\n+          completedAt: new Date(),\n+          duration: this.calculateDuration(context.startTime)\n+        },\n+        errors: [{\n+          code: 'EXECUTION_ERROR',\n+          message: error instanceof Error ? error.message : String(error),\n+          severity: 'error'\n+        }]\n+      };\n+    }\n+  }\n+\n+  // =============================================================================\n+  // UI-specific Methods\n+  // =============================================================================\n+\n+  /**\n+   * Render UI and collect user input\n+   * This will be implemented by the framework's UI rendering system\n+   */\n+  protected async collectUserInput(context: StepContext): Promise<any> {\n+    // Placeholder - actual implementation will depend on UI framework integration\n+    // For now, return empty object\n+    return {};\n+  }\n+\n+  /**\n+   * Generate alternative UI when standard form is too restrictive\n+   */\n+  generateAlternativeUI(constraints?: any): ComponentDefinition {\n+    // Return a more flexible UI component\n+    return {\n+      type: 'flexible-form',\n+      props: {\n+        allowFreeForm: true,\n+        originalModel: this.model,\n+        constraints\n+      },\n+      styling: {\n+        className: 'alternative-ui'\n+      },\n+      behavior: {\n+        validation: {\n+          realTime: false,\n+          debounceMs: 500,\n+          showErrors: true\n+        }\n+      }\n+    };\n+  }\n+\n+  /**\n+   * Validate user input against form model and custom rules\n+   */\n+  protected validateInput(input: any): ValidationResult {\n+    const errors: any[] = [];\n+\n+    // Validate required fields\n+    for (const field of this.model.fields) {\n+      if (field.required && (!input || input[field.name] === undefined || input[field.name] === '')) {\n+        errors.push({\n+          field: field.name,\n+          code: 'REQUIRED_FIELD',\n+          message: `${field.label} is required`,\n+          severity: 'error'\n+        });\n+      }\n+\n+      // Validate field-specific rules\n+      if (input && input[field.name] !== undefined) {\n+        for (const validation of field.validation) {\n+          if (!this.validateFieldValue(input[field.name], validation)) {\n+            errors.push({\n+              field: field.name,\n+              code: validation.type.toUpperCase(),\n+              message: validation.message,\n+              severity: 'error'\n+            });\n+          }\n+        }\n+      }\n+    }\n+\n+    // Apply custom validation rules\n+    for (const rule of this.validation.custom) {\n+      // TODO: Implement custom validation logic\n+    }\n+\n+    return {\n+      valid: errors.length === 0,\n+      errors\n+    };\n+  }\n+\n+  /**\n+   * Process user input (override for custom business logic)\n+   */\n+  protected async processUserInput(input: any, context: StepContext): Promise<any> {\n+    // Default: return input as-is\n+    // Override in generated step classes for custom processing\n+    return input;\n+  }\n+\n+  private validateFieldValue(value: any, validation: any): boolean {\n+    switch (validation.type) {\n+      case 'min':\n+        return typeof value === 'number' ? value >= validation.value : value.length >= validation.value;\n+      case 'max':\n+        return typeof value === 'number' ? value <= validation.value : value.length <= validation.value;\n+      case 'email':\n+        return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(value);\n+      case 'url':\n+        try {\n+          new URL(value);\n+          return true;\n+        } catch {\n+          return false;\n+        }\n+      case 'pattern':\n+        return new RegExp(validation.value).test(value);\n+      default:\n+        return true;\n+    }\n+  }\n+}\n+\n+// =============================================================================\n+// Agent Step - AI-powered processing\n+// =============================================================================\n+\n+export class AgentStep extends Step {\n+  readonly prompt: AgentPrompt;\n+  readonly context: AgentContext;\n+  readonly constraints: AgentConstraints;\n+\n+  constructor(config: AgentStepConfig) {\n+    super(config);\n+    this.prompt = config.prompt;\n+    this.context = config.context;\n+    this.constraints = config.constraints || {\n+      timeout: 30000,\n+      retryAttempts: 3,\n+      fallbackToHuman: true\n+    };\n+  }\n+\n+  async execute(context: StepContext): Promise<StepResult> {\n+    try {\n+      // Build contextual prompt\n+      const enrichedPrompt = await this.buildContextualPrompt(context);\n+      \n+      // Execute AI agent\n+      const agentResponse = await this.executeAgent(enrichedPrompt, this.context);\n+      \n+      // Validate agent output\n+      const validationResult = this.validateAgentOutput(agentResponse);\n+      if (!validationResult.valid) {\n+        return {\n+          success: false,\n+          data: agentResponse,\n+          metadata: {\n+            completedAt: new Date(),\n+            duration: this.calculateDuration(context.startTime),\n+            requiresHumanReview: true,\n+            confidence: agentResponse.confidence\n+          },\n+          errors: validationResult.errors\n+        };\n+      }\n+\n+      // Post-process agent output\n+      const processedData = await this.postProcessOutput(agentResponse, context);\n+\n+      return {\n+        success: true,\n+        data: processedData,\n+        metadata: {\n+          agentConfidence: agentResponse.confidence,\n+          reasoning: agentResponse.reasoning,\n+          completedAt: new Date(),\n+          duration: this.calculateDuration(context.startTime),\n+          requiresReview: agentResponse.confidence < 0.8\n+        }\n+      };\n+\n+    } catch (error) {\n+      return {\n+        success: false,\n+        data: null,\n+        metadata: {\n+          completedAt: new Date(),\n+          duration: this.calculateDuration(context.startTime),\n+          requiresHumanReview: true\n+        },\n+        errors: [{\n+          code: 'AGENT_ERROR',\n+          message: error instanceof Error ? error.message : String(error),\n+          severity: 'error'\n+        }]\n+      };\n+    }\n+  }\n+\n+  // =============================================================================\n+  // AI-specific Methods\n+  // =============================================================================\n+\n+  /**\n+   * Build prompt with current context data\n+   */\n+  protected async buildContextualPrompt(context: StepContext): Promise<string> {\n+    const contextData = this.extractRelevantContext(context);\n+    \n+    return this.prompt.userPrompt.replace(/\\{\\{([^}]+)\\}\\}/g, (match, key) => {\n+      return contextData[key] || match;\n+    });\n+  }\n+\n+  /**\n+   * Execute AI agent (placeholder - will integrate with actual AI service)\n+   */\n+  protected async executeAgent(prompt: string, agentContext: AgentContext): Promise<AgentResponse> {\n+    // Placeholder implementation\n+    // This will be replaced with actual AI service integration\n+    return {\n+      content: 'AI agent response placeholder',\n+      confidence: 0.85,\n+      reasoning: 'This is a placeholder response',\n+      structuredData: {},\n+      suggestedActions: [],\n+      requiresHumanReview: false\n+    };\n+  }\n+\n+  /**\n+   * Validate agent output\n+   */\n+  protected validateAgentOutput(output: AgentResponse): ValidationResult {\n+    const errors: any[] = [];\n+\n+    if (!output.content && !output.structuredData) {\n+      errors.push({\n+        code: 'NO_OUTPUT',\n+        message: 'Agent produced no usable output',\n+        severity: 'error'\n+      });\n+    }\n+\n+    if (output.confidence < 0.1) {\n+      errors.push({\n+        code: 'LOW_CONFIDENCE',\n+        message: 'Agent confidence is too low',\n+        severity: 'warning'\n+      });\n+    }\n+\n+    return {\n+      valid: errors.filter(e => e.severity === 'error').length === 0,\n+      errors\n+    };\n+  }\n+\n+  /**\n+   * Extract relevant context from previous steps\n+   */\n+  protected extractRelevantContext(context: StepContext): Record<string, any> {\n+    // TODO: Implement intelligent context extraction\n+    return {\n+      processContext: context.businessContext\n+    };\n+  }\n+\n+  /**\n+   * Post-process agent output (override for custom logic)\n+   */\n+  protected async postProcessOutput(response: AgentResponse, context: StepContext): Promise<any> {\n+    // Default: return structured data or parsed content\n+    return response.structuredData || response.content;\n+  }\n+}\n+\n+// =============================================================================\n+// Algorithm Step - Code-based processing\n+// =============================================================================\n+\n+export class AlgorithmStep extends Step {\n+  readonly implementation: AlgorithmImplementation;\n+  readonly parameters: AlgorithmParameters;\n+\n+  constructor(config: AlgorithmStepConfig) {\n+    super(config);\n+    this.implementation = config.implementation;\n+    this.parameters = config.parameters || {};\n+  }\n+\n+  async execute(context: StepContext): Promise<StepResult> {\n+    try {\n+      // Extract required inputs\n+      const algorithmInput = this.extractInputs(context);\n+      \n+      // Validate inputs\n+      const inputValidation = this.validateInputs(algorithmInput);\n+      if (!inputValidation.valid) {\n+        return {\n+          success: false,\n+          data: algorithmInput,\n+          metadata: {\n+            completedAt: new Date(),\n+            duration: this.calculateDuration(context.startTime)\n+          },\n+          errors: inputValidation.errors\n+        };\n+      }\n+\n+      // Execute algorithm\n+      const result = await this.executeAlgorithm(algorithmInput);\n+      \n+      // Validate outputs\n+      const outputValidation = this.validateOutputs(result);\n+      if (!outputValidation.valid) {\n+        return {\n+          success: false,\n+          data: result,\n+          metadata: {\n+            completedAt: new Date(),\n+            duration: this.calculateDuration(context.startTime),\n+            requiresManualReview: true\n+          },\n+          errors: outputValidation.errors\n+        };\n+      }\n+\n+      return {\n+        success: true,\n+        data: result,\n+        metadata: {\n+          algorithmVersion: this.implementation.version,\n+          executionTime: this.calculateDuration(context.startTime),\n+          completedAt: new Date()\n+        }\n+      };\n+\n+    } catch (error) {\n+      return {\n+        success: false,\n+        data: null,\n+        metadata: {\n+          completedAt: new Date(),\n+          duration: this.calculateDuration(context.startTime),\n+          requiresManualIntervention: true,\n+          error: error instanceof Error ? error.message : String(error)\n+        },\n+        errors: [{\n+          code: 'ALGORITHM_ERROR',\n+          message: error instanceof Error ? error.message : String(error),\n+          severity: 'error'\n+        }]\n+      };\n+    }\n+  }\n+\n+  // =============================================================================\n+  // Algorithm-specific Methods\n+  // =============================================================================\n+\n+  /**\n+   * Extract algorithm inputs from context\n+   */\n+  protected extractInputs(context: StepContext): AlgorithmInput {\n+    // TODO: Implement based on step configuration\n+    // For now, return basic context data\n+    return {\n+      stepContext: context.inputData,\n+      parameters: this.parameters\n+    };\n+  }\n+\n+  /**\n+   * Execute the algorithm (override in generated classes)\n+   */\n+  protected async executeAlgorithm(input: AlgorithmInput): Promise<AlgorithmOutput> {\n+    // Default implementation - override in generated step classes\n+    throw new Error('Algorithm implementation required');\n+  }\n+\n+  /**\n+   * Validate algorithm inputs\n+   */\n+  protected validateInputs(input: AlgorithmInput): ValidationResult {\n+    // Basic validation - override for specific requirements\n+    return {\n+      valid: true,\n+      errors: []\n+    };\n+  }\n+\n+  /**\n+   * Validate algorithm outputs\n+   */\n+  protected validateOutputs(output: AlgorithmOutput): ValidationResult {\n+    // Basic validation - override for specific requirements\n+    return {\n+      valid: true,\n+      errors: []\n+    };\n+  }\n+}\n\\ No newline at end of file\n"
    },
    {
      "filepath": "packages/orgata-framework/src/index.ts",
      "oldHash": "",
      "newHash": "b5180c194cfe7afa2d44c191270f227c4eef6d93",
      "timestamp": "2025-07-23T21:16:42.667Z",
      "changeType": "content",
      "gitDiff": "diff --git a/packages/orgata-framework/src/index.ts b/packages/orgata-framework/src/index.ts\nnew file mode 100644\nindex 0000000..b5180c1\n--- /dev/null\n+++ b/packages/orgata-framework/src/index.ts\n@@ -0,0 +1,166 @@\n+/**\n+ * Orgata Framework - React-like framework for business processes\n+ * \n+ * Main entry point for the @orgata/framework package.\n+ * Exports all core classes, types, and utilities.\n+ * \n+ * Based on design specification:\n+ * - Framework Architecture: ../design-docs/008-orgata-framework/ORGATA_FRAMEWORK_ARCHITECTURE.md\n+ * - API Specification: ../design-docs/008-orgata-framework/FRAMEWORK_API_SPECIFICATION.md\n+ */\n+\n+// =============================================================================\n+// Core Classes\n+// =============================================================================\n+\n+export { Process } from './core/Process';\n+export { Step, HumanStep, AgentStep, AlgorithmStep } from './core/Step';\n+\n+// =============================================================================\n+// State Management\n+// =============================================================================\n+\n+export { ProcessState } from './state/ProcessState';\n+export {\n+  StepDataEvent,\n+  StepNavigationEvent,\n+  StepSkippedEvent,\n+  StatusChangeEvent,\n+  ExceptionEvent\n+} from './state/ProcessState';\n+\n+// =============================================================================\n+// Types and Interfaces\n+// =============================================================================\n+\n+export type {\n+  // Core Configuration Types\n+  ProcessConfig,\n+  StepConfig,\n+  HumanStepConfig,\n+  AgentStepConfig,\n+  AlgorithmStepConfig,\n+\n+  // Context and Execution Types\n+  ProcessContext,\n+  StepContext,\n+  BusinessContext,\n+  UserPermissions,\n+  UserPreferences,\n+\n+  // Result Types\n+  ProcessResult,\n+  StepResult,\n+  ProcessMetadata,\n+  StepMetadata,\n+  StepError,\n+  StepWarning,\n+\n+  // Form and UI Types\n+  FormModel,\n+  FormField,\n+  FieldValidation,\n+  FieldOption,\n+  ConditionalLogic,\n+  LayoutConfig,\n+  ValidationConfig,\n+  ComponentDefinition,\n+  ComponentProps,\n+  ComponentStyling,\n+  ComponentBehavior,\n+\n+  // AI Agent Types\n+  AgentPrompt,\n+  AgentContext,\n+  AgentResponse,\n+  AgentConstraints,\n+  PromptContext,\n+  PromptConstraints,\n+  BusinessData,\n+\n+  // Algorithm Types\n+  AlgorithmImplementation,\n+  AlgorithmParameters,\n+  AlgorithmInput,\n+  AlgorithmOutput,\n+\n+  // State Management Types\n+  StepData,\n+  ProcessEvent,\n+  ProcessException,\n+  ExceptionImpact,\n+  ExceptionResolution,\n+\n+  // Validation Types\n+  ValidationResult,\n+  ValidationError,\n+  ValidationWarning,\n+  ValidationRule,\n+  ValidationCondition,\n+\n+  // Override and Flexibility Types\n+  OverrideRequest,\n+  OverrideResult,\n+  OverrideImplementation,\n+  ConsequenceAnalysis,\n+  DataRequirement,\n+\n+  // Audit Types\n+  AuditEntry,\n+  AuditAction,\n+  AuditDetails,\n+  AuditImpact,\n+\n+  // Utility Types\n+  OutputRequirement,\n+  InputRequirement,\n+  UIConstraints,\n+  StepExecutor,\n+  ValidationFunction,\n+  EventHandler\n+} from './types';\n+\n+// =============================================================================\n+// Enums\n+// =============================================================================\n+\n+export {\n+  ProcessStatus,\n+  StepType,\n+  FieldType,\n+  OverrideType,\n+  ExceptionType\n+} from './types';\n+\n+// =============================================================================\n+// Re-exports\n+// =============================================================================\n+\n+export { EventEmitter } from './types';\n+\n+// =============================================================================\n+// Framework Version and Metadata\n+// =============================================================================\n+\n+export const FRAMEWORK_VERSION = '0.1.0';\n+export const FRAMEWORK_NAME = '@orgata/framework';\n+\n+export const FRAMEWORK_METADATA = {\n+  name: FRAMEWORK_NAME,\n+  version: FRAMEWORK_VERSION,\n+  description: 'React-like framework for business processes with complete flexibility',\n+  philosophy: 'Facilitate, Never Constrain',\n+  features: [\n+    'Immutable state management with event sourcing',\n+    'Complete audit trail and exception tracking',\n+    'AI-powered flexibility and override system',\n+    'Never rewrite history - forward-only updates',\n+    'Universal step skipping with manual data provision',\n+    'Three specialized step types: Human, Agent, Algorithm'\n+  ],\n+  designDocs: [\n+    '../design-docs/008-orgata-framework/ORGATA_FRAMEWORK_ARCHITECTURE.md',\n+    '../design-docs/008-orgata-framework/FRAMEWORK_API_SPECIFICATION.md',\n+    '../design-docs/008-orgata-framework/IMPLEMENTATION_PLAN.md'\n+  ]\n+} as const;\n\\ No newline at end of file\n"
    },
    {
      "filepath": "packages/orgata-framework/src/state/ProcessState.ts",
      "oldHash": "",
      "newHash": "62e692279dd34636c05593e673072a7ff6d29637",
      "timestamp": "2025-07-23T21:16:42.708Z",
      "changeType": "content",
      "gitDiff": "diff --git a/packages/orgata-framework/src/state/ProcessState.ts b/packages/orgata-framework/src/state/ProcessState.ts\nnew file mode 100644\nindex 0000000..62e6922\n--- /dev/null\n+++ b/packages/orgata-framework/src/state/ProcessState.ts\n@@ -0,0 +1,541 @@\n+/**\n+ * Immutable ProcessState with Event Sourcing for Orgata Framework\n+ * \n+ * Implements the core \"never rewrite history\" principle with event-sourced\n+ * state management and complete audit trail capabilities.\n+ * \n+ * Based on design specification:\n+ * - Framework Architecture: ../../design-docs/008-orgata-framework/ORGATA_FRAMEWORK_ARCHITECTURE.md\n+ * - Implementation Plan: ../../design-docs/008-orgata-framework/IMPLEMENTATION_PLAN.md\n+ */\n+\n+import { produce, immerable } from 'immer';\n+import { ProcessStatus } from '../types';\n+import type {\n+  ProcessEvent,\n+  ProcessException,\n+  StepData,\n+  AuditEntry,\n+  ValidationResult,\n+  DataRequirement\n+} from '../types';\n+import { ProcessEventBase } from '../types';\n+\n+// =============================================================================\n+// Core ProcessState Class (Immutable)\n+// =============================================================================\n+\n+export class ProcessState {\n+  [immerable] = true;\n+  readonly processId: string;\n+  readonly currentStepId: string | null;\n+  readonly status: ProcessStatus;\n+  readonly stepData: ReadonlyMap<string, StepData>;\n+  readonly history: readonly ProcessEvent[];\n+  readonly exceptions: readonly ProcessException[];\n+  readonly startedAt: Date;\n+  readonly lastUpdatedAt: Date;\n+\n+  private constructor(\n+    processId: string,\n+    currentStepId: string | null = null,\n+    status: ProcessStatus = ProcessStatus.NOT_STARTED,\n+    stepData: ReadonlyMap<string, StepData> = new Map(),\n+    history: readonly ProcessEvent[] = [],\n+    exceptions: readonly ProcessException[] = [],\n+    startedAt: Date = new Date(),\n+    lastUpdatedAt: Date = new Date()\n+  ) {\n+    this.processId = processId;\n+    this.currentStepId = currentStepId;\n+    this.status = status;\n+    this.stepData = stepData;\n+    this.history = history;\n+    this.exceptions = exceptions;\n+    this.startedAt = startedAt;\n+    this.lastUpdatedAt = lastUpdatedAt;\n+  }\n+\n+  // =============================================================================\n+  // Factory Methods\n+  // =============================================================================\n+\n+  /**\n+   * Create new ProcessState\n+   */\n+  static create(processId: string): ProcessState {\n+    const now = new Date();\n+    return new ProcessState(processId, null, ProcessStatus.NOT_STARTED, new Map(), [], [], now, now);\n+  }\n+\n+  // =============================================================================\n+  // State Queries\n+  // =============================================================================\n+\n+  /**\n+   * Get step data by ID\n+   */\n+  getStepData(stepId: string): StepData | undefined {\n+    return this.stepData.get(stepId);\n+  }\n+\n+  /**\n+   * Get step history for specific step\n+   */\n+  getStepHistory(stepId: string): ProcessEvent[] {\n+    return this.history.filter(event => \n+      'stepId' in event && event.stepId === stepId\n+    );\n+  }\n+\n+  /**\n+   * Check if step is completed\n+   */\n+  isStepCompleted(stepId: string): boolean {\n+    const stepData = this.stepData.get(stepId);\n+    return stepData?.validated === true;\n+  }\n+\n+  /**\n+   * Check if step is skipped\n+   */\n+  isStepSkipped(stepId: string): boolean {\n+    return this.history.some(event => \n+      event.type === 'step_skipped' && \n+      'stepId' in event && \n+      event.stepId === stepId\n+    );\n+  }\n+\n+  /**\n+   * Get complete audit trail\n+   */\n+  getAuditTrail(): AuditEntry[] {\n+    return this.history.map(event => this.eventToAuditEntry(event));\n+  }\n+\n+  // =============================================================================\n+  // Navigation Helpers\n+  // =============================================================================\n+\n+  /**\n+   * Check if can navigate to specific step\n+   */\n+  canGoToStep(stepId: string): boolean {\n+    // Framework philosophy: maximum flexibility\n+    // Users can always navigate to any step\n+    return true;\n+  }\n+\n+  /**\n+   * Check if can skip specific step\n+   */\n+  canSkipStep(stepId: string): boolean {\n+    // Framework philosophy: users can always skip steps\n+    return true;\n+  }\n+\n+  /**\n+   * Get next step (implementation dependent on step order)\n+   */\n+  getNextStep(): string | null {\n+    // This would be implemented based on process definition\n+    return null;\n+  }\n+\n+  /**\n+   * Get previous step (implementation dependent on step order)\n+   */\n+  getPreviousStep(): string | null {\n+    // This would be implemented based on process definition\n+    return null;\n+  }\n+\n+  // =============================================================================\n+  // Validation\n+  // =============================================================================\n+\n+  /**\n+   * Validate step data against requirements\n+   */\n+  validateStepData(stepId: string, data: any): ValidationResult {\n+    // Basic validation - can be extended\n+    return {\n+      valid: true,\n+      errors: []\n+    };\n+  }\n+\n+  /**\n+   * Check data requirements for step\n+   */\n+  checkDataRequirements(stepId: string): DataRequirement[] {\n+    // TODO: Implement based on step definitions\n+    return [];\n+  }\n+\n+  // =============================================================================\n+  // Immutable State Transitions\n+  // =============================================================================\n+\n+  /**\n+   * Create new state with step data\n+   */\n+  withStepData(stepId: string, data: StepData): ProcessState {\n+    const event = new StepDataEvent(\n+      this.generateEventId(),\n+      this.processId,\n+      new Date(),\n+      stepId,\n+      data\n+    );\n+\n+    return this.applyEvent(event);\n+  }\n+\n+  /**\n+   * Create new state with current step\n+   */\n+  withCurrentStep(stepId: string): ProcessState {\n+    const event = new StepNavigationEvent(\n+      this.generateEventId(),\n+      this.processId,\n+      new Date(),\n+      stepId,\n+      'navigation'\n+    );\n+\n+    return this.applyEvent(event);\n+  }\n+\n+  /**\n+   * Create new state with step navigation\n+   */\n+  withStepNavigation(stepId: string, reason: string): ProcessState {\n+    const event = new StepNavigationEvent(\n+      this.generateEventId(),\n+      this.processId,\n+      new Date(),\n+      stepId,\n+      reason\n+    );\n+\n+    return this.applyEvent(event);\n+  }\n+\n+  /**\n+   * Create new state with step skip\n+   */\n+  withStepSkip(stepId: string, reason: string, manualData?: any): ProcessState {\n+    const event = new StepSkippedEvent(\n+      this.generateEventId(),\n+      this.processId,\n+      new Date(),\n+      stepId,\n+      reason,\n+      manualData\n+    );\n+\n+    return this.applyEvent(event);\n+  }\n+\n+  /**\n+   * Create new state with exception\n+   */\n+  withException(exception: ProcessException): ProcessState {\n+    const event = new ExceptionEvent(\n+      this.generateEventId(),\n+      this.processId,\n+      new Date(),\n+      exception\n+    );\n+\n+    return this.applyEvent(event);\n+  }\n+\n+  /**\n+   * Create new state with status\n+   */\n+  withStatus(status: ProcessStatus): ProcessState {\n+    const event = new StatusChangeEvent(\n+      this.generateEventId(),\n+      this.processId,\n+      new Date(),\n+      status\n+    );\n+\n+    return this.applyEvent(event);\n+  }\n+\n+  // =============================================================================\n+  // Event Sourcing Implementation\n+  // =============================================================================\n+\n+  /**\n+   * Apply event to create new immutable state\n+   */\n+  private applyEvent(event: ProcessEvent): ProcessState {\n+    const newHistory = [...this.history, event];\n+    \n+    return produce(this, draft => {\n+      // Apply event-specific changes\n+      if (event instanceof StepDataEvent) {\n+        draft.stepData.set(event.stepId, event.data);\n+      } else if (event instanceof StepNavigationEvent) {\n+        draft.currentStepId = event.stepId;\n+      } else if (event instanceof StatusChangeEvent) {\n+        draft.status = event.status;\n+      } else if (event instanceof ExceptionEvent) {\n+        draft.exceptions.push(event.exception);\n+      }\n+      \n+      draft.history = newHistory;\n+      draft.lastUpdatedAt = event.timestamp;\n+    });\n+  }\n+\n+  /**\n+   * Convert event to audit entry\n+   */\n+  private eventToAuditEntry(event: ProcessEvent): AuditEntry {\n+    return {\n+      id: event.id,\n+      timestamp: event.timestamp,\n+      processId: event.processId,\n+      stepId: 'stepId' in event ? (event as any).stepId : undefined,\n+      userId: event.userId || 'system',\n+      action: {\n+        type: event.type,\n+        description: this.getEventDescription(event),\n+        automated: true\n+      },\n+      details: {\n+        before: null,\n+        after: this.getEventData(event),\n+        metadata: { eventType: event.type }\n+      },\n+      impact: {\n+        scope: 'step',\n+        severity: 'info',\n+        categories: [event.type]\n+      }\n+    };\n+  }\n+\n+  private getEventDescription(event: ProcessEvent): string {\n+    switch (event.type) {\n+      case 'step_data':\n+        return `Step data updated`;\n+      case 'step_navigation':\n+        return `Navigated to step`;\n+      case 'step_skipped':\n+        return `Step skipped`;\n+      case 'status_change':\n+        return `Process status changed`;\n+      case 'exception':\n+        return `Exception occurred`;\n+      default:\n+        return `Process event: ${event.type}`;\n+    }\n+  }\n+\n+  private getEventData(event: ProcessEvent): any {\n+    if (event instanceof StepDataEvent) {\n+      return event.data;\n+    } else if (event instanceof StepNavigationEvent) {\n+      return { stepId: event.stepId, reason: event.reason };\n+    } else if (event instanceof StepSkippedEvent) {\n+      return { stepId: event.stepId, reason: event.reason, manualData: event.manualData };\n+    } else if (event instanceof StatusChangeEvent) {\n+      return { status: event.status };\n+    } else if (event instanceof ExceptionEvent) {\n+      return event.exception;\n+    }\n+    return null;\n+  }\n+\n+  private generateEventId(): string {\n+    return Date.now().toString(36) + Math.random().toString(36).substring(2);\n+  }\n+}\n+\n+// =============================================================================\n+// Process Event Implementations\n+// =============================================================================\n+\n+export class StepDataEvent extends ProcessEventBase {\n+  readonly id: string;\n+  readonly processId: string;\n+  readonly timestamp: Date;\n+  readonly userId?: string;\n+  readonly type = 'step_data';\n+  readonly stepId: string;\n+  readonly data: StepData;\n+\n+  constructor(\n+    id: string,\n+    processId: string,\n+    timestamp: Date,\n+    stepId: string,\n+    data: StepData,\n+    userId?: string\n+  ) {\n+    super();\n+    this.id = id;\n+    this.processId = processId;\n+    this.timestamp = timestamp;\n+    this.stepId = stepId;\n+    this.data = data;\n+    this.userId = userId;\n+  }\n+\n+  apply(state: ProcessState): ProcessState {\n+    return state.withStepData(this.stepId, this.data);\n+  }\n+}\n+\n+export class StepNavigationEvent extends ProcessEventBase {\n+  readonly id: string;\n+  readonly processId: string;\n+  readonly timestamp: Date;\n+  readonly userId?: string;\n+  readonly type = 'step_navigation';\n+  readonly stepId: string;\n+  readonly reason: string;\n+  readonly data: { stepId: string; reason: string };\n+\n+  constructor(\n+    id: string,\n+    processId: string,\n+    timestamp: Date,\n+    stepId: string,\n+    reason: string,\n+    userId?: string\n+  ) {\n+    super();\n+    this.id = id;\n+    this.processId = processId;\n+    this.timestamp = timestamp;\n+    this.stepId = stepId;\n+    this.reason = reason;\n+    this.userId = userId;\n+    this.data = { stepId, reason };\n+  }\n+\n+  apply(state: ProcessState): ProcessState {\n+    return state.withCurrentStep(this.stepId);\n+  }\n+}\n+\n+export class StepSkippedEvent extends ProcessEventBase {\n+  readonly id: string;\n+  readonly processId: string;\n+  readonly timestamp: Date;\n+  readonly userId?: string;\n+  readonly type = 'step_skipped';\n+  readonly stepId: string;\n+  readonly reason: string;\n+  readonly manualData?: any;\n+  readonly data: { stepId: string; reason: string; manualData?: any };\n+\n+  constructor(\n+    id: string,\n+    processId: string,\n+    timestamp: Date,\n+    stepId: string,\n+    reason: string,\n+    manualData?: any,\n+    userId?: string\n+  ) {\n+    super();\n+    this.id = id;\n+    this.processId = processId;\n+    this.timestamp = timestamp;\n+    this.stepId = stepId;\n+    this.reason = reason;\n+    this.manualData = manualData;\n+    this.userId = userId;\n+    this.data = { stepId, reason, manualData };\n+  }\n+\n+  apply(state: ProcessState): ProcessState {\n+    // Create exception record for the skip\n+    const exception: ProcessException = {\n+      id: this.id,\n+      type: 'STEP_SKIPPED' as any,\n+      stepId: this.stepId,\n+      timestamp: this.timestamp,\n+      userId: this.userId || 'unknown',\n+      reason: this.reason,\n+      impact: {\n+        severity: 'low',\n+        affectedSteps: [],\n+        estimatedDelay: 0,\n+        riskFactors: ['manual_data_provided']\n+      },\n+      auditTrail: []\n+    };\n+\n+    return state.withException(exception);\n+  }\n+}\n+\n+export class StatusChangeEvent extends ProcessEventBase {\n+  readonly id: string;\n+  readonly processId: string;\n+  readonly timestamp: Date;\n+  readonly userId?: string;\n+  readonly type = 'status_change';\n+  readonly status: ProcessStatus;\n+  readonly data: { status: ProcessStatus };\n+\n+  constructor(\n+    id: string,\n+    processId: string,\n+    timestamp: Date,\n+    status: ProcessStatus,\n+    userId?: string\n+  ) {\n+    super();\n+    this.id = id;\n+    this.processId = processId;\n+    this.timestamp = timestamp;\n+    this.status = status;\n+    this.userId = userId;\n+    this.data = { status };\n+  }\n+\n+  apply(state: ProcessState): ProcessState {\n+    return state.withStatus(this.status);\n+  }\n+}\n+\n+export class ExceptionEvent extends ProcessEventBase {\n+  readonly id: string;\n+  readonly processId: string;\n+  readonly timestamp: Date;\n+  readonly userId?: string;\n+  readonly type = 'exception';\n+  readonly exception: ProcessException;\n+  readonly data: { exception: ProcessException };\n+\n+  constructor(\n+    id: string,\n+    processId: string,\n+    timestamp: Date,\n+    exception: ProcessException,\n+    userId?: string\n+  ) {\n+    super();\n+    this.id = id;\n+    this.processId = processId;\n+    this.timestamp = timestamp;\n+    this.exception = exception;\n+    this.userId = userId;\n+    this.data = { exception };\n+  }\n+\n+  apply(state: ProcessState): ProcessState {\n+    return state.withException(this.exception);\n+  }\n+}\n\\ No newline at end of file\n"
    },
    {
      "filepath": "packages/orgata-framework/src/types/index.ts",
      "oldHash": "",
      "newHash": "2c8222be7f70d2d6898d6990665b02e73dce0dc2",
      "timestamp": "2025-07-23T21:16:42.748Z",
      "changeType": "content",
      "gitDiff": "diff --git a/packages/orgata-framework/src/types/index.ts b/packages/orgata-framework/src/types/index.ts\nnew file mode 100644\nindex 0000000..2c8222b\n--- /dev/null\n+++ b/packages/orgata-framework/src/types/index.ts\n@@ -0,0 +1,664 @@\n+/**\n+ * Core types for Orgata Framework\n+ * \n+ * Based on design specification:\n+ * - Framework API Specification: ../../design-docs/008-orgata-framework/FRAMEWORK_API_SPECIFICATION.md\n+ */\n+\n+import { EventEmitter } from 'eventemitter3';\n+\n+// =============================================================================\n+// Core Enums and Primitives\n+// =============================================================================\n+\n+export enum ProcessStatus {\n+  NOT_STARTED = 'not_started',\n+  RUNNING = 'running', \n+  PAUSED = 'paused',\n+  COMPLETED = 'completed',\n+  FAILED = 'failed',\n+  CANCELLED = 'cancelled'\n+}\n+\n+export enum StepType {\n+  HUMAN = 'human',\n+  AGENT = 'agent', \n+  ALGORITHM = 'algorithm'\n+}\n+\n+export enum FieldType {\n+  TEXT = 'text',\n+  EMAIL = 'email',\n+  NUMBER = 'number',\n+  DATE = 'date',\n+  TEXTAREA = 'textarea',\n+  SELECT = 'select',\n+  MULTISELECT = 'multiselect',\n+  CHECKBOX = 'checkbox',\n+  RADIO = 'radio',\n+  FILE_UPLOAD = 'file_upload',\n+  CURRENCY = 'currency',\n+  PHONE = 'phone',\n+  URL = 'url',\n+  JSON = 'json',\n+  CUSTOM = 'custom'\n+}\n+\n+export enum OverrideType {\n+  SKIP_STEP = 'skip_step',\n+  MODIFY_UI = 'modify_ui',\n+  CHANGE_DATA = 'change_data', \n+  ALTER_FLOW = 'alter_flow',\n+  BYPASS_VALIDATION = 'bypass_validation'\n+}\n+\n+export enum ExceptionType {\n+  STEP_SKIPPED = 'step_skipped',\n+  VALIDATION_OVERRIDDEN = 'validation_overridden',\n+  MANUAL_DATA_PROVIDED = 'manual_data_provided',\n+  FLOW_MODIFIED = 'flow_modified',\n+  UI_BYPASSED = 'ui_bypassed'\n+}\n+\n+// =============================================================================\n+// Configuration Interfaces\n+// =============================================================================\n+\n+export interface ProcessConfig {\n+  name: string;\n+  description?: string;\n+  layer: 'L0' | 'L1' | 'L2';\n+  estimatedDuration?: string;\n+  metadata?: Record<string, any>;\n+  validation?: ProcessValidation;\n+  permissions?: ProcessPermissions;\n+}\n+\n+export interface StepConfig {\n+  id: string;\n+  name: string;\n+  description: string;\n+  type: StepType;\n+  metadata?: Record<string, any>;\n+}\n+\n+export interface HumanStepConfig extends StepConfig {\n+  model: FormModel;\n+  view: ComponentDefinition;\n+  validation?: ValidationRules;\n+}\n+\n+export interface AgentStepConfig extends StepConfig {\n+  prompt: AgentPrompt;\n+  context: AgentContext;\n+  constraints?: AgentConstraints;\n+}\n+\n+export interface AlgorithmStepConfig extends StepConfig {\n+  implementation: AlgorithmImplementation;\n+  parameters?: AlgorithmParameters;\n+}\n+\n+// =============================================================================\n+// Context and Execution Interfaces\n+// =============================================================================\n+\n+export interface ProcessContext {\n+  processId: string;\n+  userId: string;\n+  sessionId: string;\n+  environment: 'development' | 'staging' | 'production';\n+  businessContext: BusinessContext;\n+  permissions: UserPermissions;\n+  preferences: UserPreferences;\n+}\n+\n+export interface StepContext extends ProcessContext {\n+  stepId: string;\n+  stepType: StepType;\n+  inputData: any;\n+  previousStepResults: Map<string, StepResult>;\n+  requiredOutputs: OutputRequirement[];\n+  validationRules: ValidationRule[];\n+  startTime: Date;\n+  userAgent?: string;\n+}\n+\n+export interface BusinessContext {\n+  industry: string;\n+  businessSize: 'solo' | 'small' | 'medium' | 'enterprise';\n+  organizationId: string;\n+  currentProcesses: Map<string, any>;\n+  userRole: string;\n+}\n+\n+export interface UserPermissions {\n+  canSkipSteps: boolean;\n+  canOverrideValidation: boolean;\n+  canModifyProcess: boolean;\n+  canViewAuditTrail: boolean;\n+  allowedActions: string[];\n+}\n+\n+export interface UserPreferences {\n+  uiTheme: 'light' | 'dark';\n+  language: string;\n+  timezone: string;\n+  notificationSettings: NotificationSettings;\n+}\n+\n+export interface NotificationSettings {\n+  email: boolean;\n+  inApp: boolean;\n+  frequency: 'immediate' | 'hourly' | 'daily';\n+}\n+\n+// =============================================================================\n+// Result and Response Interfaces  \n+// =============================================================================\n+\n+export interface ProcessResult {\n+  success: boolean;\n+  processId: string;\n+  completedSteps: string[];\n+  finalData: any;\n+  metadata: ProcessMetadata;\n+  auditTrail: AuditEntry[];\n+  exceptions?: ProcessException[];\n+}\n+\n+export interface StepResult {\n+  success: boolean;\n+  data: any;\n+  metadata: StepMetadata;\n+  nextStepId?: string;\n+  errors?: StepError[];\n+  warnings?: StepWarning[];\n+}\n+\n+export interface ProcessMetadata {\n+  startedAt: Date;\n+  completedAt?: Date;\n+  duration?: number;\n+  executionMode: string;\n+  version: string;\n+}\n+\n+export interface StepMetadata {\n+  completedAt: Date;\n+  duration?: number;\n+  userAgent?: string;\n+  overrides?: OverrideRecord[];\n+  \n+  // Agent-specific metadata\n+  requiresHumanReview?: boolean;\n+  agentConfidence?: number;\n+  reasoning?: string;\n+  confidence?: number;\n+  requiresReview?: boolean;\n+  \n+  // Algorithm-specific metadata\n+  requiresManualReview?: boolean;\n+  algorithmVersion?: string;\n+  executionTime?: number;\n+  requiresManualIntervention?: boolean;\n+  error?: string;\n+}\n+\n+export interface StepError {\n+  code: string;\n+  message: string;\n+  field?: string;\n+  severity: 'error' | 'warning' | 'info';\n+}\n+\n+export interface StepWarning {\n+  code: string;\n+  message: string;\n+  suggestion?: string;\n+}\n+\n+// =============================================================================\n+// Form and UI Interfaces\n+// =============================================================================\n+\n+export interface FormModel {\n+  fields: FormField[];\n+  layout: LayoutConfig;\n+  validation: ValidationConfig;\n+  metadata: FormMetadata;\n+}\n+\n+export interface FormField {\n+  id: string;\n+  name: string;\n+  type: FieldType;\n+  label: string;\n+  placeholder?: string;\n+  helpText?: string;\n+  required: boolean;\n+  validation: FieldValidation[];\n+  defaultValue?: any;\n+  options?: FieldOption[];\n+  conditionalLogic?: ConditionalLogic;\n+}\n+\n+export interface FieldValidation {\n+  type: string;\n+  value?: any;\n+  message: string;\n+}\n+\n+export interface FieldOption {\n+  value: string;\n+  label: string;\n+  disabled?: boolean;\n+}\n+\n+export interface ConditionalLogic {\n+  condition: string;\n+  action: 'show' | 'hide' | 'require' | 'disable';\n+  dependsOn: string[];\n+}\n+\n+export interface LayoutConfig {\n+  type: string;\n+  columns: number;\n+  sections?: LayoutSection[];\n+}\n+\n+export interface LayoutSection {\n+  title: string;\n+  fields: string[];\n+  collapsible?: boolean;\n+}\n+\n+export interface ValidationConfig {\n+  strategy: 'on-submit' | 'on-blur' | 'real-time';\n+  showErrorsOn: 'always' | 'after-submit' | 'after-interaction';\n+}\n+\n+export interface FormMetadata {\n+  version: string;\n+  generatedFrom: string;\n+  customizations?: Record<string, any>;\n+}\n+\n+export interface ComponentDefinition {\n+  type: string;\n+  props: ComponentProps;\n+  children?: ComponentDefinition[];\n+  styling?: ComponentStyling;\n+  behavior?: ComponentBehavior;\n+}\n+\n+export interface ComponentProps {\n+  [key: string]: any;\n+}\n+\n+export interface ComponentStyling {\n+  className?: string;\n+  style?: Record<string, any>;\n+  theme?: string;\n+}\n+\n+export interface ComponentBehavior {\n+  onClick?: string;\n+  onChange?: string;\n+  onSubmit?: string;\n+  validation?: ValidationBehavior;\n+}\n+\n+export interface ValidationBehavior {\n+  realTime: boolean;\n+  debounceMs: number;\n+  showErrors: boolean;\n+}\n+\n+// =============================================================================\n+// AI Agent Interfaces\n+// =============================================================================\n+\n+export interface AgentPrompt {\n+  systemPrompt: string;\n+  userPrompt: string;\n+  context: PromptContext;\n+  constraints: PromptConstraints;\n+  examples?: PromptExample[];\n+}\n+\n+export interface PromptContext {\n+  businessDomain: string;\n+  expectedFormat: string;\n+  qualityCriteria: string[];\n+}\n+\n+export interface PromptConstraints {\n+  maxTokens: number;\n+  temperature: number;\n+  requireStructuredOutput: boolean;\n+}\n+\n+export interface PromptExample {\n+  input: string;\n+  output: string;\n+  explanation: string;\n+}\n+\n+export interface AgentContext {\n+  processContext: ProcessContext;\n+  stepContext: StepContext;\n+  businessData: BusinessData;\n+  previousResults: AgentResult[];\n+  availableTools: AgentTool[];\n+}\n+\n+export interface BusinessData {\n+  [key: string]: any;\n+}\n+\n+export interface AgentResult {\n+  stepId: string;\n+  result: any;\n+  confidence: number;\n+  timestamp: Date;\n+}\n+\n+export interface AgentTool {\n+  name: string;\n+  description: string;\n+  parameters: ToolParameter[];\n+}\n+\n+export interface ToolParameter {\n+  name: string;\n+  type: string;\n+  required: boolean;\n+  description: string;\n+}\n+\n+export interface AgentResponse {\n+  content: string;\n+  confidence: number;\n+  reasoning: string;\n+  structuredData?: any;\n+  suggestedActions?: SuggestedAction[];\n+  requiresHumanReview: boolean;\n+}\n+\n+export interface SuggestedAction {\n+  type: string;\n+  description: string;\n+  confidence: number;\n+}\n+\n+export interface AgentConstraints {\n+  timeout: number;\n+  retryAttempts: number;\n+  fallbackToHuman: boolean;\n+}\n+\n+// =============================================================================\n+// Algorithm Interfaces\n+// =============================================================================\n+\n+export interface AlgorithmImplementation {\n+  type: string;\n+  config: Record<string, any>;\n+  version: string;\n+}\n+\n+export interface AlgorithmParameters {\n+  [key: string]: any;\n+}\n+\n+export interface AlgorithmInput {\n+  [key: string]: any;\n+}\n+\n+export interface AlgorithmOutput {\n+  [key: string]: any;\n+}\n+\n+// =============================================================================\n+// State Management Interfaces\n+// =============================================================================\n+\n+export interface StepData {\n+  stepId: string;\n+  data: any;\n+  timestamp: Date;\n+  source: 'user' | 'agent' | 'algorithm' | 'manual';\n+  validated: boolean;\n+}\n+\n+export interface ProcessEvent {\n+  id: string;\n+  processId: string;\n+  timestamp: Date;\n+  userId?: string;\n+  type: string;\n+  data: any;\n+}\n+\n+export interface ProcessException {\n+  id: string;\n+  type: ExceptionType;\n+  stepId: string;\n+  timestamp: Date;\n+  userId: string;\n+  reason: string;\n+  impact: ExceptionImpact;\n+  resolution?: ExceptionResolution;\n+  auditTrail: AuditEntry[];\n+}\n+\n+export interface ExceptionImpact {\n+  severity: 'low' | 'medium' | 'high' | 'critical';\n+  affectedSteps: string[];\n+  estimatedDelay: number;\n+  riskFactors: string[];\n+}\n+\n+export interface ExceptionResolution {\n+  strategy: string;\n+  implementedBy: string;\n+  timestamp: Date;\n+  effectiveness: number;\n+}\n+\n+// =============================================================================\n+// Validation Interfaces\n+// =============================================================================\n+\n+export interface ValidationResult {\n+  valid: boolean;\n+  errors: ValidationError[];\n+  warnings?: ValidationWarning[];\n+}\n+\n+export interface ValidationError {\n+  field?: string;\n+  code: string;\n+  message: string;\n+  severity: 'error' | 'warning' | 'info';\n+}\n+\n+export interface ValidationWarning {\n+  field?: string;\n+  code: string;\n+  message: string;\n+  suggestion?: string;\n+}\n+\n+export interface ValidationRule {\n+  type: string;\n+  field?: string;\n+  condition: ValidationCondition;\n+  message: string;\n+  severity: 'error' | 'warning' | 'info';\n+}\n+\n+export interface ValidationCondition {\n+  operator: string;\n+  value: any;\n+  field?: string;\n+}\n+\n+export interface ProcessValidation {\n+  requireAllSteps: boolean;\n+  allowSkipping: boolean;\n+  customRules: ValidationRule[];\n+}\n+\n+export interface ProcessPermissions {\n+  execute: string[];\n+  modify: string[];\n+  view: string[];\n+  audit: string[];\n+}\n+\n+export interface ValidationRules {\n+  fields: Record<string, FieldValidation[]>;\n+  custom: ValidationRule[];\n+}\n+\n+// =============================================================================\n+// Override and Flexibility Interfaces\n+// =============================================================================\n+\n+export interface OverrideRequest {\n+  type: OverrideType;\n+  stepId: string;\n+  userMessage: string;\n+  currentContext: ProcessContext;\n+  proposedChange?: any;\n+}\n+\n+export interface OverrideResult {\n+  approved: boolean;\n+  implementation: OverrideImplementation;\n+  consequences: ConsequenceAnalysis;\n+  auditEntry: AuditEntry;\n+  alternatives?: OverrideAlternative[];\n+}\n+\n+export interface OverrideImplementation {\n+  type: string;\n+  changes: Record<string, any>;\n+  instructions: string;\n+}\n+\n+export interface ConsequenceAnalysis {\n+  riskLevel: 'low' | 'medium' | 'high' | 'critical';\n+  missingData: string[];\n+  affectedSteps: string[];\n+  suggestedMitigations: string[];\n+  dataRequirements: DataRequirement[];\n+}\n+\n+export interface DataRequirement {\n+  field: string;\n+  type: string;\n+  required: boolean;\n+  description: string;\n+  source?: string;\n+}\n+\n+export interface OverrideAlternative {\n+  description: string;\n+  implementation: OverrideImplementation;\n+  riskLevel: 'low' | 'medium' | 'high';\n+}\n+\n+export interface OverrideRecord {\n+  type: OverrideType;\n+  timestamp: Date;\n+  reason: string;\n+  implementation: string;\n+}\n+\n+// =============================================================================\n+// Audit and Tracking Interfaces\n+// =============================================================================\n+\n+export interface AuditEntry {\n+  id: string;\n+  timestamp: Date;\n+  processId: string;\n+  stepId?: string;\n+  userId: string;\n+  action: AuditAction;\n+  details: AuditDetails;\n+  impact: AuditImpact;\n+}\n+\n+export interface AuditAction {\n+  type: string;\n+  description: string;\n+  automated: boolean;\n+}\n+\n+export interface AuditDetails {\n+  before?: any;\n+  after?: any;\n+  metadata: Record<string, any>;\n+}\n+\n+export interface AuditImpact {\n+  scope: 'step' | 'process' | 'system';\n+  severity: 'info' | 'warning' | 'error' | 'critical';\n+  categories: string[];\n+}\n+\n+// =============================================================================\n+// Requirement Interfaces\n+// =============================================================================\n+\n+export interface OutputRequirement {\n+  name: string;\n+  type: string;\n+  required: boolean;\n+  description: string;\n+  validation?: ValidationRule[];\n+}\n+\n+export interface InputRequirement {\n+  name: string;\n+  type: string;\n+  required: boolean;\n+  source: string;\n+  transformation?: string;\n+}\n+\n+export interface UIConstraints {\n+  allowFreeForm: boolean;\n+  skipValidation: boolean;\n+  maxFields?: number;\n+  requiredFields: string[];\n+}\n+\n+// =============================================================================\n+// Utility Types\n+// =============================================================================\n+\n+export type StepExecutor = (context: StepContext) => Promise<StepResult>;\n+export type ValidationFunction = (data: any) => ValidationResult;\n+export type EventHandler = (event: ProcessEvent) => void;\n+\n+// =============================================================================\n+// Abstract Base Classes (for implementation)\n+// =============================================================================\n+\n+export abstract class ProcessEventBase {\n+  abstract readonly id: string;\n+  abstract readonly processId: string;\n+  abstract readonly timestamp: Date;\n+  abstract readonly userId?: string;\n+  abstract readonly type: string;\n+  \n+  abstract apply(state: any): any;\n+}\n+\n+// Re-export EventEmitter for convenience\n+export { EventEmitter };\n\\ No newline at end of file\n"
    },
    {
      "filepath": "packages/orgata-framework/tsconfig.json",
      "oldHash": "",
      "newHash": "bbaa0df718a2e40d0546a4f072a99a960b6a91bd",
      "timestamp": "2025-07-23T21:16:42.786Z",
      "changeType": "content",
      "gitDiff": "diff --git a/packages/orgata-framework/tsconfig.json b/packages/orgata-framework/tsconfig.json\nnew file mode 100644\nindex 0000000..bbaa0df\n--- /dev/null\n+++ b/packages/orgata-framework/tsconfig.json\n@@ -0,0 +1,34 @@\n+{\n+  \"compilerOptions\": {\n+    \"target\": \"ES2022\",\n+    \"module\": \"ESNext\",\n+    \"moduleResolution\": \"bundler\",\n+    \"lib\": [\"ES2022\"],\n+    \"declaration\": true,\n+    \"declarationMap\": true,\n+    \"sourceMap\": true,\n+    \"outDir\": \"./dist\",\n+    \"rootDir\": \"./src\",\n+    \"strict\": true,\n+    \"esModuleInterop\": true,\n+    \"skipLibCheck\": true,\n+    \"forceConsistentCasingInFileNames\": true,\n+    \"resolveJsonModule\": true,\n+    \"allowSyntheticDefaultImports\": true,\n+    \"experimentalDecorators\": true,\n+    \"emitDecoratorMetadata\": true,\n+    \"baseUrl\": \"./src\",\n+    \"paths\": {\n+      \"@/*\": [\"./*\"]\n+    }\n+  },\n+  \"include\": [\n+    \"src/**/*\"\n+  ],\n+  \"exclude\": [\n+    \"node_modules\",\n+    \"dist\",\n+    \"**/*.test.ts\",\n+    \"**/*.spec.ts\"\n+  ]\n+}\n\\ No newline at end of file\n"
    },
    {
      "filepath": "packages/orgata-framework/vitest.config.ts",
      "oldHash": "",
      "newHash": "23d8eb5960889f33c090e1919e6a0471075c1b5e",
      "timestamp": "2025-07-23T21:16:42.827Z",
      "changeType": "content",
      "gitDiff": "diff --git a/packages/orgata-framework/vitest.config.ts b/packages/orgata-framework/vitest.config.ts\nnew file mode 100644\nindex 0000000..23d8eb5\n--- /dev/null\n+++ b/packages/orgata-framework/vitest.config.ts\n@@ -0,0 +1,14 @@\n+import { defineConfig } from 'vitest/config';\n+import path from 'path';\n+\n+export default defineConfig({\n+  test: {\n+    globals: true,\n+    environment: 'node',\n+  },\n+  resolve: {\n+    alias: {\n+      '@': path.resolve(__dirname, './src'),\n+    },\n+  },\n+});\n\\ No newline at end of file\n"
    },
    {
      "filepath": "test-framework-generation.ts",
      "oldHash": "",
      "newHash": "19a3e38b8a16d2fda8cf2982e4a6c689d189b1bc",
      "timestamp": "2025-07-23T21:16:42.866Z",
      "changeType": "content",
      "gitDiff": "diff --git a/test-framework-generation.ts b/test-framework-generation.ts\nnew file mode 100755\nindex 0000000..19a3e38\n--- /dev/null\n+++ b/test-framework-generation.ts\n@@ -0,0 +1,551 @@\n+#!/usr/bin/env npx tsx\n+\n+/**\n+ * Test script to demonstrate Orgata Framework code generation\n+ * \n+ * This script takes a BUSY file and generates TypeScript framework code\n+ * using the new Orgata Framework approach instead of YAML output.\n+ */\n+\n+import { promises as fs } from 'fs';\n+import path from 'path';\n+import { BusyCompiler } from './compiler/src/index.js';\n+\n+// Simple content analyzer for demo purposes\n+class SimpleContentAnalyzer {\n+  analyzeStepType(step: any): 'human' | 'agent' | 'algorithm' {\n+    // Use execution_type from BUSY file if available\n+    if (step.execution_type === 'human') return 'human';\n+    if (step.execution_type === 'algorithmic') return 'algorithm';\n+    \n+    // Infer from description patterns\n+    const description = step.description.toLowerCase();\n+    \n+    if (description.includes('assess') || description.includes('analyze') || description.includes('qualify')) {\n+      return step.execution_type === 'human' ? 'human' : 'agent';\n+    }\n+    \n+    if (description.includes('generate') || description.includes('process') || description.includes('send')) {\n+      return 'algorithm';\n+    }\n+    \n+    return step.execution_type === 'human' ? 'human' : 'algorithm';\n+  }\n+  \n+  extractFields(step: any): any[] {\n+    const fields: any[] = [];\n+    \n+    // Extract fields based on step type and description\n+    if (step.name === 'qualify_lead') {\n+      fields.push(\n+        { name: 'qualificationScore', type: 'NUMBER', label: 'Qualification Score (1-10)', required: true },\n+        { name: 'budgetMatch', type: 'CHECKBOX', label: 'Budget matches requirements', required: true },\n+        { name: 'timelineFeasible', type: 'CHECKBOX', label: 'Timeline is feasible', required: true },\n+        { name: 'styleAlignment', type: 'CHECKBOX', label: 'Style alignment confirmed', required: true },\n+        { name: 'nextAction', type: 'SELECT', label: 'Next Action', required: true, \n+          options: [\n+            { value: 'send_portfolio', label: 'Send Portfolio & Pricing' },\n+            { value: 'schedule_consultation', label: 'Schedule Consultation' },\n+            { value: 'nurture', label: 'Add to Nurture Campaign' },\n+            { value: 'disqualify', label: 'Politely Decline' }\n+          ]\n+        },\n+        { name: 'notes', type: 'TEXTAREA', label: 'Qualification Notes', required: false }\n+      );\n+    }\n+    \n+    if (step.name === 'conduct_consultation') {\n+      fields.push(\n+        { name: 'eventType', type: 'SELECT', label: 'Event Type', required: true,\n+          options: [\n+            { value: 'wedding', label: 'Wedding' },\n+            { value: 'engagement', label: 'Engagement' },\n+            { value: 'portrait', label: 'Portrait Session' },\n+            { value: 'family', label: 'Family Photos' },\n+            { value: 'corporate', label: 'Corporate Event' }\n+          ]\n+        },\n+        { name: 'eventDate', type: 'DATE', label: 'Event Date', required: true },\n+        { name: 'budget', type: 'CURRENCY', label: 'Client Budget', required: true },\n+        { name: 'guestCount', type: 'NUMBER', label: 'Expected Guest Count', required: false },\n+        { name: 'venue', type: 'TEXT', label: 'Venue/Location', required: true },\n+        { name: 'consultationOutcome', type: 'SELECT', label: 'Consultation Outcome', required: true,\n+          options: [\n+            { value: 'booking_confirmed', label: 'Booking Confirmed' },\n+            { value: 'follow_up_needed', label: 'Follow-up Required' },\n+            { value: 'price_objection', label: 'Price Objection' },\n+            { value: 'not_a_fit', label: 'Not a Good Fit' }\n+          ]\n+        },\n+        { name: 'consultationNotes', type: 'TEXTAREA', label: 'Consultation Notes', required: false }\n+      );\n+    }\n+    \n+    return fields;\n+  }\n+}\n+\n+// Simple template renderer\n+class SimpleTemplateRenderer {\n+  renderProcessClass(processName: string, steps: any[]): string {\n+    const className = this.toPascalCase(processName);\n+    \n+    return `/**\n+ * ${processName} Process\n+ * \n+ * Generated from: inquiry-to-booking.busy\n+ * Layer: L0\n+ * \n+ * 🔗 Design Source: design-docs/008-orgata-framework/ORGATA_FRAMEWORK_ARCHITECTURE.md\n+ */\n+\n+import { Process, ProcessConfig, ProcessContext, ProcessResult } from '@orgata/framework';\n+${steps.map(step => `import { ${this.toPascalCase(step.name)}Step } from './steps/${this.toKebabCase(step.name)}-step';`).join('\\n')}\n+\n+export class ${className}Process extends Process {\n+  constructor() {\n+    super({\n+      name: \"${processName}\",\n+      description: \"End-to-end process from initial inquiry to confirmed booking\",\n+      layer: \"L0\",\n+      estimatedDuration: \"2-3 hours\",\n+      metadata: {\n+        generatedFrom: \"inquiry-to-booking.busy\",\n+        generatedAt: \"${new Date().toISOString()}\",\n+        busyVersion: \"1.0.0\"\n+      }\n+    });\n+    \n+    // Add all steps in sequence\n+${steps.map(step => `    this.addStep(new ${this.toPascalCase(step.name)}Step());`).join('\\n')}\n+  }\n+  \n+  async execute(context: ProcessContext): Promise<ProcessResult> {\n+    // Framework handles step-by-step execution with complete flexibility\n+    // Users can skip steps, go back, or provide manual data at any point\n+    return await this.executeSteps(context);\n+  }\n+}`;\n+  }\n+  \n+  renderHumanStep(step: any, fields: any[]): string {\n+    const className = this.toPascalCase(step.name);\n+    \n+    return `/**\n+ * ${step.name} - ${step.description}\n+ * \n+ * Human interaction step with flexible UI and complete override capabilities.\n+ * \n+ * 🔗 Design Source: design-docs/008-orgata-framework/FRAMEWORK_API_SPECIFICATION.md\n+ */\n+\n+import { HumanStep, HumanStepConfig, StepContext, StepResult, FieldType } from '@orgata/framework';\n+\n+export class ${className}Step extends HumanStep {\n+  constructor() {\n+    super({\n+      id: '${step.name}',\n+      name: '${step.name.replace(/_/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase())}',\n+      description: '${step.description}',\n+      type: 'human',\n+      model: {\n+        fields: [\n+${fields.map(field => this.renderField(field)).join(',\\n')}\n+        ],\n+        layout: {\n+          type: 'single-column',\n+          columns: 1\n+        },\n+        validation: {\n+          strategy: 'on-blur',\n+          showErrorsOn: 'after-interaction'\n+        },\n+        metadata: {\n+          version: '1.0.0',\n+          generatedFrom: 'inquiry-to-booking.busy'\n+        }\n+      },\n+      view: {\n+        type: 'form',\n+        props: {\n+          allowFreeForm: true,  // Framework philosophy: never constrain\n+          showSkipOption: true,\n+          enableManualDataEntry: true\n+        },\n+        styling: {\n+          className: 'orgata-human-step-form'\n+        },\n+        behavior: {\n+          validation: {\n+            realTime: false,\n+            debounceMs: 500,\n+            showErrors: true\n+          }\n+        }\n+      }\n+    });\n+  }\n+  \n+  async execute(context: StepContext): Promise<StepResult> {\n+    // Framework handles UI rendering and data collection\n+    // Users can always skip this step or provide manual data\n+    return await super.execute(context);\n+  }\n+  \n+  // Override to add custom business logic if needed\n+  protected async processUserInput(input: any, context: StepContext): Promise<any> {\n+    // Add any custom processing for ${step.name}\n+    // TODO: Implement business logic based on: ${step.description}\n+    \n+    return input;\n+  }\n+}`;\n+  }\n+  \n+  renderAlgorithmStep(step: any): string {\n+    const className = this.toPascalCase(step.name);\n+    \n+    return `/**\n+ * ${step.name} - ${step.description}\n+ * \n+ * Algorithm step with automated processing and manual override capability.\n+ * \n+ * 🔗 Design Source: design-docs/008-orgata-framework/FRAMEWORK_API_SPECIFICATION.md\n+ */\n+\n+import { AlgorithmStep, AlgorithmStepConfig, StepContext, StepResult, AlgorithmInput, AlgorithmOutput } from '@orgata/framework';\n+\n+export class ${className}Step extends AlgorithmStep {\n+  constructor() {\n+    super({\n+      id: '${step.name}',\n+      name: '${step.name.replace(/_/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase())}',\n+      description: '${step.description}',\n+      type: 'algorithm',\n+      implementation: {\n+        type: '${step.algorithm || 'custom'}',\n+        version: '1.0.0',\n+        config: {\n+          // Algorithm configuration\n+          timeout: 30000,\n+          retryAttempts: 3\n+        }\n+      },\n+      parameters: {\n+        // Add algorithm parameters here\n+      }\n+    });\n+  }\n+  \n+  async execute(context: StepContext): Promise<StepResult> {\n+    // Framework provides complete flexibility - users can skip or provide manual data\n+    return await super.execute(context);\n+  }\n+  \n+  protected async executeAlgorithm(input: AlgorithmInput): Promise<AlgorithmOutput> {\n+    // TODO: Implement algorithm for: ${step.description}\n+    // \n+    // Algorithm type: ${step.algorithm || 'custom'}\n+    // Estimated duration: ${step.estimated_duration || 'unknown'}\n+    //\n+    // Framework ensures users can always override this with manual data\n+    \n+    throw new Error('Algorithm implementation required for ${step.name}');\n+  }\n+  \n+  protected extractInputs(context: StepContext): AlgorithmInput {\n+    // Extract required inputs from previous steps\n+    return {\n+      // TODO: Map inputs based on step requirements\n+      stepContext: context.inputData,\n+      parameters: this.parameters\n+    };\n+  }\n+}`;\n+  }\n+  \n+  renderAgentStep(step: any): string {\n+    const className = this.toPascalCase(step.name);\n+    \n+    return `/**\n+ * ${step.name} - ${step.description}\n+ * \n+ * AI Agent step with intelligent processing and human review capability.\n+ * \n+ * 🔗 Design Source: design-docs/008-orgata-framework/FRAMEWORK_API_SPECIFICATION.md\n+ */\n+\n+import { AgentStep, AgentStepConfig, StepContext, StepResult, AgentResponse } from '@orgata/framework';\n+\n+export class ${className}Step extends AgentStep {\n+  constructor() {\n+    super({\n+      id: '${step.name}',\n+      name: '${step.name.replace(/_/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase())}',\n+      description: '${step.description}',\n+      type: 'agent',\n+      prompt: {\n+        systemPrompt: \\`You are an expert assistant helping with ${step.description.toLowerCase()}. \n+        Provide thorough analysis and actionable recommendations.\\`,\n+        userPrompt: \\`Please ${step.description.toLowerCase()} based on the provided context: {{context}}\\`,\n+        context: {\n+          businessDomain: 'photography',\n+          expectedFormat: 'structured_data',\n+          qualityCriteria: ['accuracy', 'completeness', 'actionability']\n+        },\n+        constraints: {\n+          maxTokens: 1000,\n+          temperature: 0.3,\n+          requireStructuredOutput: true\n+        }\n+      },\n+      context: {\n+        // Agent context configuration\n+      },\n+      constraints: {\n+        timeout: 30000,\n+        retryAttempts: 3,\n+        fallbackToHuman: true  // Framework philosophy: always provide escape hatch\n+      }\n+    });\n+  }\n+  \n+  async execute(context: StepContext): Promise<StepResult> {\n+    // Framework provides flexibility - users can skip or override AI results\n+    return await super.execute(context);\n+  }\n+  \n+  protected async buildContextualPrompt(context: StepContext): Promise<string> {\n+    // Build prompt with relevant context from previous steps\n+    const contextData = this.extractRelevantContext(context);\n+    \n+    return this.prompt.userPrompt.replace(/\\\\{\\\\{([^}]+)\\\\}\\\\}/g, (match, key) => {\n+      return contextData[key] || match;\n+    });\n+  }\n+  \n+  protected extractRelevantContext(context: StepContext): Record<string, any> {\n+    // TODO: Extract relevant data for ${step.description}\n+    return {\n+      context: JSON.stringify(context.inputData),\n+      businessContext: context.businessContext\n+    };\n+  }\n+}`;\n+  }\n+  \n+  private renderField(field: any): string {\n+    const options = field.options ? `\\n            options: [\\n${field.options.map((opt: any) => `              { value: '${opt.value}', label: '${opt.label}' }`).join(',\\n')}\\n            ],` : '';\n+    \n+    return `          {\n+            id: '${field.name}',\n+            name: '${field.name}',\n+            type: FieldType.${field.type},\n+            label: '${field.label}',\n+            required: ${field.required},${options}\n+            validation: []\n+          }`;\n+  }\n+  \n+  private toPascalCase(str: string): string {\n+    return str.replace(/(^|[_-])([a-z])/g, (match, sep, letter) => letter.toUpperCase());\n+  }\n+  \n+  private toKebabCase(str: string): string {\n+    return str.replace(/_/g, '-').toLowerCase();\n+  }\n+}\n+\n+async function generateFrameworkCode() {\n+  console.log('🚀 Testing Orgata Framework Code Generation\\n');\n+  \n+  try {\n+    // Step 1: Parse BUSY file with existing compiler\n+    console.log('📖 Parsing BUSY file...');\n+    const compiler = new BusyCompiler();\n+    const busyFilePath = './examples/solo-photography-business/L0/client-operations/playbooks/inquiry-to-booking.busy';\n+    \n+    const result = await compiler.compile(busyFilePath);\n+    const busyFile = result.buildResult.busyFiles[0];\n+    \n+    if (!busyFile) {\n+      throw new Error('Failed to parse BUSY file');\n+    }\n+    \n+    console.log(`✅ Parsed: ${busyFile.ast.playbook.name}\\n`);\n+    \n+    // Step 2: Analyze content for framework generation\n+    console.log('🔍 Analyzing content for framework generation...');\n+    const analyzer = new SimpleContentAnalyzer();\n+    const renderer = new SimpleTemplateRenderer();\n+    \n+    const steps = busyFile.ast.playbook.steps.map((step: any) => ({\n+      ...step,\n+      stepType: analyzer.analyzeStepType(step),\n+      fields: analyzer.extractFields(step)\n+    }));\n+    \n+    console.log('Steps analyzed:');\n+    steps.forEach((step: any) => {\n+      console.log(`  - ${step.name}: ${step.stepType} step`);\n+    });\n+    console.log('');\n+    \n+    // Step 3: Generate TypeScript framework code\n+    console.log('⚡ Generating TypeScript framework code...\\n');\n+    \n+    const outputDir = './generated-framework-code';\n+    await fs.mkdir(outputDir, { recursive: true });\n+    await fs.mkdir(path.join(outputDir, 'steps'), { recursive: true });\n+    \n+    // Generate main process class\n+    const processCode = renderer.renderProcessClass(\n+      busyFile.ast.playbook.name,\n+      steps\n+    );\n+    await fs.writeFile(\n+      path.join(outputDir, 'inquiry-to-booking-process.ts'),\n+      processCode\n+    );\n+    console.log('✅ Generated: inquiry-to-booking-process.ts');\n+    \n+    // Generate step files\n+    for (const step of steps) {\n+      let stepCode: string;\n+      \n+      switch (step.stepType) {\n+        case 'human':\n+          stepCode = renderer.renderHumanStep(step, step.fields);\n+          break;\n+        case 'algorithm':\n+          stepCode = renderer.renderAlgorithmStep(step);\n+          break;\n+        case 'agent':\n+          stepCode = renderer.renderAgentStep(step);\n+          break;\n+        default:\n+          continue;\n+      }\n+      \n+      const fileName = `${step.name.replace(/_/g, '-')}-step.ts`;\n+      await fs.writeFile(path.join(outputDir, 'steps', fileName), stepCode);\n+      console.log(`✅ Generated: steps/${fileName}`);\n+    }\n+    \n+    // Generate index file\n+    const indexCode = `/**\n+ * Inquiry to Booking Process - Generated Framework Code\n+ * \n+ * 🔗 Design Source: design-docs/008-orgata-framework/ORGATA_FRAMEWORK_ARCHITECTURE.md\n+ */\n+\n+export { InquiryToBookingProcess } from './inquiry-to-booking-process';\n+export * from './steps/acknowledge-inquiry-step';\n+export * from './steps/qualify-lead-step';\n+export * from './steps/send-portfolio-and-pricing-step';\n+export * from './steps/schedule-consultation-step';\n+export * from './steps/conduct-consultation-step';\n+export * from './steps/process-booking-step';\n+\n+// Process metadata\n+export const PROCESS_METADATA = {\n+  name: 'inquiry-to-booking',\n+  version: '1.0.0',\n+  generatedAt: '${new Date().toISOString()}',\n+  busySource: 'inquiry-to-booking.busy',\n+  framework: '@orgata/framework'\n+};`;\n+    \n+    await fs.writeFile(path.join(outputDir, 'index.ts'), indexCode);\n+    console.log('✅ Generated: index.ts');\n+    \n+    // Generate README\n+    const readmeCode = `# Inquiry to Booking Process\n+\n+Generated TypeScript framework code from \\`inquiry-to-booking.busy\\`.\n+\n+## Overview\n+\n+This process implements the complete customer journey from initial inquiry to confirmed booking using the Orgata Framework.\n+\n+## Framework Features Demonstrated\n+\n+- **Complete Flexibility**: Users can skip any step or provide manual data\n+- **Immutable State**: All changes tracked with event sourcing\n+- **Intelligent UI**: Generated forms with field validation\n+- **AI Integration**: Agent steps for intelligent processing\n+- **Algorithm Steps**: Automated processing with manual override\n+\n+## Usage\n+\n+\\`\\`\\`typescript\n+import { InquiryToBookingProcess } from './';\n+import { ProcessContext } from '@orgata/framework';\n+\n+const process = new InquiryToBookingProcess();\n+\n+const context: ProcessContext = {\n+  processId: 'inquiry-001',\n+  userId: 'photographer-1',\n+  sessionId: 'session-123',\n+  environment: 'production',\n+  businessContext: {\n+    industry: 'photography',\n+    businessSize: 'solo',\n+    organizationId: 'solo-photo-biz'\n+  },\n+  permissions: {\n+    canSkipSteps: true,\n+    canOverrideValidation: true,\n+    canModifyProcess: false,\n+    canViewAuditTrail: true\n+  }\n+};\n+\n+const result = await process.execute(context);\n+\\`\\`\\`\n+\n+## Generated Files\n+\n+- \\`inquiry-to-booking-process.ts\\` - Main process class\n+- \\`steps/\\` - Individual step implementations\n+- \\`index.ts\\` - Module exports\n+\n+## Framework Philosophy\n+\n+This code follows the Orgata Framework principle of **\"Facilitate, Never Constrain\"**:\n+\n+- Users can skip any step and provide manual data\n+- Complete audit trail of all actions\n+- Flexible UI that adapts to user needs\n+- AI assistance with human oversight\n+- Never rewrite history - only forward progression\n+\n+Generated on: ${new Date().toISOString()}\n+`;\n+    \n+    await fs.writeFile(path.join(outputDir, 'README.md'), readmeCode);\n+    console.log('✅ Generated: README.md');\n+    \n+    console.log('\\n🎉 Framework code generation complete!');\n+    console.log(`📁 Output directory: ${outputDir}`);\n+    console.log('\\n📋 Summary:');\n+    console.log(`   • 1 Process class`);\n+    console.log(`   • ${steps.length} Step classes`);\n+    console.log(`   • ${steps.filter((s: any) => s.stepType === 'human').length} Human steps (with generated UI)`);\n+    console.log(`   • ${steps.filter((s: any) => s.stepType === 'algorithm').length} Algorithm steps`);\n+    console.log(`   • ${steps.filter((s: any) => s.stepType === 'agent').length} Agent steps`);\n+    console.log('\\n🔧 Next steps:');\n+    console.log('   1. Review generated TypeScript code');\n+    console.log('   2. Implement TODO items in algorithm/agent steps');\n+    console.log('   3. Test with Orgata Framework runtime');\n+    console.log('   4. Customize UI components as needed');\n+    \n+  } catch (error) {\n+    console.error('❌ Error generating framework code:', error);\n+    process.exit(1);\n+  }\n+}\n+\n+// Run the test\n+generateFrameworkCode();\n\\ No newline at end of file\n"
    }
  ],
  "results": [
    {
      "classification": "required",
      "confidence": 0,
      "reasoning": "LLM analysis unavailable - manual review required",
      "contradictions": [
        "LLM analysis failed: LLM client not configured"
      ],
      "requiresReview": true,
      "metadata": {
        "sourceFile": "packages/orgata-framework/README.md",
        "targetFile": "design-docs/008-orgata-framework/ORGATA_FRAMEWORK_ARCHITECTURE.md",
        "timestamp": "2025-07-23T21:16:42.874Z",
        "llmModel": "gpt-4"
      }
    },
    {
      "classification": "required",
      "confidence": 0,
      "reasoning": "LLM analysis unavailable - manual review required",
      "contradictions": [
        "LLM analysis failed: LLM client not configured"
      ],
      "requiresReview": true,
      "metadata": {
        "sourceFile": "packages/orgata-framework/package.json",
        "targetFile": "design-docs/008-orgata-framework/FRAMEWORK_API_SPECIFICATION.md",
        "timestamp": "2025-07-23T21:16:42.875Z",
        "llmModel": "gpt-4"
      }
    },
    {
      "classification": "required",
      "confidence": 0,
      "reasoning": "LLM analysis unavailable - manual review required",
      "contradictions": [
        "LLM analysis failed: LLM client not configured"
      ],
      "requiresReview": true,
      "metadata": {
        "sourceFile": "packages/orgata-framework/src/core/Process.ts",
        "targetFile": "design-docs/008-orgata-framework/ORGATA_FRAMEWORK_ARCHITECTURE.md",
        "timestamp": "2025-07-23T21:16:42.875Z",
        "llmModel": "gpt-4"
      }
    },
    {
      "classification": "required",
      "confidence": 0,
      "reasoning": "LLM analysis unavailable - manual review required",
      "contradictions": [
        "LLM analysis failed: LLM client not configured"
      ],
      "requiresReview": true,
      "metadata": {
        "sourceFile": "packages/orgata-framework/src/core/Step.ts",
        "targetFile": "design-docs/008-orgata-framework/FRAMEWORK_API_SPECIFICATION.md",
        "timestamp": "2025-07-23T21:16:42.876Z",
        "llmModel": "gpt-4"
      }
    },
    {
      "classification": "required",
      "confidence": 0,
      "reasoning": "LLM analysis unavailable - manual review required",
      "contradictions": [
        "LLM analysis failed: LLM client not configured"
      ],
      "requiresReview": true,
      "metadata": {
        "sourceFile": "packages/orgata-framework/src/index.ts",
        "targetFile": "design-docs/008-orgata-framework/FRAMEWORK_API_SPECIFICATION.md",
        "timestamp": "2025-07-23T21:16:42.876Z",
        "llmModel": "gpt-4"
      }
    },
    {
      "classification": "required",
      "confidence": 0,
      "reasoning": "LLM analysis unavailable - manual review required",
      "contradictions": [
        "LLM analysis failed: LLM client not configured"
      ],
      "requiresReview": true,
      "metadata": {
        "sourceFile": "packages/orgata-framework/src/state/ProcessState.ts",
        "targetFile": "design-docs/008-orgata-framework/ORGATA_FRAMEWORK_ARCHITECTURE.md",
        "timestamp": "2025-07-23T21:16:42.876Z",
        "llmModel": "gpt-4"
      }
    },
    {
      "classification": "required",
      "confidence": 0,
      "reasoning": "LLM analysis unavailable - manual review required",
      "contradictions": [
        "LLM analysis failed: LLM client not configured"
      ],
      "requiresReview": true,
      "metadata": {
        "sourceFile": "packages/orgata-framework/src/types/index.ts",
        "targetFile": "design-docs/008-orgata-framework/FRAMEWORK_API_SPECIFICATION.md",
        "timestamp": "2025-07-23T21:16:42.877Z",
        "llmModel": "gpt-4"
      }
    }
  ],
  "autoApplied": 0,
  "reviewed": 7,
  "rejected": 0,
  "mode": "in_place"
}